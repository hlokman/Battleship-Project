(()=>{"use strict";var n={982:(n,e,t)=>{t.d(e,{Z:()=>g});var r=t(537),i=t.n(r),o=t(645),a=t.n(o),l=t(667),A=t.n(l),s=new URL(t(57),t.b),d=new URL(t(894),t.b),c=a()(i()),u=A()(s),p=A()(d);c.push([n.id,`body {\n  font-family: "Roboto", Arial, Helvetica, sans-serif;\n  margin: 0;\n}\n\n#container {\n  display: grid;\n  grid-template-rows: 1fr 10fr;\n  height: 100vh;\n}\n\n#header {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border: 2px solid green;\n}\n#flow {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 80px;\n  width: 200px;\n  border: 2px solid black;\n  margin-bottom: 20px;\n}\n\n#content {\n  border: 2px solid purple;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n#grids {\n  /*flex-wrap: wrap;*/\n  width: 80%;\n  min-width: 755px;\n  height: 90%;\n  min-height: 550px;\n  border: 2px solid red;\n  display: grid;\n  grid-template-rows: 10fr 1fr;\n}\n#displays {\n  display: grid;\n  grid-template-columns: 1fr 90px 1fr;\n  width: 100%;\n  height: 100%;\n}\n#gridDiv {\n  /*flex: 1 1 550px;*/\n  width: 60%;\n  min-width: 350px;\n  height: 75%;\n  align-self: center;\n  justify-self: end;\n  /*display: flex;*/\n  border: 2px solid greenyellow;\n  display: grid;\n  grid-template-rows: 40px 1fr;\n}\n#playerOne {\n  background-color: antiquewhite;\n}\n#grid1 {\n  display: grid;\n  background-color: rgb(255, 255, 255);\n  grid-template-columns: repeat(10, 1fr);\n}\n\n#separation {\n  display: flex;\n  flex: 0 0 30px;\n  height: 40px;\n  justify-content: center;\n  align-items: center;\n  align-self: center;\n  margin: 10px;\n  /*border: 2px solid orange;*/\n}\n\n#gridDiv2 {\n  /*flex: 1 1 550px;*/\n  width: 60%;\n  min-width: 350px;\n  height: 75%;\n  align-self: center;\n  justify-self: start;\n  /*display: flex;*/\n  border: 2px solid blue;\n  display: grid;\n  grid-template-rows: 40px 1fr;\n}\n#playerTwo {\n  background-color: antiquewhite;\n}\n#grid2 {\n  display: grid;\n  background-color: rgb(255, 255, 255);\n  grid-template-columns: repeat(10, 1fr);\n}\n\n#square {\n  outline: 2px solid black;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 35px;\n  min-width: 35px;\n}\n#square.hit {\n  /*display: flex;\n  justify-content: center;\n  align-items: center;*/\n  align-self: center;\n  content: "";\n  background-image: url(${u});\n  background-repeat: no-repeat;\n  background-size: 65%;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border: none;\n  color: inherit;\n}\n#square.fail {\n  align-self: center;\n  content: "";\n  background-image: url(${p});\n  background-repeat: no-repeat;\n  background-size: 65%;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border: none;\n  color: inherit;\n}\n\n#controllers {\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n}\n#topController {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n}\n#topController > #length {\n  align-self: center;\n  justify-self: center;\n}\n#bottomController {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n}\n\n/*WHEN THE WINDOW IS RESIZED*/\n@media only screen and (min-width: 400px) and (max-width: 1210px) {\n  #content {\n    border: 2px solid purple;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  #grids {\n    justify-content: center;\n    align-items: center;\n    width: 80%;\n    min-height: 1300px;\n    border: 2px solid red;\n  }\n  #displays {\n    display: grid;\n    grid-template-rows: 1fr 90px 1fr;\n    grid-template-columns: 1fr;\n  }\n  #gridDiv {\n    height: 550px;\n    width: 550px;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    /*border: 2px solid purple;*/\n  }\n  #playerOne {\n    background-color: antiquewhite;\n  }\n  #grid1 {\n    display: grid;\n    background-color: rgb(255, 255, 255);\n  }\n\n  #separation {\n    justify-content: center;\n    align-items: center;\n    justify-self: center;\n    /*border: 2px solid orange;*/\n  }\n\n  #gridDiv2 {\n    height: 550px;\n    width: 550px;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    /*border: 2px solid blue;*/\n  }\n  #playerTwo {\n    background-color: antiquewhite;\n  }\n  #grid2 {\n    display: grid;\n    background-color: rgb(255, 255, 255);\n  }\n}\n\n/*MOBILE VERSION*/\n@media only screen and (max-width: 400px) {\n  body {\n    background-color: aqua;\n  }\n}\n`,"",{version:3,sources:["webpack://./src/style/style.css"],names:[],mappings:"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",sourcesContent:['body {\n  font-family: "Roboto", Arial, Helvetica, sans-serif;\n  margin: 0;\n}\n\n#container {\n  display: grid;\n  grid-template-rows: 1fr 10fr;\n  height: 100vh;\n}\n\n#header {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border: 2px solid green;\n}\n#flow {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 80px;\n  width: 200px;\n  border: 2px solid black;\n  margin-bottom: 20px;\n}\n\n#content {\n  border: 2px solid purple;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n#grids {\n  /*flex-wrap: wrap;*/\n  width: 80%;\n  min-width: 755px;\n  height: 90%;\n  min-height: 550px;\n  border: 2px solid red;\n  display: grid;\n  grid-template-rows: 10fr 1fr;\n}\n#displays {\n  display: grid;\n  grid-template-columns: 1fr 90px 1fr;\n  width: 100%;\n  height: 100%;\n}\n#gridDiv {\n  /*flex: 1 1 550px;*/\n  width: 60%;\n  min-width: 350px;\n  height: 75%;\n  align-self: center;\n  justify-self: end;\n  /*display: flex;*/\n  border: 2px solid greenyellow;\n  display: grid;\n  grid-template-rows: 40px 1fr;\n}\n#playerOne {\n  background-color: antiquewhite;\n}\n#grid1 {\n  display: grid;\n  background-color: rgb(255, 255, 255);\n  grid-template-columns: repeat(10, 1fr);\n}\n\n#separation {\n  display: flex;\n  flex: 0 0 30px;\n  height: 40px;\n  justify-content: center;\n  align-items: center;\n  align-self: center;\n  margin: 10px;\n  /*border: 2px solid orange;*/\n}\n\n#gridDiv2 {\n  /*flex: 1 1 550px;*/\n  width: 60%;\n  min-width: 350px;\n  height: 75%;\n  align-self: center;\n  justify-self: start;\n  /*display: flex;*/\n  border: 2px solid blue;\n  display: grid;\n  grid-template-rows: 40px 1fr;\n}\n#playerTwo {\n  background-color: antiquewhite;\n}\n#grid2 {\n  display: grid;\n  background-color: rgb(255, 255, 255);\n  grid-template-columns: repeat(10, 1fr);\n}\n\n#square {\n  outline: 2px solid black;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 35px;\n  min-width: 35px;\n}\n#square.hit {\n  /*display: flex;\n  justify-content: center;\n  align-items: center;*/\n  align-self: center;\n  content: "";\n  background-image: url(./mine.svg);\n  background-repeat: no-repeat;\n  background-size: 65%;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border: none;\n  color: inherit;\n}\n#square.fail {\n  align-self: center;\n  content: "";\n  background-image: url(./water.svg);\n  background-repeat: no-repeat;\n  background-size: 65%;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border: none;\n  color: inherit;\n}\n\n#controllers {\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n}\n#topController {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n}\n#topController > #length {\n  align-self: center;\n  justify-self: center;\n}\n#bottomController {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n}\n\n/*WHEN THE WINDOW IS RESIZED*/\n@media only screen and (min-width: 400px) and (max-width: 1210px) {\n  #content {\n    border: 2px solid purple;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  #grids {\n    justify-content: center;\n    align-items: center;\n    width: 80%;\n    min-height: 1300px;\n    border: 2px solid red;\n  }\n  #displays {\n    display: grid;\n    grid-template-rows: 1fr 90px 1fr;\n    grid-template-columns: 1fr;\n  }\n  #gridDiv {\n    height: 550px;\n    width: 550px;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    /*border: 2px solid purple;*/\n  }\n  #playerOne {\n    background-color: antiquewhite;\n  }\n  #grid1 {\n    display: grid;\n    background-color: rgb(255, 255, 255);\n  }\n\n  #separation {\n    justify-content: center;\n    align-items: center;\n    justify-self: center;\n    /*border: 2px solid orange;*/\n  }\n\n  #gridDiv2 {\n    height: 550px;\n    width: 550px;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    /*border: 2px solid blue;*/\n  }\n  #playerTwo {\n    background-color: antiquewhite;\n  }\n  #grid2 {\n    display: grid;\n    background-color: rgb(255, 255, 255);\n  }\n}\n\n/*MOBILE VERSION*/\n@media only screen and (max-width: 400px) {\n  body {\n    background-color: aqua;\n  }\n}\n'],sourceRoot:""}]);const g=c},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,i,o){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var l=0;l<this.length;l++){var A=this[l][0];null!=A&&(a[A]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);r&&a[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),i&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=i):d[4]="".concat(i)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(i," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},a=[],l=0;l<n.length;l++){var A=n[l],s=r.base?A[0]+r.base:A[0],d=o[s]||0,c="".concat(s," ").concat(d);o[s]=d+1;var u=t(c),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var g=i(p,r);r.byIndex=l,e.splice(l,0,{identifier:c,updater:g,references:1})}a.push(c)}return a}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var o=r(n=n||[],i=i||{});return function(n){n=n||[];for(var a=0;a<o.length;a++){var l=t(o[a]);e[l].references--}for(var A=r(n,i),s=0;s<o.length;s++){var d=t(o[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}o=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},57:(n,e,t)=>{n.exports=t.p+"cdab7ebe0d7a75037e8d.svg"},894:(n,e,t)=>{n.exports=t.p+"af5c785f05ced1400712.svg"}},e={};function t(r){var i=e[r];if(void 0!==i)return i.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var i=r.length-1;i>-1&&!n;)n=r[i--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),i=t.n(r),o=t(569),a=t.n(o),l=t(565),A=t.n(l),s=t(216),d=t.n(s),c=t(589),u=t.n(c),p=t(982),g={};g.styleTagTransform=u(),g.setAttributes=A(),g.insert=a().bind(null,"head"),g.domAPI=i(),g.insertStyleElement=d(),e()(p.Z,g),p.Z&&p.Z.locals&&p.Z.locals;const C=n=>{if(n<=0)throw new Error("The minimum length must be 1");let e=0,t=n;return{getLength:()=>t,getHits:()=>e,hit:function(){e!==t&&e++},isSunk:function(){return e===t}}},h=(n=10)=>{let e=[],t=[];for(let t=0;t<n;t++){let t=new Array(n).fill(null);e.push(t)}return{getBoard:()=>e,placeShipHorizontally:function(r,i,o,a=!0){if(r<0||r>n-1||i+o>n||i<0||i>n-1)return null;let l=C(o),A=[];for(let n=0;n<o;n++)A.push(e[r][i+n]);if(A.every((n=>null===n))){for(let n=0;n<o;n++)e[r][i+n]=l;return t.push(l),A=[],!0}return A=[],!1},placeShipVertically:function(r,i,o,a=!0){if(r<0||r>n-1||r+o>n||i<0||i>n-1)return null;let l=C(o),A=[];for(let n=0;n<o;n++)A.push(e[r+n][i]);if(A.every((n=>null===n))){for(let n=0;n<o;n++)e[r+n][i]=l;return t.push(l),A=[],!0}return A=[],!1},receiveAttack:function(n,t,r=!0){return null===e[n][t]?(e[n][t]=!1,null):!1!==e[n][t]&&"hit"!==e[n][t]&&(e[n][t]&&"object"==typeof e[n][t]?(e[n][t].hit(),e[n][t]="hit",!0):void 0)},getShips:()=>t,allShipsSunk:function(){return t.every((n=>!0===n.isSunk()))}}};let f,m;function B(n){const e=document.querySelectorAll("#grid1 > span"),t=document.querySelectorAll("#grid2 > span");console.log(e[1].attributes[0].value),console.log(e[1].attributes[1].value),console.log(n.getPlayers()[0].getShips()),console.log(e[10].attributes[0].value),console.log(e[10].attributes[1].value);for(let t=0;t<100;t++)null!==n.getPlayers()[0].getBoard()[e[t].attributes[1].value][e[t].attributes[0].value]&&!1!==n.getPlayers()[0].getBoard()[e[t].attributes[1].value][e[t].attributes[0].value]&&"hit"!==n.getPlayers()[0].getBoard()[e[t].attributes[1].value][e[t].attributes[0].value]?e[t].style.backgroundColor="grey":!1===n.getPlayers()[0].getBoard()[e[t].attributes[1].value][e[t].attributes[0].value]?e[t].className="fail":"hit"===n.getPlayers()[0].getBoard()[e[t].attributes[1].value][e[t].attributes[0].value]&&(e[t].className="hit");for(let e=0;e<100;e++)!1===n.getPlayers()[1].getBoard()[t[e].attributes[1].value][t[e].attributes[0].value]?t[e].className="fail":"hit"===n.getPlayers()[1].getBoard()[t[e].attributes[1].value][t[e].attributes[0].value]&&(t[e].className="hit"),E(f),b(m);console.log(n.getPlayers()[0].getBoard()),console.log(n.getPlayers()[1].getBoard()),console.log(n)}function E(n){const e=document.querySelector("#flow");n?e.textContent="A ship has been hit!":!1===n?e.textContent="This spot has already been hit ":null===n&&(e.textContent="Oops.. nothing has been hit")}function b(n){const e=document.querySelector("#flow");n?e.textContent="":!1===n?e.textContent="The ship touches another ship. Choose another spot":null===n&&(e.textContent="The ship goes beyond the limits")}!function(){const n=document.querySelector("#content"),e=document.querySelector("#header"),t=document.createElement("div");t.setAttribute("id","playersAndFlow"),e.appendChild(t);const r=document.createElement("div");r.setAttribute("id","flow"),t.appendChild(r);const i=document.createElement("div");i.setAttribute("id","grids"),n.appendChild(i);const o=document.createElement("div");o.setAttribute("id","displays"),i.appendChild(o);const a=document.createElement("div");a.setAttribute("id","gridDiv"),o.appendChild(a);const l=document.createElement("div");l.setAttribute("id","playerOne"),a.appendChild(l);const A=document.createElement("div");A.setAttribute("id","grid1"),a.appendChild(A);for(let n=0;n<10;n++)for(let e=0;e<10;e++){const t=document.createElement("span");t.setAttribute("data-column",`${e}`),t.setAttribute("data-line",`${n}`),t.setAttribute("id","square"),A.appendChild(t)}const s=document.createElement("div");s.setAttribute("id","separation"),o.appendChild(s),s.innerHTML="<h1>VS</h1>";const d=document.createElement("div");d.setAttribute("id","gridDiv2"),o.appendChild(d);const c=document.createElement("div");c.setAttribute("id","playerTwo"),d.appendChild(c);const u=document.createElement("div");u.setAttribute("id","grid2"),d.appendChild(u);for(let n=0;n<10;n++)for(let e=0;e<10;e++){const t=document.createElement("span");t.setAttribute("data-column",`${e}`),t.setAttribute("data-line",`${n}`),t.setAttribute("id","square"),u.appendChild(t)}const p=document.createElement("div");p.setAttribute("id","controllers"),i.appendChild(p);const g=document.createElement("div");g.setAttribute("id","topController"),p.appendChild(g);for(let n=1;n<=10;n++){const e=document.createElement("div");e.setAttribute("data-length",`${n}`),e.setAttribute("id","length"),e.textContent=`${n}`,g.appendChild(e)}const C=document.createElement("div");C.setAttribute("id","bottomController"),p.appendChild(C);const h=document.createElement("button");h.setAttribute("data-position","horizontal"),h.textContent="Horizontal",C.appendChild(h);const f=document.createElement("button");f.setAttribute("data-position","vertical"),f.textContent="Vertical",C.appendChild(f)}(),function(){const n=((n="Player",e="Computer")=>{const t=h();t.name="Player";const r=h();r.name="Computer";const i=[t,r];let o=i[1];function a(){o=o===i[1]?i[0]:i[1]}return{getPlayers:()=>i,changePlayer:a,getPlayerUnderAttack:()=>o,playerTurn:function(n,e){let t=o.receiveAttack(n,e);a(),f=t,t||null===t?(function(){let n;do{n=o.receiveAttack(Math.floor(10*Math.random()),Math.floor(10*Math.random()),!1)}while(!1===n)}(),a()):a()},playerShipPlacementH:function(n,e,t){let r=i[0].placeShipHorizontally(n,e,t);m=r,!0===r&&function(n){let e;do{e=i[1].placeShipHorizontally(Math.floor(10*Math.random()),Math.floor(10*Math.random()),n)}while(!1===e||null===e)}(t)},playerShipPlacementV:function(n,e,t){let r=i[0].placeShipVertically(n,e,t);m=r,console.log("result:   "+r),!0===r&&function(n){let e;do{e=i[1].placeShipVertically(Math.floor(10*Math.random()),Math.floor(10*Math.random()),n)}while(!1===e||null===e)}(t)}}})();function e(){return n.getPlayers()[0].allShipsSunk()&&0!==n.getPlayers()[0].getShips().length?(document.querySelector("#flow").textContent="Oh.. you lost..",!0):n.getPlayers()[1].allShipsSunk()&&0!==n.getPlayers()[1].getShips().length?(document.querySelector("#flow").textContent="Congratulations you won!",!0):{}}B(n),function(){const t=document.querySelector("#gridDiv"),r=document.querySelector("#gridDiv2"),i=document.querySelector("#controllers");let o=3,a="horizontal";i.addEventListener("click",(n=>{"length"===n.target.id&&(o=Number(n.target.dataset.length)),"button"===n.target.localName&&(a=n.target.dataset.position)})),t.addEventListener("click",(e=>{let t=e.target.dataset.line,r=e.target.dataset.column;t&&"horizontal"===a?n.playerShipPlacementH(Number(t),Number(r),Number(o)):t&&"vertical"===a&&n.playerShipPlacementV(Number(t),Number(r),Number(o)),B(n),console.log(n.getPlayers()[0].getShips().length+"  AI="+n.getPlayers()[1].getShips().length)}));const l=new AbortController;r.addEventListener("click",(t=>{let r,i;t.target.dataset.line&&(r=t.target.dataset.line,i=t.target.dataset.column,n.playerTurn(r,i),B(n)),e(),!0===e()&&l.abort()}),{signal:l.signal})}()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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ZXMiOlsid2VicGFjazovL2JhdHRsZXNoaXAtcHJvamVjdC8uL3NyYy9zdHlsZS9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC1wcm9qZWN0L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2JhdHRsZXNoaXAtcHJvamVjdC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLXByb2plY3Qvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2JhdHRsZXNoaXAtcHJvamVjdC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2JhdHRsZXNoaXAtcHJvamVjdC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2JhdHRsZXNoaXAtcHJvamVjdC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLXByb2plY3Qvd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC1wcm9qZWN0L3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLXByb2plY3QvLi9zcmMvc3R5bGUvc3R5bGUuY3NzP2M5ZjAiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC1wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvc2hpcC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy9nYW1lYm9hcmQuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC1wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvcGxheWVyLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAtcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL3JlbmRlckJvYXJkLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAtcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL3JlbmRlclBhZ2UuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC1wcm9qZWN0Ly4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAtcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL2V2ZW50TGlzdGVuZXJzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCIuL21pbmUuc3ZnXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18gPSBuZXcgVVJMKFwiLi93YXRlci5zdmdcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGBib2R5IHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG4gIG1hcmdpbjogMDtcbn1cblxuI2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDEwZnI7XG4gIGhlaWdodDogMTAwdmg7XG59XG5cbiNoZWFkZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgYm9yZGVyOiAycHggc29saWQgZ3JlZW47XG59XG4jZmxvdyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBoZWlnaHQ6IDgwcHg7XG4gIHdpZHRoOiAyMDBweDtcbiAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbiNjb250ZW50IHtcbiAgYm9yZGVyOiAycHggc29saWQgcHVycGxlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuI2dyaWRzIHtcbiAgLypmbGV4LXdyYXA6IHdyYXA7Ki9cbiAgd2lkdGg6IDgwJTtcbiAgbWluLXdpZHRoOiA3NTVweDtcbiAgaGVpZ2h0OiA5MCU7XG4gIG1pbi1oZWlnaHQ6IDU1MHB4O1xuICBib3JkZXI6IDJweCBzb2xpZCByZWQ7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtcm93czogMTBmciAxZnI7XG59XG4jZGlzcGxheXMge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciA5MHB4IDFmcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cbiNncmlkRGl2IHtcbiAgLypmbGV4OiAxIDEgNTUwcHg7Ki9cbiAgd2lkdGg6IDYwJTtcbiAgbWluLXdpZHRoOiAzNTBweDtcbiAgaGVpZ2h0OiA3NSU7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAganVzdGlmeS1zZWxmOiBlbmQ7XG4gIC8qZGlzcGxheTogZmxleDsqL1xuICBib3JkZXI6IDJweCBzb2xpZCBncmVlbnllbGxvdztcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA0MHB4IDFmcjtcbn1cbiNwbGF5ZXJPbmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBhbnRpcXVld2hpdGU7XG59XG4jZ3JpZDEge1xuICBkaXNwbGF5OiBncmlkO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAxZnIpO1xufVxuXG4jc2VwYXJhdGlvbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXg6IDAgMCAzMHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gIG1hcmdpbjogMTBweDtcbiAgLypib3JkZXI6IDJweCBzb2xpZCBvcmFuZ2U7Ki9cbn1cblxuI2dyaWREaXYyIHtcbiAgLypmbGV4OiAxIDEgNTUwcHg7Ki9cbiAgd2lkdGg6IDYwJTtcbiAgbWluLXdpZHRoOiAzNTBweDtcbiAgaGVpZ2h0OiA3NSU7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAganVzdGlmeS1zZWxmOiBzdGFydDtcbiAgLypkaXNwbGF5OiBmbGV4OyovXG4gIGJvcmRlcjogMnB4IHNvbGlkIGJsdWU7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtcm93czogNDBweCAxZnI7XG59XG4jcGxheWVyVHdvIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogYW50aXF1ZXdoaXRlO1xufVxuI2dyaWQyIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMCwgMWZyKTtcbn1cblxuI3NxdWFyZSB7XG4gIG91dGxpbmU6IDJweCBzb2xpZCBibGFjaztcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtaW4taGVpZ2h0OiAzNXB4O1xuICBtaW4td2lkdGg6IDM1cHg7XG59XG4jc3F1YXJlLmhpdCB7XG4gIC8qZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7Ki9cbiAgYWxpZ24tc2VsZjogY2VudGVyO1xuICBjb250ZW50OiBcIlwiO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19ffSk7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogNjUlO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogbm9uZTtcbiAgY29sb3I6IGluaGVyaXQ7XG59XG4jc3F1YXJlLmZhaWwge1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX199KTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiA2NSU7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDtcbn1cblxuI2NvbnRyb2xsZXJzIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgMWZyO1xufVxuI3RvcENvbnRyb2xsZXIge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMCwgMWZyKTtcbn1cbiN0b3BDb250cm9sbGVyID4gI2xlbmd0aCB7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAganVzdGlmeS1zZWxmOiBjZW50ZXI7XG59XG4jYm90dG9tQ29udHJvbGxlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuXG4vKldIRU4gVEhFIFdJTkRPVyBJUyBSRVNJWkVEKi9cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDAwcHgpIGFuZCAobWF4LXdpZHRoOiAxMjEwcHgpIHtcbiAgI2NvbnRlbnQge1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIHB1cnBsZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cblxuICAjZ3JpZHMge1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgd2lkdGg6IDgwJTtcbiAgICBtaW4taGVpZ2h0OiAxMzAwcHg7XG4gICAgYm9yZGVyOiAycHggc29saWQgcmVkO1xuICB9XG4gICNkaXNwbGF5cyB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciA5MHB4IDFmcjtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgfVxuICAjZ3JpZERpdiB7XG4gICAgaGVpZ2h0OiA1NTBweDtcbiAgICB3aWR0aDogNTUwcHg7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDQwcHggMWZyO1xuICAgIC8qYm9yZGVyOiAycHggc29saWQgcHVycGxlOyovXG4gIH1cbiAgI3BsYXllck9uZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogYW50aXF1ZXdoaXRlO1xuICB9XG4gICNncmlkMSB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7XG4gIH1cblxuICAjc2VwYXJhdGlvbiB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcbiAgICAvKmJvcmRlcjogMnB4IHNvbGlkIG9yYW5nZTsqL1xuICB9XG5cbiAgI2dyaWREaXYyIHtcbiAgICBoZWlnaHQ6IDU1MHB4O1xuICAgIHdpZHRoOiA1NTBweDtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtcm93czogNDBweCAxZnI7XG4gICAgLypib3JkZXI6IDJweCBzb2xpZCBibHVlOyovXG4gIH1cbiAgI3BsYXllclR3byB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogYW50aXF1ZXdoaXRlO1xuICB9XG4gICNncmlkMiB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7XG4gIH1cbn1cblxuLypNT0JJTEUgVkVSU0lPTiovXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gIGJvZHkge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGFxdWE7XG4gIH1cbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5n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YixvQ0FBb0M7RUFDdEM7O0VBRUE7SUFDRSx1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLG9CQUFvQjtJQUNwQiw0QkFBNEI7RUFDOUI7O0VBRUE7SUFDRSxhQUFhO0lBQ2IsWUFBWTtJQUNaLGFBQWE7SUFDYiw0QkFBNEI7SUFDNUIsMEJBQTBCO0VBQzVCO0VBQ0E7SUFDRSw4QkFBOEI7RUFDaEM7RUFDQTtJQUNFLGFBQWE7SUFDYixvQ0FBb0M7RUFDdEM7QUFDRjs7QUFFQSxpQkFBaUI7QUFDakI7RUFDRTtJQUNFLHNCQUFzQjtFQUN4QjtBQUNGXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImJvZHkge1xcbiAgZm9udC1mYW1pbHk6IFxcXCJSb2JvdG9cXFwiLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xcbiAgbWFyZ2luOiAwO1xcbn1cXG5cXG4jY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciAxMGZyO1xcbiAgaGVpZ2h0OiAxMDB2aDtcXG59XFxuXFxuI2hlYWRlciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyZWVuO1xcbn1cXG4jZmxvdyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgaGVpZ2h0OiA4MHB4O1xcbiAgd2lkdGg6IDIwMHB4O1xcbiAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XFxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xcbn1cXG5cXG4jY29udGVudCB7XFxuICBib3JkZXI6IDJweCBzb2xpZCBwdXJwbGU7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4jZ3JpZHMge1xcbiAgLypmbGV4LXdyYXA6IHdyYXA7Ki9cXG4gIHdpZHRoOiA4MCU7XFxuICBtaW4td2lkdGg6IDc1NXB4O1xcbiAgaGVpZ2h0OiA5MCU7XFxuICBtaW4taGVpZ2h0OiA1NTBweDtcXG4gIGJvcmRlcjogMnB4IHNvbGlkIHJlZDtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLXJvd3M6IDEwZnIgMWZyO1xcbn1cXG4jZGlzcGxheXMge1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDkwcHggMWZyO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxufVxcbiNncmlkRGl2IHtcXG4gIC8qZmxleDogMSAxIDU1MHB4OyovXFxuICB3aWR0aDogNjAlO1xcbiAgbWluLXdpZHRoOiAzNTBweDtcXG4gIGhlaWdodDogNzUlO1xcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAganVzdGlmeS1zZWxmOiBlbmQ7XFxuICAvKmRpc3BsYXk6IGZsZXg7Ki9cXG4gIGJvcmRlcjogMnB4IHNvbGlkIGdyZWVueWVsbG93O1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtcm93czogNDBweCAxZnI7XFxufVxcbiNwbGF5ZXJPbmUge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogYW50aXF1ZXdoaXRlO1xcbn1cXG4jZ3JpZDEge1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDI1NSwgMjU1KTtcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAxZnIpO1xcbn1cXG5cXG4jc2VwYXJhdGlvbiB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleDogMCAwIDMwcHg7XFxuICBoZWlnaHQ6IDQwcHg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxuICBtYXJnaW46IDEwcHg7XFxuICAvKmJvcmRlcjogMnB4IHNvbGlkIG9yYW5nZTsqL1xcbn1cXG5cXG4jZ3JpZERpdjIge1xcbiAgLypmbGV4OiAxIDEgNTUwcHg7Ki9cXG4gIHdpZHRoOiA2MCU7XFxuICBtaW4td2lkdGg6IDM1MHB4O1xcbiAgaGVpZ2h0OiA3NSU7XFxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxuICBqdXN0aWZ5LXNlbGY6IHN0YXJ0O1xcbiAgLypkaXNwbGF5OiBmbGV4OyovXFxuICBib3JkZXI6IDJweCBzb2xpZCBibHVlO1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtcm93czogNDBweCAxZnI7XFxufVxcbiNwbGF5ZXJUd28ge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogYW50aXF1ZXdoaXRlO1xcbn1cXG4jZ3JpZDIge1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDI1NSwgMjU1KTtcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAxZnIpO1xcbn1cXG5cXG4jc3F1YXJlIHtcXG4gIG91dGxpbmU6IDJweCBzb2xpZCBibGFjaztcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIG1pbi1oZWlnaHQ6IDM1cHg7XFxuICBtaW4td2lkdGg6IDM1cHg7XFxufVxcbiNzcXVhcmUuaGl0IHtcXG4gIC8qZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsqL1xcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAgY29udGVudDogXFxcIlxcXCI7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi9taW5lLnN2Zyk7XFxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xcbiAgYmFja2dyb3VuZC1zaXplOiA2NSU7XFxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICB3aWR0aDogMTAwJTtcXG4gIGJvcmRlcjogbm9uZTtcXG4gIGNvbG9yOiBpbmhlcml0O1xcbn1cXG4jc3F1YXJlLmZhaWwge1xcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAgY29udGVudDogXFxcIlxcXCI7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi93YXRlci5zdmcpO1xcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gIGJhY2tncm91bmQtc2l6ZTogNjUlO1xcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBib3JkZXI6IG5vbmU7XFxuICBjb2xvcjogaW5oZXJpdDtcXG59XFxuXFxuI2NvbnRyb2xsZXJzIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciAxZnI7XFxufVxcbiN0b3BDb250cm9sbGVyIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMCwgMWZyKTtcXG59XFxuI3RvcENvbnRyb2xsZXIgPiAjbGVuZ3RoIHtcXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gIGp1c3RpZnktc2VsZjogY2VudGVyO1xcbn1cXG4jYm90dG9tQ29udHJvbGxlciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgbWFyZ2luLXRvcDogMTBweDtcXG59XFxuXFxuLypXSEVOIFRIRSBXSU5ET1cgSVMgUkVTSVpFRCovXFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0MDBweCkgYW5kIChtYXgtd2lkdGg6IDEyMTBweCkge1xcbiAgI2NvbnRlbnQge1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCBwdXJwbGU7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgfVxcblxcbiAgI2dyaWRzIHtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIHdpZHRoOiA4MCU7XFxuICAgIG1pbi1oZWlnaHQ6IDEzMDBweDtcXG4gICAgYm9yZGVyOiAycHggc29saWQgcmVkO1xcbiAgfVxcbiAgI2Rpc3BsYXlzIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgOTBweCAxZnI7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xcbiAgfVxcbiAgI2dyaWREaXYge1xcbiAgICBoZWlnaHQ6IDU1MHB4O1xcbiAgICB3aWR0aDogNTUwcHg7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogNDBweCAxZnI7XFxuICAgIC8qYm9yZGVyOiAycHggc29saWQgcHVycGxlOyovXFxuICB9XFxuICAjcGxheWVyT25lIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYW50aXF1ZXdoaXRlO1xcbiAgfVxcbiAgI2dyaWQxIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpO1xcbiAgfVxcblxcbiAgI3NlcGFyYXRpb24ge1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XFxuICAgIC8qYm9yZGVyOiAycHggc29saWQgb3JhbmdlOyovXFxuICB9XFxuXFxuICAjZ3JpZERpdjIge1xcbiAgICBoZWlnaHQ6IDU1MHB4O1xcbiAgICB3aWR0aDogNTUwcHg7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogNDBweCAxZnI7XFxuICAgIC8qYm9yZGVyOiAycHggc29saWQgYmx1ZTsqL1xcbiAgfVxcbiAgI3BsYXllclR3byB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGFudGlxdWV3aGl0ZTtcXG4gIH1cXG4gICNncmlkMiB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDI1NSwgMjU1KTtcXG4gIH1cXG59XFxuXFxuLypNT0JJTEUgVkVSU0lPTiovXFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MDBweCkge1xcbiAgYm9keSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGFxdWE7XFxuICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuICB1cmwgPSBTdHJpbmcodXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybCk7XG5cbiAgLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH1cblxuICAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG4gIGlmICgvW1wiJygpIFxcdFxcbl18KCUyMCkvLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcbiAgfVxuICByZXR1cm4gdXJsO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyYztcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSB7XG5cdFx0XHR2YXIgaSA9IHNjcmlwdHMubGVuZ3RoIC0gMTtcblx0XHRcdHdoaWxlIChpID4gLTEgJiYgIXNjcmlwdFVybCkgc2NyaXB0VXJsID0gc2NyaXB0c1tpLS1dLnNyYztcblx0XHR9XG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18uYiA9IGRvY3VtZW50LmJhc2VVUkkgfHwgc2VsZi5sb2NhdGlvbi5ocmVmO1xuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDE3OTogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiY29uc3QgU2hpcCA9IChsZW5ndGgpID0+IHtcbiAgaWYgKGxlbmd0aCA8PSAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiVGhlIG1pbmltdW0gbGVuZ3RoIG11c3QgYmUgMVwiKTtcbiAgfVxuICBsZXQgaGl0cyA9IDA7XG4gIGxldCBzaGlwTGVuZ3RoID0gbGVuZ3RoO1xuXG4gIGZ1bmN0aW9uIGhpdCgpIHtcbiAgICBpZiAoaGl0cyAhPT0gc2hpcExlbmd0aCkgaGl0cysrO1xuICB9XG5cbiAgZnVuY3Rpb24gaXNTdW5rKCkge1xuICAgIGlmIChoaXRzID09PSBzaGlwTGVuZ3RoKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGdldEhpdHMgPSAoKSA9PiBoaXRzO1xuICBjb25zdCBnZXRMZW5ndGggPSAoKSA9PiBzaGlwTGVuZ3RoO1xuICByZXR1cm4geyBnZXRMZW5ndGgsIGdldEhpdHMsIGhpdCwgaXNTdW5rIH07XG59O1xuXG5leHBvcnQgeyBTaGlwIH07XG4iLCJpbXBvcnQgeyBTaGlwIH0gZnJvbSBcIi4vc2hpcFwiO1xuaW1wb3J0IHsgc2hpcEhpdE1lc3NhZ2UsIG5vdGhpbmdIaXRNZXNzYWdlIH0gZnJvbSBcIi4vcmVuZGVyQm9hcmRcIjtcblxuY29uc3QgR2FtZWJvYXJkID0gKGdyaWQgPSAxMCkgPT4ge1xuICBsZXQgYm9hcmQgPSBbXTtcbiAgbGV0IGFsbFNoaXBzID0gW107IC8vVG8ga2VlcCB0cmFjayBvZiBhbGwgdGhlIHNoaXBzIGNyZWF0ZWRcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGdyaWQ7IGkrKykge1xuICAgIGxldCBsaW5lID0gbmV3IEFycmF5KGdyaWQpLmZpbGwobnVsbCk7XG4gICAgYm9hcmQucHVzaChsaW5lKTtcbiAgfVxuICAvL0FsbCB0aGUgZnVuY3Rpb25zIGJlbG93IGludGVyYWN0IHdpdGggYm9hcmQoL2dldEJvYXJkKCkpXG4gIC8vPT4gLmdldExlbmd0aCgpLCAuZ2V0SGl0cygpLCAuaGl0KCkgJiAuaXNTdW5rKCkgYXJlIGZyb20gU2hpcCBmYWN0b3J5IGFuZCBzbyB3ZSBoYXZlIHRvIHRhcmdldCBhIHNwZWNpZmljIHNoaXAgZnJvbSB0aGUgYm9hcmQoL2dldEJvYXJkKCkpIHRvIHVzZSB0aGVtXG4gIC8vPT4gcmVjZWl2ZUF0dGFjayhsaW5lLCBjb2x1bW4pIHRhcmdldCBhIHNwZWNpZmljIHNoaXAgYW5kIGNhbGwgLmhpdCgpIGZ1bmN0aW9uXG4gIGZ1bmN0aW9uIHBsYWNlU2hpcFZlcnRpY2FsbHkobGluZSwgY29sdW1uLCBzaGlwTGVuZ3RoLCBzaG93QWxlcnQgPSB0cnVlKSB7XG4gICAgaWYgKFxuICAgICAgbGluZSA8IDAgfHxcbiAgICAgIGxpbmUgPiBncmlkIC0gMSB8fFxuICAgICAgbGluZSArIHNoaXBMZW5ndGggPiBncmlkIHx8XG4gICAgICBjb2x1bW4gPCAwIHx8XG4gICAgICBjb2x1bW4gPiBncmlkIC0gMVxuICAgICkge1xuICAgICAgLyppZiAoc2hvd0FsZXJ0KSB7XG4gICAgICAgIGFsZXJ0KFwiVGhlIHNoaXAgZ29lcyBiZXlvbmQgdGhlIGxpbWl0c1wiKTsgLy9pZiB0aGUgQUkgcGxheXM6IHNldCBzaG93QWxlcnQgdG8gZmFsc2VcbiAgICAgIH0qL1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGxldCBuZXdTaGlwID0gU2hpcChzaGlwTGVuZ3RoKTtcbiAgICAvL0Egc3lzdGVtIHRvIGNoZWNrIGlmIGFsbCB2YWx1ZSA9IG51bGwgYmVmb3JlIHBsYWNpbmcgdGhlIHNoaXBcbiAgICBsZXQgY2hlY2sgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNoaXBMZW5ndGg7IGkrKykge1xuICAgICAgY2hlY2sucHVzaChib2FyZFtsaW5lICsgaV1bY29sdW1uXSk7XG4gICAgfVxuICAgIGxldCBjaGVja0NvbnRlbnQgPSBjaGVjay5ldmVyeSgoaXRlbSkgPT4gaXRlbSA9PT0gbnVsbCk7XG4gICAgaWYgKGNoZWNrQ29udGVudCkge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaGlwTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgYm9hcmRbbGluZSArIGldW2NvbHVtbl0gPSBuZXdTaGlwO1xuICAgICAgfVxuICAgICAgYWxsU2hpcHMucHVzaChuZXdTaGlwKTsgLy90cmFja1xuICAgICAgY2hlY2sgPSBbXTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBjaGVjayA9IFtdO1xuICAgICAgLyppZiAoc2hvd0FsZXJ0KSB7XG4gICAgICAgIGFsZXJ0KFwiVGhlIHNoaXAgdG91Y2hlcyBhbm90aGVyIHNoaXBcIik7IC8vaWYgdGhlIEFJIHBsYXlzOiBzZXQgc2hvd0FsZXJ0IHRvIGZhbHNlXG4gICAgICB9Ki9cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBwbGFjZVNoaXBIb3Jpem9udGFsbHkobGluZSwgY29sdW1uLCBzaGlwTGVuZ3RoLCBzaG93QWxlcnQgPSB0cnVlKSB7XG4gICAgaWYgKFxuICAgICAgbGluZSA8IDAgfHxcbiAgICAgIGxpbmUgPiBncmlkIC0gMSB8fFxuICAgICAgY29sdW1uICsgc2hpcExlbmd0aCA+IGdyaWQgfHxcbiAgICAgIGNvbHVtbiA8IDAgfHxcbiAgICAgIGNvbHVtbiA+IGdyaWQgLSAxXG4gICAgKSB7XG4gICAgICAvKmlmIChzaG93QWxlcnQpIHtcbiAgICAgICAgYWxlcnQoXCJUaGUgc2hpcCBnb2VzIGJleW9uZCB0aGUgbGltaXRzXCIpOyAvL2lmIHRoZSBBSSBwbGF5czogc2V0IHNob3dBbGVydCB0byBmYWxzZVxuICAgICAgfSovXG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgbGV0IG5ld1NoaXAgPSBTaGlwKHNoaXBMZW5ndGgpO1xuICAgIC8vQSBzeXN0ZW0gdG8gY2hlY2sgaWYgYWxsIHZhbHVlID0gbnVsbCBiZWZvcmUgcGxhY2luZyB0aGUgc2hpcFxuICAgIGxldCBjaGVjayA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2hpcExlbmd0aDsgaSsrKSB7XG4gICAgICBjaGVjay5wdXNoKGJvYXJkW2xpbmVdW2NvbHVtbiArIGldKTtcbiAgICB9XG4gICAgbGV0IGNoZWNrQ29udGVudCA9IGNoZWNrLmV2ZXJ5KChpdGVtKSA9PiBpdGVtID09PSBudWxsKTtcbiAgICBpZiAoY2hlY2tDb250ZW50KSB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNoaXBMZW5ndGg7IGkrKykge1xuICAgICAgICBib2FyZFtsaW5lXVtjb2x1bW4gKyBpXSA9IG5ld1NoaXA7XG4gICAgICB9XG4gICAgICBhbGxTaGlwcy5wdXNoKG5ld1NoaXApOyAvL3RyYWNrXG4gICAgICBjaGVjayA9IFtdO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNoZWNrID0gW107XG4gICAgICAvKmlmIChzaG93QWxlcnQpIHtcbiAgICAgICAgYWxlcnQoXCJUaGUgc2hpcCB0b3VjaGVzIGFub3RoZXIgc2hpcFwiKTsgLy9pZiB0aGUgQUkgcGxheXM6IHNldCBzaG93QWxlcnQgdG8gZmFsc2VcbiAgICAgIH0qL1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJlY2VpdmVBdHRhY2sobGluZSwgY29sdW1uLCBzaG93QWxlcnQgPSB0cnVlKSB7XG4gICAgaWYgKGJvYXJkW2xpbmVdW2NvbHVtbl0gPT09IG51bGwpIHtcbiAgICAgIGJvYXJkW2xpbmVdW2NvbHVtbl0gPSBmYWxzZTtcbiAgICAgIC8qaWYgKHNob3dBbGVydCkge1xuICAgICAgICBub3RoaW5nSGl0TWVzc2FnZSgpOyAvL2lmIChzaG93QWxlcnQpIGluIG9yZGVyIHRvIHB1dCBtZXNzYWdlcyBmdW5jdGlvbnMgVE8gTU9ESUZZIFdIRU4gU0VUVElNRU9VVCBMT0dJQyBXSUxMIEJFIERPTkUgKGVyYXNlIGlmIChzaG93QWxlcnQpIHRvIGJlIGF2YWlsYWJsZSBmb3IgYWxsPylcbiAgICAgIH0qL1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSBlbHNlIGlmIChib2FyZFtsaW5lXVtjb2x1bW5dID09PSBmYWxzZSB8fCBib2FyZFtsaW5lXVtjb2x1bW5dID09PSBcImhpdFwiKSB7XG4gICAgICAvKmlmIChzaG93QWxlcnQpIHtcbiAgICAgICAgYWxlcnQoXCJUaGlzIHNwb3QgaGFzIGFscmVhZHkgYmVlbiBoaXQgXCIpOyAvL2lmIHRoZSBBSSBwbGF5czogc2V0IHNob3dBbGVydCB0byBmYWxzZVxuICAgICAgfSovXG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSBlbHNlIGlmIChib2FyZFtsaW5lXVtjb2x1bW5dICYmIHR5cGVvZiBib2FyZFtsaW5lXVtjb2x1bW5dID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAvL2lmIGl0IGlzIGFuIG9iamVjdCBkaWZmZXJlbnQgZnJvbSBudWxsXG4gICAgICBib2FyZFtsaW5lXVtjb2x1bW5dLmhpdCgpO1xuICAgICAgYm9hcmRbbGluZV1bY29sdW1uXSA9IFwiaGl0XCI7XG4gICAgICAvKmlmIChzaG93QWxlcnQpIHtcbiAgICAgICAgc2hpcEhpdE1lc3NhZ2UoKTsgLy9pZiAoc2hvd0FsZXJ0KSBpbiBvcmRlciB0byBwdXQgbWVzc2FnZXMgZnVuY3Rpb25zIFRPIE1PRElGWSBXSEVOIFNFVFRJTUVPVVQgTE9HSUMgV0lMTCBCRSBET05FIChlcmFzZSBpZiAoc2hvd0FsZXJ0KSB0byBiZSBhdmFpbGFibGUgZm9yIGFsbD8pXG4gICAgICB9Ki9cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGFsbFNoaXBzU3VuaygpIHtcbiAgICByZXR1cm4gYWxsU2hpcHMuZXZlcnkoKGl0ZW0pID0+IGl0ZW0uaXNTdW5rKCkgPT09IHRydWUpO1xuICB9XG5cbiAgY29uc3QgZ2V0Qm9hcmQgPSAoKSA9PiBib2FyZDtcbiAgY29uc3QgZ2V0U2hpcHMgPSAoKSA9PiBhbGxTaGlwcztcblxuICByZXR1cm4ge1xuICAgIGdldEJvYXJkLFxuICAgIHBsYWNlU2hpcEhvcml6b250YWxseSxcbiAgICBwbGFjZVNoaXBWZXJ0aWNhbGx5LFxuICAgIHJlY2VpdmVBdHRhY2ssXG4gICAgZ2V0U2hpcHMsXG4gICAgYWxsU2hpcHNTdW5rLFxuICB9O1xufTtcblxuZXhwb3J0IHsgR2FtZWJvYXJkIH07XG5cbi8qXG5JIGhhdmUgYW4gaXNzdWUuIEkgY3JlYXRlZCBhIEdhbWVib2FyZCBmYWN0b3J5IGluIGEgZ2FtZUJvYXJkLmpzIG1vZHVsZSBsaWtlIHNvOlxuaHR0cHM6Ly9jb2RlcGVuLmlvL2hsb2ttYW4vcGVuL0tLSkJQcmo/ZWRpdG9ycz0wMDEwIChpdCBtaWdodCBub3QgYmUgdGhlIGZpbmFsIHZlcnNpb24pXG5cbmFuZCBJIGhhZCBhIGplc3QgdGVzdCB0aGF0IHdhcyBydW5uaW5nOiAgaHR0cHM6Ly9jb2RlcGVuLmlvL2hsb2ttYW4vcGVuL21kdmpiYXg/ZWRpdG9ycz0xMDEwXG5cblNvIGZhciBzbyBnb29kIGJ1dCBub3cgSSdtIGFib3V0IHRvIGNyZWF0ZSB0aGUgZ2FtZSBmbG93IGFuZCBldmVudCBsaXN0ZW5lcnMgbG9naWNzIHNvIEkgY3JlYXRlZCBwbGF5ZXJzIG9uIHRoZSBnYW1lZmxvdyB1c2luZyBwbGF5ZXIgZmFjdG9yeSA6IEkgY3JlYXRlZCBwbGF5ZXJzIHVzaW5nIGEgc2ltcGxlIGNvbnN0IHBsYXllcnMgPSBQbGF5ZXJzKCkgc2F0ZW1lbnQgZm9yIG5vdyBzbyB1c2luZyBQbGF5ZXIgZmFjdG9yeS4gVGhpcyBwbGF5ZXIgZmFjdG9yeSBtYWtlcyB1c2Ugb2YgR2FtZWJvYXJkIGZhY3RvcnkgdG8gY3JlYXRlIGEgYm9hcmQgZm9yIGVhY2ggcGxheWVyIGJ1dCBub3cgbXkgdGVzdCBkb2Vzbid0IGV2ZW4gcnVuIGRpc3BsYXlpbmcgYW5kIHRoZSBwbGF5ZXIgRmFjdG9yeSB1c2VzIEdhbWVib2FyZCBmYWN0b3J5ICh0byBjcmVhdGUgYSBib2FyZCBmb3IgZWFjaCkgYnV0IG5vdyBteSB0ZXN0IGZvciBnYW1lYm9hcmQgZG9lc24ndCBldmVuIHJ1biBkaXNwbGF5aW5nICBcIlRlc3Qgc3VpdGUgZmFpbGVkIHRvIHJ1blwiLlxuXG5JIGNhbiBtYWtlIHRoZSB0ZXN0IHJ1biBieSBkZWxldGluZyB0aGUgdmFyaWFibGUgcGxheWVycy4gTXkgcXVlc3Rpb24gaXM6IHdoeSBJIGNhbid0IHJ1biB0aGUgdGVzdCB3aGVuIEkgY3JlYXRlIHRoYXQgdmFyaWFibGU/XG5cblRoZSBtb3N0IGZydXN0cmF0aW5nIHRoaW5ncyBpcyB0aGF0IEkga25vdyB0aGUgZmFjdG9yaWVzIGFuZCB0aGUgZ2FtZSB3b3JrIHRoZSB3YXkgSSB3YW50IChmb3Igbm93KSBidXQgSSBjYW4ndCBydW4gdGhlIHRlc3RzLi4uLlxuXG4qL1xuIiwiaW1wb3J0IHsgR2FtZWJvYXJkIH0gZnJvbSBcIi4vZ2FtZWJvYXJkXCI7XG5pbXBvcnQgeyBnYW1lYm9hcmRVcGRhdGUgfSBmcm9tIFwiLi9yZW5kZXJCb2FyZFwiO1xuXG5sZXQgY2hlY2s7XG5sZXQgY2hlY2tQb3NpdGlvbnM7XG5cbmNvbnN0IFBsYXllcnMgPSAocGxheWVyT25lID0gXCJQbGF5ZXJcIiwgcGxheWVyVHdvID0gXCJDb21wdXRlclwiKSA9PiB7XG4gIGNvbnN0IHBsYXllcjEgPSBHYW1lYm9hcmQoKTtcbiAgcGxheWVyMS5uYW1lID0gXCJQbGF5ZXJcIjtcbiAgY29uc3QgcGxheWVyMiA9IEdhbWVib2FyZCgpO1xuICBwbGF5ZXIyLm5hbWUgPSBcIkNvbXB1dGVyXCI7XG5cbiAgY29uc3QgcGxheWVycyA9IFtwbGF5ZXIxLCBwbGF5ZXIyXTtcblxuICBsZXQgcGxheWVyVW5kZXJBdHRhY2sgPSBwbGF5ZXJzWzFdO1xuICBmdW5jdGlvbiBjaGFuZ2VQbGF5ZXIoKSB7XG4gICAgcGxheWVyVW5kZXJBdHRhY2sgPVxuICAgICAgcGxheWVyVW5kZXJBdHRhY2sgPT09IHBsYXllcnNbMV0gPyBwbGF5ZXJzWzBdIDogcGxheWVyc1sxXTtcbiAgfVxuXG4gIC8vUExBWUVSIEFORCBDT01QVVRFUiBBVFRBQ0tJTkcgTE9HSUNTXG4gIGZ1bmN0aW9uIHBsYXllclR1cm4obGluZSwgY29sdW1uKSB7XG4gICAgbGV0IHJlc3VsdCA9IHBsYXllclVuZGVyQXR0YWNrLnJlY2VpdmVBdHRhY2sobGluZSwgY29sdW1uKTtcbiAgICBjaGFuZ2VQbGF5ZXIoKTtcbiAgICBjaGVjayA9IHJlc3VsdDtcblxuICAgIGlmIChyZXN1bHQgfHwgcmVzdWx0ID09PSBudWxsKSB7XG4gICAgICBjb21wdXRlclR1cm4oKTtcbiAgICAgIGNoYW5nZVBsYXllcigpO1xuICAgICAgLy9nYW1lYm9hcmRVcGRhdGUoKTsgdG8gZXJhc2UgZm9yIGxvb3NlIGNvdXBsaW5nXG4gICAgfSBlbHNlIHtcbiAgICAgIGNoYW5nZVBsYXllcigpO1xuICAgICAgLy9nYW1lYm9hcmRVcGRhdGUoKTtcbiAgICB9XG4gICAgLy9jb25zb2xlLmxvZyhwbGF5ZXJzWzFdLmFsbFNoaXBzU3VuaygpKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbXB1dGVyVHVybigpIHtcbiAgICAvL1RvIG1vZGlmeSBhZnRlciB0byBwdXQgc2V0VGltZW91dCBsb2dpYyAhISFcbiAgICBsZXQgYXR0YWNrUmVzdWx0O1xuICAgIGRvIHtcbiAgICAgIGF0dGFja1Jlc3VsdCA9IHBsYXllclVuZGVyQXR0YWNrLnJlY2VpdmVBdHRhY2soXG4gICAgICAgIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKSxcbiAgICAgICAgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApLFxuICAgICAgICBmYWxzZVxuICAgICAgKTtcbiAgICB9IHdoaWxlIChhdHRhY2tSZXN1bHQgPT09IGZhbHNlKTtcbiAgfVxuXG4gIC8vUExBWUVSIEFORCBDT01QVVRFUiBQTEFDSU5HIFNISVBTIChIb3Jpem9udGFsbHkgKyBWZXJ0aWNhbGx5KVxuICAvLy0tLUhvcml6b250YWxcbiAgZnVuY3Rpb24gcGxheWVyU2hpcFBsYWNlbWVudEgobGluZSwgY29sdW1uLCBsZW5ndGgpIHtcbiAgICBsZXQgcmVzdWx0ID0gcGxheWVyc1swXS5wbGFjZVNoaXBIb3Jpem9udGFsbHkobGluZSwgY29sdW1uLCBsZW5ndGgpO1xuICAgIGNoZWNrUG9zaXRpb25zID0gcmVzdWx0O1xuXG4gICAgLy9jb25zb2xlLmxvZyhcInJlc3VsdDogICBcIiArIHJlc3VsdCk7XG4gICAgaWYgKHJlc3VsdCA9PT0gdHJ1ZSkge1xuICAgICAgY29tcHV0ZXJTaGlwUGxhY2VtZW50SChsZW5ndGgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbXB1dGVyU2hpcFBsYWNlbWVudEgoY2hvc2VuTGVuZ3RoKSB7XG4gICAgbGV0IHBsYWNlUmVzdWx0O1xuXG4gICAgZG8ge1xuICAgICAgcGxhY2VSZXN1bHQgPSBwbGF5ZXJzWzFdLnBsYWNlU2hpcEhvcml6b250YWxseShcbiAgICAgICAgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApLFxuICAgICAgICBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCksXG4gICAgICAgIGNob3Nlbkxlbmd0aFxuICAgICAgKTtcbiAgICAgIC8vY29uc29sZS5sb2coXCJwbGFjZVJlc3VsdDogICBcIiArIHBsYWNlUmVzdWx0KTtcbiAgICB9IHdoaWxlIChwbGFjZVJlc3VsdCA9PT0gZmFsc2UgfHwgcGxhY2VSZXN1bHQgPT09IG51bGwpO1xuICB9XG4gIC8vLS0tVmVydGljYWxcbiAgZnVuY3Rpb24gcGxheWVyU2hpcFBsYWNlbWVudFYobGluZSwgY29sdW1uLCBsZW5ndGgpIHtcbiAgICBsZXQgcmVzdWx0ID0gcGxheWVyc1swXS5wbGFjZVNoaXBWZXJ0aWNhbGx5KGxpbmUsIGNvbHVtbiwgbGVuZ3RoKTtcbiAgICBjaGVja1Bvc2l0aW9ucyA9IHJlc3VsdDtcblxuICAgIGNvbnNvbGUubG9nKFwicmVzdWx0OiAgIFwiICsgcmVzdWx0KTtcbiAgICBpZiAocmVzdWx0ID09PSB0cnVlKSB7XG4gICAgICBjb21wdXRlclNoaXBQbGFjZW1lbnRWKGxlbmd0aCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gY29tcHV0ZXJTaGlwUGxhY2VtZW50VihjaG9zZW5MZW5ndGgpIHtcbiAgICBsZXQgcGxhY2VSZXN1bHQ7XG4gICAgZG8ge1xuICAgICAgcGxhY2VSZXN1bHQgPSBwbGF5ZXJzWzFdLnBsYWNlU2hpcFZlcnRpY2FsbHkoXG4gICAgICAgIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKSxcbiAgICAgICAgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApLFxuICAgICAgICBjaG9zZW5MZW5ndGhcbiAgICAgICk7XG4gICAgfSB3aGlsZSAocGxhY2VSZXN1bHQgPT09IGZhbHNlIHx8IHBsYWNlUmVzdWx0ID09PSBudWxsKTtcbiAgfVxuXG4gIGNvbnN0IGdldFBsYXllcnMgPSAoKSA9PiBwbGF5ZXJzO1xuICBjb25zdCBnZXRQbGF5ZXJVbmRlckF0dGFjayA9ICgpID0+IHBsYXllclVuZGVyQXR0YWNrO1xuXG4gIHJldHVybiB7XG4gICAgZ2V0UGxheWVycyxcbiAgICBjaGFuZ2VQbGF5ZXIsXG4gICAgZ2V0UGxheWVyVW5kZXJBdHRhY2ssXG4gICAgcGxheWVyVHVybixcbiAgICBwbGF5ZXJTaGlwUGxhY2VtZW50SCxcbiAgICBwbGF5ZXJTaGlwUGxhY2VtZW50VixcbiAgfTtcbn07XG5cbmV4cG9ydCB7IFBsYXllcnMsIGNoZWNrLCBjaGVja1Bvc2l0aW9ucyB9O1xuXG4vL01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSoxMClcbi8qY29uc3QgcGxheWVyMSA9IEdhbWVib2FyZCgpO1xuY29uc3QgcGxheWVyMiA9IEdhbWVib2FyZCgpO1xuY29uc3QgcGxheWVycyA9IFtwbGF5ZXIxLCBwbGF5ZXIyXTsqL1xuXG4vKlxuY29uc3QgUGxheWVyID0gKHBsYXllck9uZSA9IFwiUGxheWVyXCIsIHBsYXllclR3byA9IFwiQ29tcHV0ZXJcIikgPT4ge1xuICBjb25zdCBwbGF5ZXIxID0gR2FtZWJvYXJkKCk7XG4gIHBsYXllcjEubmFtZSA9IHBsYXllck9uZTtcblxuICBjb25zdCBwbGF5ZXIyID0gR2FtZWJvYXJkKCk7XG4gIHBsYXllcjIubmFtZSA9IHBsYXllclR3bztcblxuICByZXR1cm4gW3BsYXllcjEsIHBsYXllcjJdO1xufTtcblxuY29uc3QgcGxheWVycyA9IFBsYXllcigpO1xubGV0IHBsYXllclVuZGVyQXR0YWNrID0gcGxheWVyc1swXTtcblxuZnVuY3Rpb24gY2hhbmdlUGxheWVyKCkge1xuICBwbGF5ZXJVbmRlckF0dGFjayA9XG4gICAgcGxheWVyVW5kZXJBdHRhY2sgPT09IHBsYXllcnNbMF0gPyBwbGF5ZXJzWzFdIDogcGxheWVyc1swXTtcbiAgY29uc29sZS5sb2cocGxheWVyVW5kZXJBdHRhY2submFtZSk7XG59XG4qL1xuIiwiaW1wb3J0IHsgcGxheWVycyB9IGZyb20gXCIuL2V2ZW50TGlzdGVuZXJzXCI7XG5pbXBvcnQgeyBjaGVjaywgY2hlY2tQb3NpdGlvbnMgfSBmcm9tIFwiLi9wbGF5ZXJcIjtcblxuZnVuY3Rpb24gZ2FtZWJvYXJkVXBkYXRlKHBsYXllcnMpIHtcbiAgY29uc3QgZ3JpZDEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiI2dyaWQxID4gc3BhblwiKTtcbiAgY29uc3QgZ3JpZDIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiI2dyaWQyID4gc3BhblwiKTtcblxuICBjb25zb2xlLmxvZyhncmlkMVsxXS5hdHRyaWJ1dGVzWzBdLnZhbHVlKTsgLy9jb2x1bW5cbiAgY29uc29sZS5sb2coZ3JpZDFbMV0uYXR0cmlidXRlc1sxXS52YWx1ZSk7IC8vbGluZVxuICAvL2NvbnNvbGUubG9nKHBsYXllcnMuZ2V0UGxheWVycygpWzBdLmdldEJvYXJkKClbMF1bMV0uZ2V0TGVuZ3RoKCkpO1xuICBjb25zb2xlLmxvZyhwbGF5ZXJzLmdldFBsYXllcnMoKVswXS5nZXRTaGlwcygpKTtcblxuICBjb25zb2xlLmxvZyhncmlkMVsxMF0uYXR0cmlidXRlc1swXS52YWx1ZSk7IC8vY29sdW1uXG4gIGNvbnNvbGUubG9nKGdyaWQxWzEwXS5hdHRyaWJ1dGVzWzFdLnZhbHVlKTsgLy9saW5lXG5cbiAgLypjb25zb2xlLmxvZyhwbGF5ZXJzLmdldFBsYXllclVuZGVyQXR0YWNrKCkubmFtZSk7XG4gIHBsYXllcnMuY2hhbmdlUGxheWVyKCk7XG4gIGNvbnNvbGUubG9nKHBsYXllcnMuZ2V0UGxheWVyVW5kZXJBdHRhY2soKS5uYW1lKTsqL1xuXG4gIC8vVmVyaWZ5IGZvciBlYWNoIGVsZW1lbnQgb2YgdGhlIGJvYXJkIGlmIHRoZSB2YWx1ZSBpcyBkaWZmZXJlbnQgZnJvbSBudWxsIEFORCBmYWxzZVxuICAvL1NpbmNlIGVhY2ggZWxlbWVudCBvZiB0aGUgZ3JpZDEgTm9kZSBjb250YWlucyBhIGxpbmUgYW5kIGNvbHVtbiB0aGF0IGlzIHVzZWQgdG8gaXRlcmF0ZSB0aHJvdWdoIGVhY2ggZWxlbWVudCBvZiB0aGUgYm9hcmRcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMDA7IGkrKykge1xuICAgIGlmIChcbiAgICAgIHBsYXllcnMuZ2V0UGxheWVycygpWzBdLmdldEJvYXJkKClbZ3JpZDFbaV0uYXR0cmlidXRlc1sxXS52YWx1ZV1bXG4gICAgICAgIGdyaWQxW2ldLmF0dHJpYnV0ZXNbMF0udmFsdWVcbiAgICAgIF0gIT09IG51bGwgJiZcbiAgICAgIHBsYXllcnMuZ2V0UGxheWVycygpWzBdLmdldEJvYXJkKClbZ3JpZDFbaV0uYXR0cmlidXRlc1sxXS52YWx1ZV1bXG4gICAgICAgIGdyaWQxW2ldLmF0dHJpYnV0ZXNbMF0udmFsdWVcbiAgICAgIF0gIT09IGZhbHNlICYmXG4gICAgICBwbGF5ZXJzLmdldFBsYXllcnMoKVswXS5nZXRCb2FyZCgpW2dyaWQxW2ldLmF0dHJpYnV0ZXNbMV0udmFsdWVdW1xuICAgICAgICBncmlkMVtpXS5hdHRyaWJ1dGVzWzBdLnZhbHVlXG4gICAgICBdICE9PSBcImhpdFwiXG4gICAgKSB7XG4gICAgICBncmlkMVtpXS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcImdyZXlcIjtcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgcGxheWVycy5nZXRQbGF5ZXJzKClbMF0uZ2V0Qm9hcmQoKVtncmlkMVtpXS5hdHRyaWJ1dGVzWzFdLnZhbHVlXVtcbiAgICAgICAgZ3JpZDFbaV0uYXR0cmlidXRlc1swXS52YWx1ZVxuICAgICAgXSA9PT0gZmFsc2VcbiAgICApIHtcbiAgICAgIC8vZ3JpZDFbaV0udGV4dENvbnRlbnQgPSBcInhcIjtcbiAgICAgIGdyaWQxW2ldLmNsYXNzTmFtZSA9IFwiZmFpbFwiO1xuICAgIH0gZWxzZSBpZiAoXG4gICAgICBwbGF5ZXJzLmdldFBsYXllcnMoKVswXS5nZXRCb2FyZCgpW2dyaWQxW2ldLmF0dHJpYnV0ZXNbMV0udmFsdWVdW1xuICAgICAgICBncmlkMVtpXS5hdHRyaWJ1dGVzWzBdLnZhbHVlXG4gICAgICBdID09PSBcImhpdFwiXG4gICAgKSB7XG4gICAgICAvL2dyaWQxW2ldLnRleHRDb250ZW50ID0gXCJoaXRcIjtcbiAgICAgIGdyaWQxW2ldLmNsYXNzTmFtZSA9IFwiaGl0XCI7XG4gICAgfVxuICB9XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMDA7IGkrKykge1xuICAgIGlmIChcbiAgICAgIHBsYXllcnMuZ2V0UGxheWVycygpWzFdLmdldEJvYXJkKClbZ3JpZDJbaV0uYXR0cmlidXRlc1sxXS52YWx1ZV1bXG4gICAgICAgIGdyaWQyW2ldLmF0dHJpYnV0ZXNbMF0udmFsdWVcbiAgICAgIF0gPT09IGZhbHNlXG4gICAgKSB7XG4gICAgICAvL2dyaWQyW2ldLnRleHRDb250ZW50ID0gXCJ4XCI7XG4gICAgICBncmlkMltpXS5jbGFzc05hbWUgPSBcImZhaWxcIjtcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgcGxheWVycy5nZXRQbGF5ZXJzKClbMV0uZ2V0Qm9hcmQoKVtncmlkMltpXS5hdHRyaWJ1dGVzWzFdLnZhbHVlXVtcbiAgICAgICAgZ3JpZDJbaV0uYXR0cmlidXRlc1swXS52YWx1ZVxuICAgICAgXSA9PT0gXCJoaXRcIlxuICAgICkge1xuICAgICAgLy9ncmlkMltpXS50ZXh0Q29udGVudCA9IFwiaGl0XCI7XG4gICAgICBncmlkMltpXS5jbGFzc05hbWUgPSBcImhpdFwiO1xuICAgIH1cblxuICAgIG1lc3NhZ2VzKGNoZWNrKTtcbiAgICBtZXNzYWdlc1Bvc2l0aW9ucyhjaGVja1Bvc2l0aW9ucyk7XG4gIH1cblxuICBjb25zb2xlLmxvZyhwbGF5ZXJzLmdldFBsYXllcnMoKVswXS5nZXRCb2FyZCgpKTtcbiAgY29uc29sZS5sb2cocGxheWVycy5nZXRQbGF5ZXJzKClbMV0uZ2V0Qm9hcmQoKSk7XG4gIGNvbnNvbGUubG9nKHBsYXllcnMpO1xufVxuXG5mdW5jdGlvbiBtZXNzYWdlcyhjaGVja1N0YXR1cykge1xuICBjb25zdCBmbG93ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmbG93XCIpO1xuXG4gIGlmIChjaGVja1N0YXR1cykge1xuICAgIGZsb3cudGV4dENvbnRlbnQgPSBcIkEgc2hpcCBoYXMgYmVlbiBoaXQhXCI7XG4gIH0gZWxzZSBpZiAoY2hlY2tTdGF0dXMgPT09IGZhbHNlKSB7XG4gICAgZmxvdy50ZXh0Q29udGVudCA9IFwiVGhpcyBzcG90IGhhcyBhbHJlYWR5IGJlZW4gaGl0IFwiO1xuICB9IGVsc2UgaWYgKGNoZWNrU3RhdHVzID09PSBudWxsKSB7XG4gICAgZmxvdy50ZXh0Q29udGVudCA9IFwiT29wcy4uIG5vdGhpbmcgaGFzIGJlZW4gaGl0XCI7XG4gIH1cbn1cblxuZnVuY3Rpb24gbWVzc2FnZXNQb3NpdGlvbnMoY2hlY2tTdGF0dXMpIHtcbiAgY29uc3QgZmxvdyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZmxvd1wiKTtcblxuICBpZiAoY2hlY2tTdGF0dXMpIHtcbiAgICBmbG93LnRleHRDb250ZW50ID0gXCJcIjtcbiAgfSBlbHNlIGlmIChjaGVja1N0YXR1cyA9PT0gZmFsc2UpIHtcbiAgICBmbG93LnRleHRDb250ZW50ID0gXCJUaGUgc2hpcCB0b3VjaGVzIGFub3RoZXIgc2hpcC4gQ2hvb3NlIGFub3RoZXIgc3BvdFwiO1xuICB9IGVsc2UgaWYgKGNoZWNrU3RhdHVzID09PSBudWxsKSB7XG4gICAgZmxvdy50ZXh0Q29udGVudCA9IFwiVGhlIHNoaXAgZ29lcyBiZXlvbmQgdGhlIGxpbWl0c1wiO1xuICB9XG59XG5cbmZ1bmN0aW9uIG1lc3NhZ2VzUGxhY2VTaGlwcygpIHtcbiAgY29uc3QgZmxvdyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZmxvd1wiKTtcbn1cblxuZnVuY3Rpb24gcGxheWVyV2lucygpIHtcbiAgY29uc3QgZmxvdyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZmxvd1wiKTtcbiAgZmxvdy50ZXh0Q29udGVudCA9IFwiQ29uZ3JhdHVsYXRpb25zIHlvdSB3b24hXCI7XG59XG5cbmZ1bmN0aW9uIGNvbXB1dGVyV2lucygpIHtcbiAgY29uc3QgZmxvdyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZmxvd1wiKTtcbiAgZmxvdy50ZXh0Q29udGVudCA9IFwiT2guLiB5b3UgbG9zdC4uXCI7XG59XG5cbi8qZnVuY3Rpb24gbm90aGluZ0hpdE1lc3NhZ2UoKSB7XG4gIGNvbnN0IGZsb3cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zsb3dcIik7XG4gIGZsb3cudGV4dENvbnRlbnQgPSBcIk9vcHMuLiBub3RoaW5nIGhhcyBiZWVuIGhpdFwiO1xufVxuXG5mdW5jdGlvbiBzaGlwSGl0TWVzc2FnZSgpIHtcbiAgY29uc3QgZmxvdyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZmxvd1wiKTtcbiAgZmxvdy50ZXh0Q29udGVudCA9IFwiQSBzaGlwIGhhcyBiZWVuIGhpdCFcIjtcbn0qL1xuXG5leHBvcnQge1xuICBnYW1lYm9hcmRVcGRhdGUsXG4gIHBsYXllcldpbnMsXG4gIGNvbXB1dGVyV2lucyxcbiAgLypzaGlwSGl0TWVzc2FnZSxcbiAgbm90aGluZ0hpdE1lc3NhZ2UsKi9cbn07XG4iLCJmdW5jdGlvbiByZW5kZXIoKSB7XG4gIGNvbnN0IGNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRlbnRcIik7XG4gIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjaGVhZGVyXCIpO1xuXG4gIC8vUGxheWVycyBhbmQgZmxvdyBwYXJ0XG4gIGNvbnN0IHBsYXllcnNBbmRGbG93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgcGxheWVyc0FuZEZsb3cuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJwbGF5ZXJzQW5kRmxvd1wiKTtcbiAgaGVhZGVyLmFwcGVuZENoaWxkKHBsYXllcnNBbmRGbG93KTtcblxuICBjb25zdCBmbG93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgZmxvdy5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImZsb3dcIik7XG4gIHBsYXllcnNBbmRGbG93LmFwcGVuZENoaWxkKGZsb3cpO1xuXG4gIC8vR3JpZHMgcGFydFxuICBjb25zdCBncmlkcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGdyaWRzLnNldEF0dHJpYnV0ZShcImlkXCIsIFwiZ3JpZHNcIik7XG4gIGNvbnRlbnQuYXBwZW5kQ2hpbGQoZ3JpZHMpO1xuXG4gIGNvbnN0IGRpc3BsYXlzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgZGlzcGxheXMuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJkaXNwbGF5c1wiKTtcbiAgZ3JpZHMuYXBwZW5kQ2hpbGQoZGlzcGxheXMpO1xuXG4gIGNvbnN0IGdyaWREaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBncmlkRGl2LnNldEF0dHJpYnV0ZShcImlkXCIsIFwiZ3JpZERpdlwiKTtcbiAgZGlzcGxheXMuYXBwZW5kQ2hpbGQoZ3JpZERpdik7XG4gIGNvbnN0IHBsYXllck9uZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHBsYXllck9uZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInBsYXllck9uZVwiKTtcbiAgZ3JpZERpdi5hcHBlbmRDaGlsZChwbGF5ZXJPbmUpO1xuICBjb25zdCBncmlkMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGdyaWQxLnNldEF0dHJpYnV0ZShcImlkXCIsIFwiZ3JpZDFcIik7XG4gIGdyaWREaXYuYXBwZW5kQ2hpbGQoZ3JpZDEpO1xuICBmb3IgKGxldCBsaW5lID0gMDsgbGluZSA8IDEwOyBsaW5lKyspIHtcbiAgICBmb3IgKGxldCBjb2x1bW4gPSAwOyBjb2x1bW4gPCAxMDsgY29sdW1uKyspIHtcbiAgICAgIGNvbnN0IHNxdWFyZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xuICAgICAgc3F1YXJlLnNldEF0dHJpYnV0ZShcImRhdGEtY29sdW1uXCIsIGAke2NvbHVtbn1gKTtcbiAgICAgIHNxdWFyZS5zZXRBdHRyaWJ1dGUoXCJkYXRhLWxpbmVcIiwgYCR7bGluZX1gKTtcbiAgICAgIHNxdWFyZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInNxdWFyZVwiKTtcbiAgICAgIGdyaWQxLmFwcGVuZENoaWxkKHNxdWFyZSk7XG4gICAgfVxuICB9XG5cbiAgY29uc3Qgc2VwYXJhdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHNlcGFyYXRpb24uc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJzZXBhcmF0aW9uXCIpO1xuICBkaXNwbGF5cy5hcHBlbmRDaGlsZChzZXBhcmF0aW9uKTtcbiAgc2VwYXJhdGlvbi5pbm5lckhUTUwgPSBcIjxoMT5WUzwvaDE+XCI7XG5cbiAgY29uc3QgZ3JpZERpdjIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBncmlkRGl2Mi5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImdyaWREaXYyXCIpO1xuICBkaXNwbGF5cy5hcHBlbmRDaGlsZChncmlkRGl2Mik7XG4gIGNvbnN0IHBsYXllclR3byA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHBsYXllclR3by5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInBsYXllclR3b1wiKTtcbiAgZ3JpZERpdjIuYXBwZW5kQ2hpbGQocGxheWVyVHdvKTtcbiAgY29uc3QgZ3JpZDIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBncmlkMi5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImdyaWQyXCIpO1xuICBncmlkRGl2Mi5hcHBlbmRDaGlsZChncmlkMik7XG4gIGZvciAobGV0IGxpbmUgPSAwOyBsaW5lIDwgMTA7IGxpbmUrKykge1xuICAgIGZvciAobGV0IGNvbHVtbiA9IDA7IGNvbHVtbiA8IDEwOyBjb2x1bW4rKykge1xuICAgICAgY29uc3Qgc3F1YXJlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4gICAgICBzcXVhcmUuc2V0QXR0cmlidXRlKFwiZGF0YS1jb2x1bW5cIiwgYCR7Y29sdW1ufWApO1xuICAgICAgc3F1YXJlLnNldEF0dHJpYnV0ZShcImRhdGEtbGluZVwiLCBgJHtsaW5lfWApO1xuICAgICAgc3F1YXJlLnNldEF0dHJpYnV0ZShcImlkXCIsIFwic3F1YXJlXCIpO1xuICAgICAgZ3JpZDIuYXBwZW5kQ2hpbGQoc3F1YXJlKTtcbiAgICB9XG4gIH1cblxuICAvL0NvbnRyb2xsZXIgcGFydFxuICBjb25zdCBjb250cm9sbGVycyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGNvbnRyb2xsZXJzLnNldEF0dHJpYnV0ZShcImlkXCIsIFwiY29udHJvbGxlcnNcIik7XG4gIGdyaWRzLmFwcGVuZENoaWxkKGNvbnRyb2xsZXJzKTtcbiAgY29uc3QgdG9wID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgdG9wLnNldEF0dHJpYnV0ZShcImlkXCIsIFwidG9wQ29udHJvbGxlclwiKTtcbiAgY29udHJvbGxlcnMuYXBwZW5kQ2hpbGQodG9wKTtcbiAgZm9yIChsZXQgaSA9IDE7IGkgPD0gMTA7IGkrKykge1xuICAgIGNvbnN0IGxlbmd0aCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgbGVuZ3RoLnNldEF0dHJpYnV0ZShcImRhdGEtbGVuZ3RoXCIsIGAke2l9YCk7XG4gICAgbGVuZ3RoLnNldEF0dHJpYnV0ZShcImlkXCIsIFwibGVuZ3RoXCIpO1xuICAgIGxlbmd0aC50ZXh0Q29udGVudCA9IGAke2l9YDtcbiAgICB0b3AuYXBwZW5kQ2hpbGQobGVuZ3RoKTtcbiAgfVxuXG4gIGNvbnN0IGJvdHRvbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGJvdHRvbS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImJvdHRvbUNvbnRyb2xsZXJcIik7XG4gIGNvbnRyb2xsZXJzLmFwcGVuZENoaWxkKGJvdHRvbSk7XG4gIGNvbnN0IGJ1dHRvbkggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICBidXR0b25ILnNldEF0dHJpYnV0ZShcImRhdGEtcG9zaXRpb25cIiwgXCJob3Jpem9udGFsXCIpO1xuICBidXR0b25ILnRleHRDb250ZW50ID0gXCJIb3Jpem9udGFsXCI7XG4gIGJvdHRvbS5hcHBlbmRDaGlsZChidXR0b25IKTtcbiAgY29uc3QgYnV0dG9uViA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gIGJ1dHRvblYuc2V0QXR0cmlidXRlKFwiZGF0YS1wb3NpdGlvblwiLCBcInZlcnRpY2FsXCIpO1xuICBidXR0b25WLnRleHRDb250ZW50ID0gXCJWZXJ0aWNhbFwiO1xuICBib3R0b20uYXBwZW5kQ2hpbGQoYnV0dG9uVik7XG59XG5cbmV4cG9ydCB7IHJlbmRlciB9O1xuIiwiaW1wb3J0IFwiLi9zdHlsZS9zdHlsZS5jc3NcIjtcbmltcG9ydCB7IHJlbmRlciB9IGZyb20gXCIuL2NvbXBvbmVudHMvcmVuZGVyUGFnZVwiO1xuaW1wb3J0IHsgZ2FtZWJvYXJkVXBkYXRlIH0gZnJvbSBcIi4vY29tcG9uZW50cy9yZW5kZXJCb2FyZFwiO1xuaW1wb3J0IHsgUGxheWVycyB9IGZyb20gXCIuL2NvbXBvbmVudHMvcGxheWVyXCI7XG4vL2ltcG9ydCB7IGdhbWVMb29wLCBwbGF5ZXJzIH0gZnJvbSBcIi4vY29tcG9uZW50cy9nYW1lRmxvd1wiO1xuaW1wb3J0IHsgZGlzcGxheUNvbnRyb2xsZXIsIHBsYXllcnMsIHBsYXkgfSBmcm9tIFwiLi9jb21wb25lbnRzL2V2ZW50TGlzdGVuZXJzXCI7XG5cbnJlbmRlcigpO1xuLy9nYW1lYm9hcmRVcGRhdGUocGxheWVycyk7XG5wbGF5KCk7XG4vL2Rpc3BsYXlDb250cm9sbGVyKCk7XG5cbi8vZ2FtZUxvb3AoKTtcbiIsIi8vaW1wb3J0IHsgLypnYW1lTG9vcCwqLyBwbGF5ZXJzIH0gZnJvbSBcIi4vZ2FtZUZsb3dcIjtcblxuaW1wb3J0IHsgZ2FtZWJvYXJkVXBkYXRlLCBwbGF5ZXJXaW5zLCBjb21wdXRlcldpbnMgfSBmcm9tIFwiLi9yZW5kZXJCb2FyZFwiO1xuaW1wb3J0IHsgUGxheWVycywgY2hvc2VuTGVuZ3RoIH0gZnJvbSBcIi4vcGxheWVyXCI7XG5cbmZ1bmN0aW9uIHBsYXkoKSB7XG4gIGNvbnN0IHBsYXllcnMgPSBQbGF5ZXJzKCk7XG4gIC8qcGxheWVycy5jaGFuZ2VQbGF5ZXIoKTtcbiAgcGxheWVycy5nZXRQbGF5ZXJzKClbMF0ucGxhY2VTaGlwSG9yaXpvbnRhbGx5KDUsIDQsIDQpO1xuICBwbGF5ZXJzLmdldFBsYXllcnMoKVswXS5wbGFjZVNoaXBIb3Jpem9udGFsbHkoNywgNCwgNCk7XG4gIHBsYXllcnMuZ2V0UGxheWVycygpWzBdLnBsYWNlU2hpcEhvcml6b250YWxseSg5LCA0LCA0KTtcbiAgcGxheWVycy5nZXRQbGF5ZXJzKClbMF0ucGxhY2VTaGlwVmVydGljYWxseSgxLCAxLCAxKTtcbiAgcGxheWVycy5nZXRQbGF5ZXJzKClbMF0ucGxhY2VTaGlwVmVydGljYWxseSgwLCAxLCAxKTtcbiAgcGxheWVycy5nZXRQbGF5ZXJzKClbMF0ucGxhY2VTaGlwVmVydGljYWxseSg2LCAxLCAxKTtcbiAgcGxheWVycy5nZXRQbGF5ZXJzKClbMF0ucGxhY2VTaGlwVmVydGljYWxseSgwLCA5LCAyKTtcblxuICBwbGF5ZXJzLmNoYW5nZVBsYXllcigpO1xuICBwbGF5ZXJzLmdldFBsYXllcnMoKVsxXS5wbGFjZVNoaXBIb3Jpem9udGFsbHkoMSwgNCwgMik7XG4gIHBsYXllcnMuZ2V0UGxheWVycygpWzFdLnBsYWNlU2hpcEhvcml6b250YWxseSgzLCA0LCAyKTtcbiAgcGxheWVycy5nZXRQbGF5ZXJzKClbMV0ucGxhY2VTaGlwSG9yaXpvbnRhbGx5KDUsIDQsIDIpO1xuICBwbGF5ZXJzLmdldFBsYXllcnMoKVsxXS5wbGFjZVNoaXBWZXJ0aWNhbGx5KDgsIDgsIDEpO1xuICBwbGF5ZXJzLmdldFBsYXllcnMoKVsxXS5wbGFjZVNoaXBWZXJ0aWNhbGx5KDksIDksIDEpO1xuICBwbGF5ZXJzLmdldFBsYXllclVuZGVyQXR0YWNrKCkucmVjZWl2ZUF0dGFjaygxLCA0LCBmYWxzZSk7XG4gIHBsYXllcnMuZ2V0UGxheWVyVW5kZXJBdHRhY2soKS5yZWNlaXZlQXR0YWNrKDEsIDUsIGZhbHNlKTtcbiAgcGxheWVycy5nZXRQbGF5ZXJVbmRlckF0dGFjaygpLnJlY2VpdmVBdHRhY2soMywgNCwgZmFsc2UpO1xuICBwbGF5ZXJzLmdldFBsYXllclVuZGVyQXR0YWNrKCkucmVjZWl2ZUF0dGFjaygzLCA1LCBmYWxzZSk7XG4gIHBsYXllcnMuZ2V0UGxheWVyVW5kZXJBdHRhY2soKS5yZWNlaXZlQXR0YWNrKDUsIDQsIGZhbHNlKTtcbiAgcGxheWVycy5nZXRQbGF5ZXJVbmRlckF0dGFjaygpLnJlY2VpdmVBdHRhY2soNSwgNSwgZmFsc2UpOyovXG4gIC8vZ2FtZWJvYXJkVXBkYXRlKHBsYXllcnMpO1xuXG4gIC8qXG4gIFxuICBFVkVOVCBMSVNURU5FUlNcblxuICAqL1xuICAvL3BsYXllcnMucGxheWVyU2hpcHNIb3Jpem9udGFsKDEsIDEsIDkpO1xuXG4gIGdhbWVib2FyZFVwZGF0ZShwbGF5ZXJzKTtcbiAgKGZ1bmN0aW9uIGRpc3BsYXlDb250cm9sbGVyKCkge1xuICAgIGNvbnN0IGdyaWREaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2dyaWREaXZcIik7XG4gICAgY29uc3QgZ3JpZERpdjIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2dyaWREaXYyXCIpO1xuICAgIGNvbnN0IGNvbnRyb2xsZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjb250cm9sbGVyc1wiKTtcbiAgICBsZXQgY2hvc2VuTGVuZ3RoID0gMztcbiAgICBsZXQgcG9zaXRpb24gPSBcImhvcml6b250YWxcIjtcblxuICAgIGNvbnRyb2xsZXJzLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xuICAgICAgaWYgKGUudGFyZ2V0LmlkID09PSBcImxlbmd0aFwiKSB7XG4gICAgICAgIGNob3Nlbkxlbmd0aCA9IE51bWJlcihlLnRhcmdldC5kYXRhc2V0Lmxlbmd0aCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChlLnRhcmdldC5sb2NhbE5hbWUgPT09IFwiYnV0dG9uXCIpIHtcbiAgICAgICAgcG9zaXRpb24gPSBlLnRhcmdldC5kYXRhc2V0LnBvc2l0aW9uO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy9QbGF5ZXIgZ3JpZCAodG8gcGxhY2Ugc2hpcHMpXG4gICAgZ3JpZERpdi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcbiAgICAgIGxldCBwbGF5ZXJDaG9pY2VMaW5lID0gZS50YXJnZXQuZGF0YXNldC5saW5lO1xuICAgICAgbGV0IHBsYXllckNob2ljZUNvbHVtbiA9IGUudGFyZ2V0LmRhdGFzZXQuY29sdW1uO1xuXG4gICAgICBpZiAocGxheWVyQ2hvaWNlTGluZSAmJiBwb3NpdGlvbiA9PT0gXCJob3Jpem9udGFsXCIpIHtcbiAgICAgICAgcGxheWVycy5wbGF5ZXJTaGlwUGxhY2VtZW50SChcbiAgICAgICAgICBOdW1iZXIocGxheWVyQ2hvaWNlTGluZSksXG4gICAgICAgICAgTnVtYmVyKHBsYXllckNob2ljZUNvbHVtbiksXG4gICAgICAgICAgTnVtYmVyKGNob3Nlbkxlbmd0aClcbiAgICAgICAgKTtcbiAgICAgIH0gZWxzZSBpZiAocGxheWVyQ2hvaWNlTGluZSAmJiBwb3NpdGlvbiA9PT0gXCJ2ZXJ0aWNhbFwiKSB7XG4gICAgICAgIHBsYXllcnMucGxheWVyU2hpcFBsYWNlbWVudFYoXG4gICAgICAgICAgTnVtYmVyKHBsYXllckNob2ljZUxpbmUpLFxuICAgICAgICAgIE51bWJlcihwbGF5ZXJDaG9pY2VDb2x1bW4pLFxuICAgICAgICAgIE51bWJlcihjaG9zZW5MZW5ndGgpXG4gICAgICAgICk7XG4gICAgICB9XG5cbiAgICAgIGdhbWVib2FyZFVwZGF0ZShwbGF5ZXJzKTtcbiAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICBwbGF5ZXJzLmdldFBsYXllcnMoKVswXS5nZXRTaGlwcygpLmxlbmd0aCArXG4gICAgICAgICAgXCIgIEFJPVwiICtcbiAgICAgICAgICBwbGF5ZXJzLmdldFBsYXllcnMoKVsxXS5nZXRTaGlwcygpLmxlbmd0aFxuICAgICAgKTtcbiAgICB9KTtcblxuICAgIC8qXG4gICAgICAgICAgaWYgKGUudGFyZ2V0LmRhdGFzZXQubGluZSkge1xuICAgICAgICBwbGF5ZXJDaG9pY2VMaW5lID0gTnVtYmVyKGUudGFyZ2V0LmRhdGFzZXQubGluZSk7XG4gICAgICAgIHBsYXllckNob2ljZUNvbHVtbiA9IE51bWJlcihlLnRhcmdldC5kYXRhc2V0LmNvbHVtbik7XG4gICAgICAgIHBsYXllcnMucGxheWVyU2hpcHNIb3Jpem9udGFsKFxuICAgICAgICAgIHBsYXllckNob2ljZUxpbmUsXG4gICAgICAgICAgcGxheWVyQ2hvaWNlQ29sdW1uLFxuICAgICAgICAgIGNob3Nlbkxlbmd0aFxuICAgICAgICApO1xuICAgICAgICBnYW1lYm9hcmRVcGRhdGUocGxheWVycyk7XG4gICAgICB9ICovXG4gICAgLy9Db21wdXRlciBncmlkICh0byBhdHRhY2spXG4gICAgY29uc3QgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAgICBncmlkRGl2Mi5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgXCJjbGlja1wiLFxuICAgICAgKGUpID0+IHtcbiAgICAgICAgbGV0IHBsYXllckNob2ljZUxpbmU7XG4gICAgICAgIGxldCBwbGF5ZXJDaG9pY2VDb2x1bW47XG5cbiAgICAgICAgaWYgKGUudGFyZ2V0LmRhdGFzZXQubGluZSkge1xuICAgICAgICAgIHBsYXllckNob2ljZUxpbmUgPSBlLnRhcmdldC5kYXRhc2V0LmxpbmU7XG4gICAgICAgICAgcGxheWVyQ2hvaWNlQ29sdW1uID0gZS50YXJnZXQuZGF0YXNldC5jb2x1bW47XG4gICAgICAgICAgcGxheWVycy5wbGF5ZXJUdXJuKHBsYXllckNob2ljZUxpbmUsIHBsYXllckNob2ljZUNvbHVtbik7XG4gICAgICAgICAgZ2FtZWJvYXJkVXBkYXRlKHBsYXllcnMpO1xuICAgICAgICB9XG4gICAgICAgIGdhbWVMb29wKCk7XG5cbiAgICAgICAgaWYgKGdhbWVMb29wKCkgPT09IHRydWUpIHtcbiAgICAgICAgICBjb250cm9sbGVyLmFib3J0KCk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB7IHNpZ25hbDogY29udHJvbGxlci5zaWduYWwgfVxuICAgICk7XG4gIH0pKCk7XG5cbiAgZnVuY3Rpb24gZ2FtZUxvb3AoKSB7XG4gICAgaWYgKFxuICAgICAgcGxheWVycy5nZXRQbGF5ZXJzKClbMF0uYWxsU2hpcHNTdW5rKCkgJiZcbiAgICAgIHBsYXllcnMuZ2V0UGxheWVycygpWzBdLmdldFNoaXBzKCkubGVuZ3RoICE9PSAwXG4gICAgKSB7XG4gICAgICBjb21wdXRlcldpbnMoKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSBpZiAoXG4gICAgICBwbGF5ZXJzLmdldFBsYXllcnMoKVsxXS5hbGxTaGlwc1N1bmsoKSAmJlxuICAgICAgcGxheWVycy5nZXRQbGF5ZXJzKClbMV0uZ2V0U2hpcHMoKS5sZW5ndGggIT09IDBcbiAgICApIHtcbiAgICAgIHBsYXllcldpbnMoKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIC8vY29uc3QgZ2V0Q29udHJvbGxlciA9ICgpID0+IGNvbnRyb2xsZXI7XG5cbiAgICByZXR1cm4ge307XG4gIH1cbn1cblxuZXhwb3J0IHsgLypkaXNwbGF5Q29udHJvbGxlciwqLyBwbGF5IC8qLCBwbGF5ZXJzKi8gfTtcblxuLypcbiAgXG4gIFxuICBcbiAgXG4gIFxuICBcbiAgXG4gIFxuICBcbiAgXG4gIFxuICBcbiAgXG4gIFxuICBcbiAgXG4gIFxuICBcbiAgXG5MT0dJUVVFIEEgQUpPVVRFUiBEQU5TIFBMQVlFUj8/Pz8/P1xuICBcbiAgbGV0IGNvbXB1dGVyQ2hvaWNlTGluZTtcbmxldCBjb21wdXRlckNob2ljZUNvbHVtbjtcblxuZ3JpZERpdi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcblxufSk7XG5cbmdyaWREaXYyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xuICBsZXQgcGxheWVyQ2hvaWNlTGluZTtcbiAgbGV0IHBsYXllckNob2ljZUNvbHVtbjtcblxuICBpZiAoZS50YXJnZXQuZGF0YXNldC5saW5lKSB7XG4gICAgcGxheWVyQ2hvaWNlTGluZSA9IGUudGFyZ2V0LmRhdGFzZXQubGluZTtcbiAgICBwbGF5ZXJDaG9pY2VDb2x1bW4gPSBlLnRhcmdldC5kYXRhc2V0LmNvbHVtbjtcbiAgfVxuICBwbGF5ZXJUdXJuKHBsYXllckNob2ljZUxpbmUsIHBsYXllckNob2ljZUNvbHVtbik7XG5cbiAgZ2FtZUxvb3AoKTsgLy8hXG59KTtcblxuLy9jb25zb2xlLmxvZyhwbGF5ZXJzLmdldFBsYXllclVuZGVyQXR0YWNrKCkubmFtZSk7XG5cblxuLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbmZ1bmN0aW9uIHBsYXllclR1cm4obGluZSwgY29sdW1uKSB7XG4gIGxldCByZXN1bHQgPSBwbGF5ZXJzLmdldFBsYXllclVuZGVyQXR0YWNrKCkucmVjZWl2ZUF0dGFjayhsaW5lLCBjb2x1bW4pO1xuICBwbGF5ZXJzLmNoYW5nZVBsYXllcigpO1xuICBpZiAocmVzdWx0KSB7XG4gICAgY29tcHV0ZXJUdXJuKCk7XG4gICAgcGxheWVycy5jaGFuZ2VQbGF5ZXIoKTtcbiAgICBnYW1lYm9hcmRVcGRhdGUoKTtcbiAgfSBlbHNlIHtcbiAgICBwbGF5ZXJzLmNoYW5nZVBsYXllcigpO1xuICAgIGdhbWVib2FyZFVwZGF0ZSgpO1xuICB9XG5cbiAgbGluZSA9IHVuZGVmaW5lZDtcbiAgY29sdW1uID0gdW5kZWZpbmVkO1xuICBjb25zb2xlLmxvZyhwbGF5ZXJzLmdldFBsYXllcnMoKVsxXS5hbGxTaGlwc1N1bmsoKSk7XG59XG5cbmZ1bmN0aW9uIGNvbXB1dGVyVHVybigpIHtcbiAgbGV0IGF0dGFja1Jlc3VsdDtcbiAgZG8ge1xuICAgIGF0dGFja1Jlc3VsdCA9IHBsYXllcnNcbiAgICAgIC5nZXRQbGF5ZXJVbmRlckF0dGFjaygpXG4gICAgICAucmVjZWl2ZUF0dGFjayhcbiAgICAgICAgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApLFxuICAgICAgICBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCksXG4gICAgICAgIGZhbHNlXG4gICAgICApO1xuICB9IHdoaWxlIChhdHRhY2tSZXN1bHQgPT09IGZhbHNlKTtcbn1cblxuICBcbiAgXG4gIFxuICBcbiAgKi9cbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyIsIlVSTCIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fIiwiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsInVybCIsIm9wdGlvbnMiLCJTdHJpbmciLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInRlc3QiLCJzbGljZSIsImhhc2giLCJuZWVkUXVvdGVzIiwicmVwbGFjZSIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm0iLCJuIiwiZ2V0dGVyIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInAiLCJiIiwiYmFzZVVSSSIsInNlbGYiLCJocmVmIiwibmMiLCJsb2NhbHMiLCJTaGlwIiwiaGl0cyIsInNoaXBMZW5ndGgiLCJnZXRMZW5ndGgiLCJnZXRIaXRzIiwiaGl0IiwiaXNTdW5rIiwiR2FtZWJvYXJkIiwiZ3JpZCIsImJvYXJkIiwiYWxsU2hpcHMiLCJsaW5lIiwiQXJyYXkiLCJmaWxsIiwiZ2V0Qm9hcmQiLCJwbGFjZVNoaXBIb3Jpem9udGFsbHkiLCJjb2x1bW4iLCJzaG93QWxlcnQiLCJuZXdTaGlwIiwiY2hlY2siLCJldmVyeSIsInBsYWNlU2hpcFZlcnRpY2FsbHkiLCJyZWNlaXZlQXR0YWNrIiwiZ2V0U2hpcHMiLCJhbGxTaGlwc1N1bmsiLCJjaGVja1Bvc2l0aW9ucyIsImdhbWVib2FyZFVwZGF0ZSIsInBsYXllcnMiLCJncmlkMSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJncmlkMiIsImNvbnNvbGUiLCJsb2ciLCJ2YWx1ZSIsImdldFBsYXllcnMiLCJiYWNrZ3JvdW5kQ29sb3IiLCJjbGFzc05hbWUiLCJtZXNzYWdlcyIsIm1lc3NhZ2VzUG9zaXRpb25zIiwiY2hlY2tTdGF0dXMiLCJmbG93IiwidGV4dENvbnRlbnQiLCJoZWFkZXIiLCJwbGF5ZXJzQW5kRmxvdyIsImdyaWRzIiwiZGlzcGxheXMiLCJncmlkRGl2IiwicGxheWVyT25lIiwic3F1YXJlIiwic2VwYXJhdGlvbiIsImlubmVySFRNTCIsImdyaWREaXYyIiwicGxheWVyVHdvIiwiY29udHJvbGxlcnMiLCJ0b3AiLCJib3R0b20iLCJidXR0b25IIiwiYnV0dG9uViIsInJlbmRlciIsInBsYXllcjEiLCJuYW1lIiwicGxheWVyMiIsInBsYXllclVuZGVyQXR0YWNrIiwiY2hhbmdlUGxheWVyIiwiZ2V0UGxheWVyVW5kZXJBdHRhY2siLCJwbGF5ZXJUdXJuIiwiYXR0YWNrUmVzdWx0IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiY29tcHV0ZXJUdXJuIiwicGxheWVyU2hpcFBsYWNlbWVudEgiLCJjaG9zZW5MZW5ndGgiLCJwbGFjZVJlc3VsdCIsImNvbXB1dGVyU2hpcFBsYWNlbWVudEgiLCJwbGF5ZXJTaGlwUGxhY2VtZW50ViIsImNvbXB1dGVyU2hpcFBsYWNlbWVudFYiLCJQbGF5ZXJzIiwiZ2FtZUxvb3AiLCJwb3NpdGlvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJOdW1iZXIiLCJkYXRhc2V0IiwibG9jYWxOYW1lIiwicGxheWVyQ2hvaWNlTGluZSIsInBsYXllckNob2ljZUNvbHVtbiIsImNvbnRyb2xsZXIiLCJBYm9ydENvbnRyb2xsZXIiLCJhYm9ydCIsInNpZ25hbCIsInBsYXkiXSwic291cmNlUm9vdCI6IiJ9