(()=>{"use strict";var e={982:(e,n,t)=>{t.d(n,{Z:()=>f});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),A=t(667),l=t.n(A),s=new URL(t(866),t.b),d=new URL(t(636),t.b),c=new URL(t(57),t.b),p=new URL(t(894),t.b),u=a()(o()),g=l()(s),C=l()(d),h=l()(c),m=l()(p);u.push([e.id,`@font-face {\n  font-family: "Arcade";\n  src: url(${g});\n}\n\n@font-face {\n  font-family: "Pixel";\n  src: url(${C});\n}\n\nbody {\n  font-family: "Arcade", "Pixel", "Roboto", Arial, Helvetica, sans-serif;\n  margin: 0;\n}\n#container {\n  display: grid;\n  grid-template-rows: 170px 1fr;\n  height: 100vh;\n}\n\n#header {\n  display: grid;\n  grid-template-rows: 70px 100px;\n  /*justify-content: center;*/\n  align-items: center;\n  /*border: 2px solid green;*/\n  background-color: rgb(0, 0, 161);\n  position: relative;\n}\n#alert {\n  position: absolute;\n  height: 20px;\n  width: 100%;\n  top: 57px;\n  display: flex;\n  justify-self: center;\n  justify-content: center;\n  color: rgb(255, 0, 0);\n  font-weight: bold;\n  font-size: 18px;\n}\n#title {\n  align-self: center;\n  justify-self: center;\n  color: wheat;\n}\n#buttonsAndFlow {\n  display: grid;\n  grid-template-rows: 1fr 20px;\n}\n#flow {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 30px;\n  width: 100%;\n  /*border: 2px solid black;*/\n  background-color: wheat;\n  color: solid black;\n  margin-bottom: 20px;\n  position: relative;\n}\n#remaining {\n  position: absolute;\n  /*border: 2px solid red;*/\n  width: 100%;\n  height: 20px;\n  top: 115px;\n  display: flex;\n  justify-content: center;\n  color: wheat;\n}\nbutton {\n  font-family: "Arcade";\n  background: none;\n  color: inherit;\n  border: 2px solid black;\n}\n#buttons {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 20px;\n}\n#buttons > button {\n  border: 2px solid wheat;\n  color: wheat;\n}\n\n#content {\n  /*border: 2px solid purple;*/\n  display: flex;\n  justify-content: center;\n  /*align-items: center;*/\n}\n\n#grids {\n  /*flex-wrap: wrap;*/\n  width: 80%;\n  min-width: 755px;\n  height: 90%;\n  min-height: 550px;\n  border: 2px solid red;\n  display: grid;\n  grid-template-rows: 500px 300px;\n}\n#grids.rearranged {\n  /*flex-wrap: wrap;*/\n  /*width: 80%;\n  min-width: 755px;\n  height: 90%;\n  border: 2px solid red;*/\n  min-height: none;\n  grid-template-rows: 510px;\n}\n#displays {\n  display: grid;\n  grid-template-columns: 1fr 90px 1fr;\n  width: 100%;\n  height: 100%;\n}\n#gridDiv {\n  /*flex: 1 1 550px;*/\n  width: 450px;\n  height: 450px;\n  justify-self: end;\n  /*display: flex;*/\n  /*border: 2px solid greenyellow;*/\n  display: grid;\n  grid-template-rows: 25px 1fr;\n}\n#playerOne {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 25px;\n}\n#grid1 {\n  display: grid;\n  background-color: rgb(255, 255, 255);\n  grid-template-columns: repeat(10, 1fr);\n}\n\n#separation {\n  display: flex;\n  flex: 0 0 30px;\n  height: 40px;\n  justify-content: center;\n  align-self: center;\n  margin: 10px;\n  padding-bottom: 130px;\n  font-size: 20px;\n  /*border: 2px solid orange;*/\n}\n\n#gridDiv2 {\n  /*flex: 1 1 550px;*/\n  width: 450px;\n  height: 450px;\n  justify-self: start;\n  /*display: flex;*/\n  /*border: 2px solid blue;*/\n  display: grid;\n  grid-template-rows: 25px 1fr;\n}\n#playerTwo {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 25px;\n}\n#grid2 {\n  display: grid;\n  background-color: rgb(255, 255, 255);\n  grid-template-columns: repeat(10, 1fr);\n}\n\n#square {\n  outline: 2px solid black;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 35px;\n  min-width: 35px;\n}\n#square.hit {\n  /*display: flex;\n  justify-content: center;\n  align-items: center;*/\n  align-self: center;\n  content: "";\n  background-image: url(${h});\n  background-repeat: no-repeat;\n  background-size: 65%;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border: none;\n  color: inherit;\n}\n#square.fail {\n  align-self: center;\n  content: "";\n  background-image: url(${m});\n  background-repeat: no-repeat;\n  background-size: 65%;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border: none;\n  color: inherit;\n}\n#square[data-over="yes"] {\n  background-color: yellow;\n}\n\n#controllers {\n  display: grid;\n  height: 330px;\n  grid-template-rows: 50px 100px;\n}\n#topController {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n}\n#topController > #length {\n  align-self: center;\n  justify-self: center;\n}\n#bottomController {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  gap: 10px;\n}\n#choices.horizontal {\n  display: grid;\n  grid-template-columns: repeat(4, 140px);\n  grid-template-rows: 1fr 1fr;\n  gap: 5px;\n  justify-self: center;\n}\n#choices.vertical {\n  display: grid;\n  grid-template-columns: repeat(5, 40px);\n  grid-template-rows: 1fr;\n  gap: 100px;\n  justify-self: center;\n}\n#choices > #ship {\n  display: grid;\n  justify-self: center;\n  align-self: center;\n}\n#squareShip {\n  outline: 2px solid black;\n  background-color: rgb(139, 139, 139);\n  height: 40px;\n  width: 40px;\n}\n\n/*WHEN THE WINDOW IS RESIZED*/\n@media only screen and (min-width: 400px) and (max-width: 1210px) {\n  #content {\n    border: 2px solid purple;\n    display: flex;\n    justify-content: center;\n  }\n\n  #grids {\n    justify-content: center;\n    align-items: center;\n    width: 80%;\n    height: 1350px;\n    border: 2px solid red;\n    grid-template-rows: 1100px 1fr;\n    /*margin-top: -70px;*/\n  }\n  #grids.rearranged {\n    /*flex-wrap: wrap;*/\n    /*width: 80%;\n    min-width: 755px;\n    height: 90%;\n    border: 2px solid red;*/\n    height: 1150px;\n    grid-template-rows: 510px;\n  }\n  #displays {\n    display: grid;\n    grid-template-rows: 1fr 90px 1fr;\n    grid-template-columns: 1fr;\n  }\n  #gridDiv {\n    height: 500px;\n    width: 500px;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    align-self: end;\n    justify-self: center;\n    /*border: 2px solid purple;*/\n  }\n\n  #grid1 {\n    display: grid;\n    background-color: rgb(255, 255, 255);\n  }\n\n  #separation {\n    justify-content: center;\n    align-items: center;\n    justify-self: center;\n    align-self: center;\n    height: 40px;\n    width: 40px;\n    padding-bottom: 0px;\n    /*border: 2px solid orange;*/\n  }\n\n  #gridDiv2 {\n    height: 500px;\n    width: 500px;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    justify-self: center;\n    /*border: 2px solid blue;*/\n  }\n\n  #grid2 {\n    display: grid;\n    background-color: rgb(255, 255, 255);\n  }\n}\n\n/*MOBILE VERSION*/\n@media only screen and (max-width: 400px) {\n  body {\n    background-color: aqua;\n  }\n}\n`,"",{version:3,sources:["webpack://./src/style/style.css"],names:[],mappings:"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",sourcesContent:['@font-face {\n  font-family: "Arcade";\n  src: url(./ARCADECLASSIC.TTF);\n}\n\n@font-face {\n  font-family: "Pixel";\n  src: url(./PublicPixel-z84yD.ttf);\n}\n\nbody {\n  font-family: "Arcade", "Pixel", "Roboto", Arial, Helvetica, sans-serif;\n  margin: 0;\n}\n#container {\n  display: grid;\n  grid-template-rows: 170px 1fr;\n  height: 100vh;\n}\n\n#header {\n  display: grid;\n  grid-template-rows: 70px 100px;\n  /*justify-content: center;*/\n  align-items: center;\n  /*border: 2px solid green;*/\n  background-color: rgb(0, 0, 161);\n  position: relative;\n}\n#alert {\n  position: absolute;\n  height: 20px;\n  width: 100%;\n  top: 57px;\n  display: flex;\n  justify-self: center;\n  justify-content: center;\n  color: rgb(255, 0, 0);\n  font-weight: bold;\n  font-size: 18px;\n}\n#title {\n  align-self: center;\n  justify-self: center;\n  color: wheat;\n}\n#buttonsAndFlow {\n  display: grid;\n  grid-template-rows: 1fr 20px;\n}\n#flow {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 30px;\n  width: 100%;\n  /*border: 2px solid black;*/\n  background-color: wheat;\n  color: solid black;\n  margin-bottom: 20px;\n  position: relative;\n}\n#remaining {\n  position: absolute;\n  /*border: 2px solid red;*/\n  width: 100%;\n  height: 20px;\n  top: 115px;\n  display: flex;\n  justify-content: center;\n  color: wheat;\n}\nbutton {\n  font-family: "Arcade";\n  background: none;\n  color: inherit;\n  border: 2px solid black;\n}\n#buttons {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 20px;\n}\n#buttons > button {\n  border: 2px solid wheat;\n  color: wheat;\n}\n\n#content {\n  /*border: 2px solid purple;*/\n  display: flex;\n  justify-content: center;\n  /*align-items: center;*/\n}\n\n#grids {\n  /*flex-wrap: wrap;*/\n  width: 80%;\n  min-width: 755px;\n  height: 90%;\n  min-height: 550px;\n  border: 2px solid red;\n  display: grid;\n  grid-template-rows: 500px 300px;\n}\n#grids.rearranged {\n  /*flex-wrap: wrap;*/\n  /*width: 80%;\n  min-width: 755px;\n  height: 90%;\n  border: 2px solid red;*/\n  min-height: none;\n  grid-template-rows: 510px;\n}\n#displays {\n  display: grid;\n  grid-template-columns: 1fr 90px 1fr;\n  width: 100%;\n  height: 100%;\n}\n#gridDiv {\n  /*flex: 1 1 550px;*/\n  width: 450px;\n  height: 450px;\n  justify-self: end;\n  /*display: flex;*/\n  /*border: 2px solid greenyellow;*/\n  display: grid;\n  grid-template-rows: 25px 1fr;\n}\n#playerOne {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 25px;\n}\n#grid1 {\n  display: grid;\n  background-color: rgb(255, 255, 255);\n  grid-template-columns: repeat(10, 1fr);\n}\n\n#separation {\n  display: flex;\n  flex: 0 0 30px;\n  height: 40px;\n  justify-content: center;\n  align-self: center;\n  margin: 10px;\n  padding-bottom: 130px;\n  font-size: 20px;\n  /*border: 2px solid orange;*/\n}\n\n#gridDiv2 {\n  /*flex: 1 1 550px;*/\n  width: 450px;\n  height: 450px;\n  justify-self: start;\n  /*display: flex;*/\n  /*border: 2px solid blue;*/\n  display: grid;\n  grid-template-rows: 25px 1fr;\n}\n#playerTwo {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 25px;\n}\n#grid2 {\n  display: grid;\n  background-color: rgb(255, 255, 255);\n  grid-template-columns: repeat(10, 1fr);\n}\n\n#square {\n  outline: 2px solid black;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 35px;\n  min-width: 35px;\n}\n#square.hit {\n  /*display: flex;\n  justify-content: center;\n  align-items: center;*/\n  align-self: center;\n  content: "";\n  background-image: url(./mine.svg);\n  background-repeat: no-repeat;\n  background-size: 65%;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border: none;\n  color: inherit;\n}\n#square.fail {\n  align-self: center;\n  content: "";\n  background-image: url(./water.svg);\n  background-repeat: no-repeat;\n  background-size: 65%;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border: none;\n  color: inherit;\n}\n#square[data-over="yes"] {\n  background-color: yellow;\n}\n\n#controllers {\n  display: grid;\n  height: 330px;\n  grid-template-rows: 50px 100px;\n}\n#topController {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n}\n#topController > #length {\n  align-self: center;\n  justify-self: center;\n}\n#bottomController {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  gap: 10px;\n}\n#choices.horizontal {\n  display: grid;\n  grid-template-columns: repeat(4, 140px);\n  grid-template-rows: 1fr 1fr;\n  gap: 5px;\n  justify-self: center;\n}\n#choices.vertical {\n  display: grid;\n  grid-template-columns: repeat(5, 40px);\n  grid-template-rows: 1fr;\n  gap: 100px;\n  justify-self: center;\n}\n#choices > #ship {\n  display: grid;\n  justify-self: center;\n  align-self: center;\n}\n#squareShip {\n  outline: 2px solid black;\n  background-color: rgb(139, 139, 139);\n  height: 40px;\n  width: 40px;\n}\n\n/*WHEN THE WINDOW IS RESIZED*/\n@media only screen and (min-width: 400px) and (max-width: 1210px) {\n  #content {\n    border: 2px solid purple;\n    display: flex;\n    justify-content: center;\n  }\n\n  #grids {\n    justify-content: center;\n    align-items: center;\n    width: 80%;\n    height: 1350px;\n    border: 2px solid red;\n    grid-template-rows: 1100px 1fr;\n    /*margin-top: -70px;*/\n  }\n  #grids.rearranged {\n    /*flex-wrap: wrap;*/\n    /*width: 80%;\n    min-width: 755px;\n    height: 90%;\n    border: 2px solid red;*/\n    height: 1150px;\n    grid-template-rows: 510px;\n  }\n  #displays {\n    display: grid;\n    grid-template-rows: 1fr 90px 1fr;\n    grid-template-columns: 1fr;\n  }\n  #gridDiv {\n    height: 500px;\n    width: 500px;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    align-self: end;\n    justify-self: center;\n    /*border: 2px solid purple;*/\n  }\n\n  #grid1 {\n    display: grid;\n    background-color: rgb(255, 255, 255);\n  }\n\n  #separation {\n    justify-content: center;\n    align-items: center;\n    justify-self: center;\n    align-self: center;\n    height: 40px;\n    width: 40px;\n    padding-bottom: 0px;\n    /*border: 2px solid orange;*/\n  }\n\n  #gridDiv2 {\n    height: 500px;\n    width: 500px;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    justify-self: center;\n    /*border: 2px solid blue;*/\n  }\n\n  #grid2 {\n    display: grid;\n    background-color: rgb(255, 255, 255);\n  }\n}\n\n/*MOBILE VERSION*/\n@media only screen and (max-width: 400px) {\n  body {\n    background-color: aqua;\n  }\n}\n'],sourceRoot:""}]);const f=u},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var A=0;A<this.length;A++){var l=this[A][0];null!=l&&(a[l]=!0)}for(var s=0;s<e.length;s++){var d=[].concat(e[s]);r&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var i={},a=[],A=0;A<e.length;A++){var l=e[A],s=r.base?l[0]+r.base:l[0],d=i[s]||0,c="".concat(s," ").concat(d);i[s]=d+1;var p=t(c),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var g=o(u,r);r.byIndex=A,n.splice(A,0,{identifier:c,updater:g,references:1})}a.push(c)}return a}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var A=t(i[a]);n[A].references--}for(var l=r(e,o),s=0;s<i.length;s++){var d=t(i[s]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}i=l}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},866:(e,n,t)=>{e.exports=t.p+"8f36b955d042951fd3af.TTF"},636:(e,n,t)=>{e.exports=t.p+"f99b94ee4c84a5e45373.ttf"},57:(e,n,t)=>{e.exports=t.p+"cdab7ebe0d7a75037e8d.svg"},894:(e,n,t)=>{e.exports=t.p+"af5c785f05ced1400712.svg"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var i=n[r]={id:r,exports:{}};return e[r](i,i.exports,t),i.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!e;)e=r[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),i=t(569),a=t.n(i),A=t(565),l=t.n(A),s=t(216),d=t.n(s),c=t(589),p=t.n(c),u=t(982),g={};function C(){document.querySelector("#controllers").style.display="none",document.querySelector("#remaining").style.display="none",document.querySelector("#grids").classList.add("rearranged"),document.querySelector("#startButton").style.display="none"}g.styleTagTransform=p(),g.setAttributes=l(),g.insert=a().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=d(),n()(u.Z,g),u.Z&&u.Z.locals&&u.Z.locals;const h=e=>{if(e<=0)throw new Error("The minimum length must be 1");let n=0,t=e;return{getLength:()=>t,getHits:()=>n,hit:function(){n!==t&&n++},isSunk:function(){return n===t}}},m=(e=10)=>{let n=[],t=[];for(let t=0;t<e;t++){let t=new Array(e).fill(null);n.push(t)}return{getBoard:()=>n,placeShipHorizontally:function(r,o,i,a=!0){if(r<0||r>e-1||o+i>e||o<0||o>e-1)return null;let A=h(i),l=[];for(let e=0;e<i;e++)l.push(n[r][o+e]);if(l.every((e=>null===e))){for(let e=0;e<i;e++)n[r][o+e]=A;return t.push(A),l=[],!0}return l=[],!1},placeShipVertically:function(r,o,i,a=!0){if(r<0||r>e-1||r+i>e||o<0||o>e-1)return null;let A=h(i),l=[];for(let e=0;e<i;e++)l.push(n[r+e][o]);if(l.every((e=>null===e))){for(let e=0;e<i;e++)n[r+e][o]=A;return t.push(A),l=[],!0}return l=[],!1},receiveAttack:function(e,t,r=!0){return null===n[e][t]?(n[e][t]=!1,null):!1!==n[e][t]&&"hit"!==n[e][t]&&(n[e][t]&&"object"==typeof n[e][t]?(n[e][t].hit(),n[e][t]="hit",!0):void 0)},getShips:()=>t,allShipsSunk:function(){return t.every((e=>!0===e.isSunk()))}}};let f,B;function E(e){const n=document.querySelectorAll("#grid1 > span"),t=document.querySelectorAll("#grid2 > span");console.log(n[1].attributes[0].value),console.log(n[1].attributes[1].value),console.log(e.getPlayers()[0].getShips()),console.log(n[10].attributes[0].value),console.log(n[10].attributes[1].value);for(let t=0;t<100;t++)null!==e.getPlayers()[0].getBoard()[n[t].attributes[1].value][n[t].attributes[0].value]&&!1!==e.getPlayers()[0].getBoard()[n[t].attributes[1].value][n[t].attributes[0].value]&&"hit"!==e.getPlayers()[0].getBoard()[n[t].attributes[1].value][n[t].attributes[0].value]?n[t].style.backgroundColor="grey":!1===e.getPlayers()[0].getBoard()[n[t].attributes[1].value][n[t].attributes[0].value]?n[t].className="fail":"hit"===e.getPlayers()[0].getBoard()[n[t].attributes[1].value][n[t].attributes[0].value]&&(n[t].className="hit");for(let n=0;n<100;n++)!1===e.getPlayers()[1].getBoard()[t[n].attributes[1].value][t[n].attributes[0].value]?t[n].className="fail":"hit"===e.getPlayers()[1].getBoard()[t[n].attributes[1].value][t[n].attributes[0].value]&&(t[n].className="hit"),b(f),y(B);console.log(e.getPlayers()[0].getBoard()),console.log(e.getPlayers()[1].getBoard()),console.log(e)}function b(e){const n=document.querySelector("#flow");e?n.textContent="A ship has been hit!":!1===e?n.textContent="This spot has already been hit ":null===e&&(n.textContent="Oops.. nothing has been hit")}function y(e){const n=document.querySelector("#alert");e?n.textContent="":!1===e?n.textContent="The ship touches another ship. Choose another spot":null===e&&(n.textContent="The ship goes beyond the limits")}function x(){document.querySelector("#flow").textContent="You have to place at least 1 ship"}function v(){document.querySelector("#flow").textContent="Time to start! You play first"}!function(){const e=document.querySelector("#content"),n=document.querySelector("#header"),t=document.createElement("div");t.setAttribute("id","buttonsAndFlow"),n.appendChild(t);const r=document.createElement("div");r.setAttribute("id","alert"),n.appendChild(r);const o=document.createElement("div");o.setAttribute("id","remaining"),o.textContent="Remaining ships: 10",n.append(o);const i=document.createElement("div");i.setAttribute("id","flow"),i.textContent="Place your ships (Max: 10 ships)",t.appendChild(i);const a=document.createElement("div");a.setAttribute("id","buttons"),t.appendChild(a);const A=document.createElement("button");A.setAttribute("id","startButton"),A.textContent="Start",a.appendChild(A);const l=document.createElement("button");l.setAttribute("id","restartButton"),l.textContent="Restart",a.appendChild(l);const s=document.createElement("div");s.setAttribute("id","grids"),e.appendChild(s);const d=document.createElement("div");d.setAttribute("id","displays"),s.appendChild(d);const c=document.createElement("div");c.setAttribute("id","gridDiv"),d.appendChild(c);const p=document.createElement("div");p.setAttribute("id","playerOne"),p.textContent="player",c.appendChild(p);const u=document.createElement("div");u.setAttribute("id","grid1"),c.appendChild(u);for(let e=0;e<10;e++)for(let n=0;n<10;n++){const t=document.createElement("span");t.setAttribute("data-column",`${n}`),t.setAttribute("data-line",`${e}`),t.setAttribute("id","square"),u.appendChild(t)}const g=document.querySelectorAll("#square");for(let e=0;e<100;e++)g[e].setAttribute("data-number",`${e}`);const C=document.createElement("div");C.setAttribute("id","separation"),d.appendChild(C),C.innerHTML="<h1>VS</h1>";const h=document.createElement("div");h.setAttribute("id","gridDiv2"),d.appendChild(h);const m=document.createElement("div");m.setAttribute("id","playerTwo"),m.textContent="computer",h.appendChild(m);const f=document.createElement("div");f.setAttribute("id","grid2"),h.appendChild(f);for(let e=0;e<10;e++)for(let n=0;n<10;n++){const t=document.createElement("span");t.setAttribute("data-column",`${n}`),t.setAttribute("data-line",`${e}`),t.setAttribute("id","square"),f.appendChild(t)}const B=document.createElement("div");B.setAttribute("id","controllers"),s.appendChild(B);const E=document.createElement("div");E.setAttribute("id","bottomController"),B.appendChild(E);const b=document.createElement("button");b.setAttribute("data-position","horizontal"),b.textContent="Horizontal",E.appendChild(b);const y=document.createElement("button");y.setAttribute("data-position","vertical"),y.textContent="Vertical",E.appendChild(y);const x=document.createElement("div");x.setAttribute("id","choices"),x.setAttribute("class","horizontal"),B.appendChild(x);for(let e=1;e<=5;e++){const n=document.createElement("div");n.setAttribute("data-shipLength",`${e}`),n.setAttribute("id","ship"),n.setAttribute("class","horizontal"),n.setAttribute("draggable","true"),x.appendChild(n);for(let t=1;t<=e;t++){const t=document.createElement("div");t.setAttribute("id","squareShip"),n.appendChild(t),n.style.gridTemplateColumns=`repeat(${e}, 40px )`}}}(),function(){const e=((e="Player",n="Computer")=>{const t=m();t.name="Player";const r=m();r.name="Computer";const o=[t,r];let i=o[1];function a(){i=i===o[1]?o[0]:o[1]}return{getPlayers:()=>o,changePlayer:a,getPlayerUnderAttack:()=>i,playerTurn:function(e,n){let t=i.receiveAttack(e,n);a(),f=t,t||null===t?(function(){let e;do{e=i.receiveAttack(Math.floor(10*Math.random()),Math.floor(10*Math.random()),!1)}while(!1===e)}(),a(),console.log("check=========  "+f)):(a(),console.log("check=========  "+f))},playerShipPlacementH:function(e,n,t){let r=o[0].placeShipHorizontally(e,n,t);B=r,!0===r&&function(e){let n;do{n=o[1].placeShipHorizontally(Math.floor(10*Math.random()),Math.floor(10*Math.random()),e)}while(!1===n||null===n)}(t)},playerShipPlacementV:function(e,n,t){let r=o[0].placeShipVertically(e,n,t);B=r,console.log("result:   "+r),!0===r&&function(e){let n;do{n=o[1].placeShipVertically(Math.floor(10*Math.random()),Math.floor(10*Math.random()),e)}while(!1===n||null===n)}(t)}}})();function n(){return e.getPlayers()[0].allShipsSunk()&&0!==e.getPlayers()[0].getShips().length?(document.querySelector("#flow").textContent="Oh.. you lost..",!0):e.getPlayers()[1].allShipsSunk()&&0!==e.getPlayers()[1].getShips().length?(document.querySelector("#flow").textContent="Congratulations you won!",!0):{}}E(e),function(){document.querySelector("#gridDiv");const t=document.querySelector("#gridDiv2"),r=document.querySelector("#grid1"),o=document.querySelector("#controllers"),i=document.querySelector("#choices"),a=document.querySelector("#startButton"),A=document.querySelector("#restartButton");let l=3,s="horizontal";i.addEventListener("dragstart",(e=>{l=Number(e.target.attributes[0].value),s=e.target.className})),r.addEventListener("dragover",(e=>{if(e.preventDefault(),e.target.dataset.over="yes","horizontal"===s)for(let n=0;n<l;n++)e.target.parentNode.childNodes[Number(e.target.dataset.number)+n]&&(e.target.parentNode.childNodes[Number(e.target.dataset.number)+n].dataset.over="yes");else for(let n=Number(e.target.dataset.number);n<=Number(e.target.dataset.number)+10*(l-1);n+=10)e.target.parentNode.childNodes[n]&&(e.target.parentNode.childNodes[n].dataset.over="yes")})),r.addEventListener("dragleave",(e=>{if(e.preventDefault(),e.target.dataset.over="","horizontal"===s)for(let n=0;n<l;n++)e.target.parentNode.childNodes[Number(e.target.dataset.number)+n]&&(e.target.parentNode.childNodes[Number(e.target.dataset.number)+n].dataset.over="");else for(let n=Number(e.target.dataset.number);n<=Number(e.target.dataset.number)+10*(l-1);n+=10)e.target.parentNode.childNodes[n]&&(e.target.parentNode.childNodes[n].dataset.over="")})),r.addEventListener("drop",(n=>{n.preventDefault();for(let e=0;e<l;e++)n.target.parentNode.childNodes[Number(n.target.dataset.number)+e]&&(n.target.parentNode.childNodes[Number(n.target.dataset.number)+e].dataset.over="");for(let e=Number(n.target.dataset.number);e<=Number(n.target.dataset.number)+10*(l-1);e+=10)n.target.parentNode.childNodes[e]&&(n.target.parentNode.childNodes[e].dataset.over="");if(e.getPlayers()[0].getShips().length<10){let r=n.target.attributes[1].value,o=n.target.attributes[0].value;"horizontal"===s?e.playerShipPlacementH(Number(r),Number(o),Number(l)):e.playerShipPlacementV(Number(r),Number(o),Number(l)),10===e.getPlayers()[0].getShips().length&&(v(),C()),E(e),t=10-e.getPlayers()[0].getShips().length,document.querySelector("#remaining").textContent=`Remaining ships: ${t}`}var t;console.log(e.getPlayers()[0].getShips().length+"  AI="+e.getPlayers()[1].getShips().length)})),a.addEventListener("click",(n=>{0!==e.getPlayers()[0].getShips().length?(v(),C()):0===e.getPlayers()[0].getShips().length&&x()})),A.addEventListener("click",(e=>{document.location.reload()})),o.addEventListener("click",(e=>{"button"===e.target.localName&&function(e){const n=document.querySelector("#choices");n.className="",n.className=e;const t=document.querySelectorAll("#ship");"vertical"===e?t.forEach(((n,t)=>{n.className=e,n.style.gridTemplateColumns="",n.style.gridTemplateRows=`repeat(${t+1}, 40px )`})):t.forEach(((n,t)=>{n.className=e,n.style.gridTemplateRows="",n.style.gridTemplateColumns=`repeat(${t+1}, 40px )`}))}(e.target.dataset.position)}));const d=new AbortController;t.addEventListener("click",(t=>{let r,o;0===e.getPlayers()[0].getShips().length?x():t.target.dataset.line&&(r=t.target.dataset.line,o=t.target.dataset.column,e.playerTurn(r,o),E(e),C(),document.querySelector("#alert").textContent=""),n(),!0===n()&&d.abort()}),{signal:d.signal})}()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,