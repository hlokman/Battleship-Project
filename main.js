(()=>{"use strict";var e={982:(e,n,t)=>{t.d(n,{Z:()=>g});var r=t(537),i=t.n(r),a=t(645),o=t.n(a),A=t(667),l=t.n(A),c=new URL(t(57),t.b),s=new URL(t(894),t.b),d=o()(i()),p=l()(c),u=l()(s);d.push([e.id,`body {\n  font-family: "Roboto", Arial, Helvetica, sans-serif;\n  margin: 0;\n}\n\n#container {\n  display: grid;\n  grid-template-rows: 1fr 10fr;\n  height: 100vh;\n}\n\n#header {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border: 2px solid green;\n}\n#flow {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 80px;\n  width: 200px;\n  border: 2px solid black;\n  margin-bottom: 20px;\n}\n\n#content {\n  border: 2px solid purple;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n#grids {\n  /*flex-wrap: wrap;*/\n  width: 80%;\n  min-width: 755px;\n  height: 90%;\n  min-height: 550px;\n  border: 2px solid red;\n  display: grid;\n  grid-template-rows: 10fr 1fr;\n}\n#displays {\n  display: grid;\n  grid-template-columns: 1fr 90px 1fr;\n  width: 100%;\n  height: 100%;\n}\n#gridDiv {\n  /*flex: 1 1 550px;*/\n  width: 60%;\n  min-width: 350px;\n  height: 75%;\n  align-self: center;\n  justify-self: end;\n  /*display: flex;*/\n  border: 2px solid greenyellow;\n  display: grid;\n  grid-template-rows: 40px 1fr;\n}\n#playerOne {\n  background-color: antiquewhite;\n}\n#grid1 {\n  display: grid;\n  background-color: rgb(255, 255, 255);\n  grid-template-columns: repeat(10, 1fr);\n}\n\n#separation {\n  display: flex;\n  flex: 0 0 30px;\n  height: 40px;\n  justify-content: center;\n  align-items: center;\n  align-self: center;\n  margin: 10px;\n  /*border: 2px solid orange;*/\n}\n\n#gridDiv2 {\n  /*flex: 1 1 550px;*/\n  width: 60%;\n  min-width: 350px;\n  height: 75%;\n  align-self: center;\n  justify-self: start;\n  /*display: flex;*/\n  border: 2px solid blue;\n  display: grid;\n  grid-template-rows: 40px 1fr;\n}\n#playerTwo {\n  background-color: antiquewhite;\n}\n#grid2 {\n  display: grid;\n  background-color: rgb(255, 255, 255);\n  grid-template-columns: repeat(10, 1fr);\n}\n\n#square {\n  outline: 2px solid black;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 35px;\n  min-width: 35px;\n}\n#square.hit {\n  /*display: flex;\n  justify-content: center;\n  align-items: center;*/\n  align-self: center;\n  content: "";\n  background-image: url(${p});\n  background-repeat: no-repeat;\n  background-size: 65%;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border: none;\n  color: inherit;\n}\n#square.fail {\n  align-self: center;\n  content: "";\n  background-image: url(${u});\n  background-repeat: no-repeat;\n  background-size: 65%;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border: none;\n  color: inherit;\n}\n\n/*WHEN THE WINDOW IS RESIZED*/\n@media only screen and (min-width: 400px) and (max-width: 1210px) {\n  #content {\n    border: 2px solid purple;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  #grids {\n    justify-content: center;\n    align-items: center;\n    width: 80%;\n    min-height: 1200px;\n    border: 2px solid red;\n  }\n  #displays {\n    display: grid;\n    grid-template-rows: 1fr 90px 1fr;\n    grid-template-columns: 1fr;\n  }\n  #gridDiv {\n    height: 550px;\n    width: 550px;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    /*border: 2px solid purple;*/\n  }\n  #playerOne {\n    background-color: antiquewhite;\n  }\n  #grid1 {\n    display: grid;\n    background-color: rgb(255, 255, 255);\n  }\n\n  #separation {\n    justify-content: center;\n    align-items: center;\n    justify-self: center;\n    /*border: 2px solid orange;*/\n  }\n\n  #gridDiv2 {\n    height: 550px;\n    width: 550px;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    /*border: 2px solid blue;*/\n  }\n  #playerTwo {\n    background-color: antiquewhite;\n  }\n  #grid2 {\n    display: grid;\n    background-color: rgb(255, 255, 255);\n  }\n}\n\n/*MOBILE VERSION*/\n@media only screen and (max-width: 400px) {\n  body {\n    background-color: aqua;\n  }\n}\n`,"",{version:3,sources:["webpack://./src/style/style.css"],names:[],mappings:"AAAA;EACE,mDAAmD;EACnD,SAAS;AACX;;AAEA;EACE,aAAa;EACb,4BAA4B;EAC5B,aAAa;AACf;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,uBAAuB;AACzB;AACA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;EACZ,YAAY;EACZ,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,wBAAwB;EACxB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,mBAAmB;EACnB,UAAU;EACV,gBAAgB;EAChB,WAAW;EACX,iBAAiB;EACjB,qBAAqB;EACrB,aAAa;EACb,4BAA4B;AAC9B;AACA;EACE,aAAa;EACb,mCAAmC;EACnC,WAAW;EACX,YAAY;AACd;AACA;EACE,mBAAmB;EACnB,UAAU;EACV,gBAAgB;EAChB,WAAW;EACX,kBAAkB;EAClB,iBAAiB;EACjB,iBAAiB;EACjB,6BAA6B;EAC7B,aAAa;EACb,4BAA4B;AAC9B;AACA;EACE,8BAA8B;AAChC;AACA;EACE,aAAa;EACb,oCAAoC;EACpC,sCAAsC;AACxC;;AAEA;EACE,aAAa;EACb,cAAc;EACd,YAAY;EACZ,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;EAClB,YAAY;EACZ,4BAA4B;AAC9B;;AAEA;EACE,mBAAmB;EACnB,UAAU;EACV,gBAAgB;EAChB,WAAW;EACX,kBAAkB;EAClB,mBAAmB;EACnB,iBAAiB;EACjB,sBAAsB;EACtB,aAAa;EACb,4BAA4B;AAC9B;AACA;EACE,8BAA8B;AAChC;AACA;EACE,aAAa;EACb,oCAAoC;EACpC,sCAAsC;AACxC;;AAEA;EACE,wBAAwB;EACxB,uBAAuB;EACvB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,gBAAgB;EAChB,eAAe;AACjB;AACA;EACE;;uBAEqB;EACrB,kBAAkB;EAClB,WAAW;EACX,yDAAiC;EACjC,4BAA4B;EAC5B,oBAAoB;EACpB,2BAA2B;EAC3B,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,cAAc;AAChB;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,yDAAkC;EAClC,4BAA4B;EAC5B,oBAAoB;EACpB,2BAA2B;EAC3B,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,cAAc;AAChB;;AAEA,6BAA6B;AAC7B;EACE;IACE,wBAAwB;IACxB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;EACrB;;EAEA;IACE,uBAAuB;IACvB,mBAAmB;IACnB,UAAU;IACV,kBAAkB;IAClB,qBAAqB;EACvB;EACA;IACE,aAAa;IACb,gCAAgC;IAChC,0BAA0B;EAC5B;EACA;IACE,aAAa;IACb,YAAY;IACZ,aAAa;IACb,4BAA4B;IAC5B,4BAA4B;EAC9B;EACA;IACE,8BAA8B;EAChC;EACA;IACE,aAAa;IACb,oCAAoC;EACtC;;EAEA;IACE,uBAAuB;IACvB,mBAAmB;IACnB,oBAAoB;IACpB,4BAA4B;EAC9B;;EAEA;IACE,aAAa;IACb,YAAY;IACZ,aAAa;IACb,4BAA4B;IAC5B,0BAA0B;EAC5B;EACA;IACE,8BAA8B;EAChC;EACA;IACE,aAAa;IACb,oCAAoC;EACtC;AACF;;AAEA,iBAAiB;AACjB;EACE;IACE,sBAAsB;EACxB;AACF",sourcesContent:['body {\n  font-family: "Roboto", Arial, Helvetica, sans-serif;\n  margin: 0;\n}\n\n#container {\n  display: grid;\n  grid-template-rows: 1fr 10fr;\n  height: 100vh;\n}\n\n#header {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border: 2px solid green;\n}\n#flow {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 80px;\n  width: 200px;\n  border: 2px solid black;\n  margin-bottom: 20px;\n}\n\n#content {\n  border: 2px solid purple;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n#grids {\n  /*flex-wrap: wrap;*/\n  width: 80%;\n  min-width: 755px;\n  height: 90%;\n  min-height: 550px;\n  border: 2px solid red;\n  display: grid;\n  grid-template-rows: 10fr 1fr;\n}\n#displays {\n  display: grid;\n  grid-template-columns: 1fr 90px 1fr;\n  width: 100%;\n  height: 100%;\n}\n#gridDiv {\n  /*flex: 1 1 550px;*/\n  width: 60%;\n  min-width: 350px;\n  height: 75%;\n  align-self: center;\n  justify-self: end;\n  /*display: flex;*/\n  border: 2px solid greenyellow;\n  display: grid;\n  grid-template-rows: 40px 1fr;\n}\n#playerOne {\n  background-color: antiquewhite;\n}\n#grid1 {\n  display: grid;\n  background-color: rgb(255, 255, 255);\n  grid-template-columns: repeat(10, 1fr);\n}\n\n#separation {\n  display: flex;\n  flex: 0 0 30px;\n  height: 40px;\n  justify-content: center;\n  align-items: center;\n  align-self: center;\n  margin: 10px;\n  /*border: 2px solid orange;*/\n}\n\n#gridDiv2 {\n  /*flex: 1 1 550px;*/\n  width: 60%;\n  min-width: 350px;\n  height: 75%;\n  align-self: center;\n  justify-self: start;\n  /*display: flex;*/\n  border: 2px solid blue;\n  display: grid;\n  grid-template-rows: 40px 1fr;\n}\n#playerTwo {\n  background-color: antiquewhite;\n}\n#grid2 {\n  display: grid;\n  background-color: rgb(255, 255, 255);\n  grid-template-columns: repeat(10, 1fr);\n}\n\n#square {\n  outline: 2px solid black;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 35px;\n  min-width: 35px;\n}\n#square.hit {\n  /*display: flex;\n  justify-content: center;\n  align-items: center;*/\n  align-self: center;\n  content: "";\n  background-image: url(./mine.svg);\n  background-repeat: no-repeat;\n  background-size: 65%;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border: none;\n  color: inherit;\n}\n#square.fail {\n  align-self: center;\n  content: "";\n  background-image: url(./water.svg);\n  background-repeat: no-repeat;\n  background-size: 65%;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border: none;\n  color: inherit;\n}\n\n/*WHEN THE WINDOW IS RESIZED*/\n@media only screen and (min-width: 400px) and (max-width: 1210px) {\n  #content {\n    border: 2px solid purple;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  #grids {\n    justify-content: center;\n    align-items: center;\n    width: 80%;\n    min-height: 1200px;\n    border: 2px solid red;\n  }\n  #displays {\n    display: grid;\n    grid-template-rows: 1fr 90px 1fr;\n    grid-template-columns: 1fr;\n  }\n  #gridDiv {\n    height: 550px;\n    width: 550px;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    /*border: 2px solid purple;*/\n  }\n  #playerOne {\n    background-color: antiquewhite;\n  }\n  #grid1 {\n    display: grid;\n    background-color: rgb(255, 255, 255);\n  }\n\n  #separation {\n    justify-content: center;\n    align-items: center;\n    justify-self: center;\n    /*border: 2px solid orange;*/\n  }\n\n  #gridDiv2 {\n    height: 550px;\n    width: 550px;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    /*border: 2px solid blue;*/\n  }\n  #playerTwo {\n    background-color: antiquewhite;\n  }\n  #grid2 {\n    display: grid;\n    background-color: rgb(255, 255, 255);\n  }\n}\n\n/*MOBILE VERSION*/\n@media only screen and (max-width: 400px) {\n  body {\n    background-color: aqua;\n  }\n}\n'],sourceRoot:""}]);const g=d},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,i,a){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(r)for(var A=0;A<this.length;A++){var l=this[A][0];null!=l&&(o[l]=!0)}for(var c=0;c<e.length;c++){var s=[].concat(e[c]);r&&o[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),i&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=i):s[4]="".concat(i)),n.push(s))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(i," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},o=[],A=0;A<e.length;A++){var l=e[A],c=r.base?l[0]+r.base:l[0],s=a[c]||0,d="".concat(c," ").concat(s);a[c]=s+1;var p=t(d),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var g=i(u,r);r.byIndex=A,n.splice(A,0,{identifier:d,updater:g,references:1})}o.push(d)}return o}function i(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,i){var a=r(e=e||[],i=i||{});return function(e){e=e||[];for(var o=0;o<a.length;o++){var A=t(a[o]);n[A].references--}for(var l=r(e,i),c=0;c<a.length;c++){var s=t(a[c]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}a=l}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},57:(e,n,t)=>{e.exports=t.p+"cdab7ebe0d7a75037e8d.svg"},894:(e,n,t)=>{e.exports=t.p+"af5c785f05ced1400712.svg"}},n={};function t(r){var i=n[r];if(void 0!==i)return i.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var i=r.length-1;i>-1&&!e;)e=r[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),i=t.n(r),a=t(569),o=t.n(a),A=t(565),l=t.n(A),c=t(216),s=t.n(c),d=t(589),p=t.n(d),u=t(982),g={};g.styleTagTransform=p(),g.setAttributes=l(),g.insert=o().bind(null,"head"),g.domAPI=i(),g.insertStyleElement=s(),n()(u.Z,g),u.Z&&u.Z.locals&&u.Z.locals;const h=e=>{if(e<=0)throw new Error("The minimum length must be 1");let n=0,t=e;return{getLength:()=>t,getHits:()=>n,hit:function(){n!==t&&n++},isSunk:function(){return n===t}}},C=(e=10)=>{let n=[],t=[];for(let t=0;t<e;t++){let t=new Array(e).fill(null);n.push(t)}return{getBoard:()=>n,placeShipHorizontally:function(r,i,a){if(r<0||r>e-1||i+a>e||i<0||i>e-1)throw new Error("The ship goes beyond the limits");let o=h(a),A=[];for(let e=0;e<a;e++)A.push(n[r][i+e]);if(!A.every((e=>null===e)))throw A=[],new Error("The ship touches another ship");for(let e=0;e<a;e++)n[r][i+e]=o;t.push(o),A=[]},placeShipVertically:function(r,i,a){if(r<0||r>e-1||r+a>e||i<0||i>e-1)throw new Error("The ship goes beyond the limits");let o=h(a),A=[];for(let e=0;e<a;e++)A.push(n[r+e][i]);if(!A.every((e=>null===e)))throw A=[],new Error("The ship touches another ship");for(let e=0;e<a;e++)n[r+e][i]=o;t.push(o),A=[]},receiveAttack:function(e,t){if(null===n[e][t])return n[e][t]=!1,"Oops.. nothing has been hit";if(!1===n[e][t])throw new Error("This spot has already been hit ");return n[e][t].hit(),n[e][t]="hit","A ship has been hit!"},getShips:()=>t,allShipsSunk:function(){return t.every((e=>!0===e.isSunk()))}}},f=((e="Player",n="Computer")=>{const t=C();t.name="Player";const r=C();r.name="Computer";const i=[t,r];let a=i[1];return{getPlayers:()=>i,changePlayer:function(){a=a===i[1]?i[0]:i[1]},getPlayerUnderAttack:()=>a}})();f.changePlayer(),f.getPlayers()[0].placeShipHorizontally(5,4,4),f.getPlayers()[0].placeShipHorizontally(7,4,4),f.getPlayers()[0].placeShipHorizontally(9,4,4),f.getPlayers()[0].placeShipVertically(1,1,1),f.getPlayers()[0].placeShipVertically(0,1,1),f.getPlayers()[0].placeShipVertically(6,1,1),f.getPlayers()[0].placeShipVertically(0,9,2),f.getPlayerUnderAttack().receiveAttack(5,4),f.getPlayerUnderAttack().receiveAttack(5,5),f.getPlayerUnderAttack().receiveAttack(5,6),f.getPlayerUnderAttack().receiveAttack(5,7),f.getPlayerUnderAttack().receiveAttack(7,4),f.getPlayerUnderAttack().receiveAttack(7,5),f.getPlayerUnderAttack().receiveAttack(7,6),f.getPlayerUnderAttack().receiveAttack(7,7),f.getPlayerUnderAttack().receiveAttack(9,4),f.getPlayerUnderAttack().receiveAttack(9,5),f.getPlayerUnderAttack().receiveAttack(9,6),f.getPlayerUnderAttack().receiveAttack(9,7),f.getPlayerUnderAttack().receiveAttack(1,1),f.getPlayerUnderAttack().receiveAttack(0,1),f.getPlayerUnderAttack().receiveAttack(6,1),f.getPlayerUnderAttack().receiveAttack(0,9),f.getPlayerUnderAttack().receiveAttack(4,4),f.getPlayerUnderAttack().receiveAttack(2,7),f.getPlayerUnderAttack().receiveAttack(7,9),f.changePlayer(),f.getPlayers()[1].placeShipHorizontally(1,4,2),f.getPlayers()[1].placeShipHorizontally(3,4,2),f.getPlayers()[1].placeShipHorizontally(5,4,2),f.getPlayers()[1].placeShipVertically(8,8,1),f.getPlayerUnderAttack().receiveAttack(1,4),f.getPlayerUnderAttack().receiveAttack(1,5),f.getPlayerUnderAttack().receiveAttack(3,4),f.getPlayerUnderAttack().receiveAttack(3,5),f.getPlayerUnderAttack().receiveAttack(5,4),f.getPlayerUnderAttack().receiveAttack(5,5),function(){const e=document.querySelector("#content"),n=document.querySelector("#header"),t=document.createElement("div");t.setAttribute("id","playersAndFlow"),n.appendChild(t);const r=document.createElement("div");r.setAttribute("id","flow"),t.appendChild(r);const i=document.createElement("div");i.setAttribute("id","grids"),e.appendChild(i);const a=document.createElement("div");a.setAttribute("id","displays"),i.appendChild(a);const o=document.createElement("div");o.setAttribute("id","controllers"),i.appendChild(o);const A=document.createElement("div");A.setAttribute("id","gridDiv"),a.appendChild(A);const l=document.createElement("div");l.setAttribute("id","playerOne"),A.appendChild(l);const c=document.createElement("div");c.setAttribute("id","grid1"),A.appendChild(c);for(let e=0;e<10;e++)for(let n=0;n<10;n++){const t=document.createElement("span");t.setAttribute("data-column",`${n}`),t.setAttribute("data-line",`${e}`),t.setAttribute("id","square"),c.appendChild(t)}const s=document.createElement("div");s.setAttribute("id","separation"),a.appendChild(s),s.innerHTML="<h1>VS</h1>";const d=document.createElement("div");d.setAttribute("id","gridDiv2"),a.appendChild(d);const p=document.createElement("div");p.setAttribute("id","playerTwo"),d.appendChild(p);const u=document.createElement("div");u.setAttribute("id","grid2"),d.appendChild(u);for(let e=0;e<10;e++)for(let n=0;n<10;n++){const t=document.createElement("span");t.setAttribute("data-column",`${n}`),t.setAttribute("data-line",`${e}`),t.setAttribute("id","square"),u.appendChild(t)}}(),function(){const e=document.querySelectorAll("#grid1 > span"),n=document.querySelectorAll("#grid2 > span");console.log(e[1].attributes[0].value),console.log(e[1].attributes[1].value),console.log(f.getPlayers()[0].getShips()),console.log(e[10].attributes[0].value),console.log(e[10].attributes[1].value);for(let n=0;n<100;n++)null!==f.getPlayers()[0].getBoard()[e[n].attributes[1].value][e[n].attributes[0].value]&&!1!==f.getPlayers()[0].getBoard()[e[n].attributes[1].value][e[n].attributes[0].value]&&"hit"!==f.getPlayers()[0].getBoard()[e[n].attributes[1].value][e[n].attributes[0].value]?e[n].style.backgroundColor="grey":!1===f.getPlayers()[0].getBoard()[e[n].attributes[1].value][e[n].attributes[0].value]?e[n].className="fail":"hit"===f.getPlayers()[0].getBoard()[e[n].attributes[1].value][e[n].attributes[0].value]&&(e[n].className="hit");for(let e=0;e<100;e++)!1===f.getPlayers()[1].getBoard()[n[e].attributes[1].value][n[e].attributes[0].value]?n[e].className="fail":"hit"===f.getPlayers()[1].getBoard()[n[e].attributes[1].value][n[e].attributes[0].value]&&(n[e].className="hit");console.log(f.getPlayers()[0].getBoard()),console.log(f.getPlayers()[1].getBoard()),console.log(f)}(),function(){const e=new AbortController;f.getPlayers()[0].allShipsSunk()?(document.querySelector("#flow").textContent="Oh.. you lost..",e.abort()):f.getPlayers()[1].allShipsSunk()&&(document.querySelector("#flow").textContent="Congratulations you won!",e.abort())}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,