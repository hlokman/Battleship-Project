(()=>{"use strict";var e={982:(e,t,n)=>{n.d(t,{Z:()=>g});var r=n(537),a=n.n(r),i=n(645),o=n.n(i),l=n(667),A=n.n(l),s=new URL(n(57),n.b),d=new URL(n(894),n.b),c=o()(a()),p=A()(s),u=A()(d);c.push([e.id,`body {\n  font-family: "Roboto", Arial, Helvetica, sans-serif;\n  margin: 0;\n}\n\n#container {\n  display: grid;\n  grid-template-rows: 1fr 10fr;\n  height: 100vh;\n}\n\n#header {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border: 2px solid green;\n}\n#flow {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 80px;\n  width: 200px;\n  border: 2px solid black;\n  margin-bottom: 20px;\n}\n\n#content {\n  border: 2px solid purple;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n#grids {\n  /*flex-wrap: wrap;*/\n  width: 80%;\n  min-width: 755px;\n  height: 90%;\n  min-height: 550px;\n  border: 2px solid red;\n  display: grid;\n  grid-template-rows: 500px 300px;\n}\n#displays {\n  display: grid;\n  grid-template-columns: 1fr 90px 1fr;\n  width: 100%;\n  height: 100%;\n}\n#gridDiv {\n  /*flex: 1 1 550px;*/\n  width: 50%;\n  min-width: 350px;\n  height: 75%;\n\n  justify-self: end;\n  /*display: flex;*/\n  border: 2px solid greenyellow;\n  display: grid;\n  grid-template-rows: 30px 1fr;\n}\n#playerOne {\n  background-color: antiquewhite;\n}\n#grid1 {\n  display: grid;\n  background-color: rgb(255, 255, 255);\n  grid-template-columns: repeat(10, 1fr);\n}\n\n#separation {\n  display: flex;\n  flex: 0 0 30px;\n  height: 40px;\n  justify-content: center;\n  align-self: center;\n  margin: 10px;\n  padding-bottom: 130px;\n  /*border: 2px solid orange;*/\n}\n\n#gridDiv2 {\n  /*flex: 1 1 550px;*/\n  width: 60%;\n  min-width: 350px;\n  height: 75%;\n\n  justify-self: start;\n  /*display: flex;*/\n  border: 2px solid blue;\n  display: grid;\n  grid-template-rows: 40px 1fr;\n}\n#playerTwo {\n  background-color: antiquewhite;\n}\n#grid2 {\n  display: grid;\n  background-color: rgb(255, 255, 255);\n  grid-template-columns: repeat(10, 1fr);\n}\n\n#square {\n  outline: 2px solid black;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 35px;\n  min-width: 35px;\n}\n#square.hit {\n  /*display: flex;\n  justify-content: center;\n  align-items: center;*/\n  align-self: center;\n  content: "";\n  background-image: url(${p});\n  background-repeat: no-repeat;\n  background-size: 65%;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border: none;\n  color: inherit;\n}\n#square.fail {\n  align-self: center;\n  content: "";\n  background-image: url(${u});\n  background-repeat: no-repeat;\n  background-size: 65%;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border: none;\n  color: inherit;\n}\n#square[data-over="yes"] {\n  background-color: yellow;\n}\n\n#controllers {\n  display: grid;\n  height: 350px;\n  grid-template-rows: 20px 50px 100px;\n}\n#topController {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n}\n#topController > #length {\n  align-self: center;\n  justify-self: center;\n}\n#bottomController {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n}\n#choices.horizontal {\n  display: grid;\n  grid-template-columns: repeat(4, 140px);\n  grid-template-rows: 1fr 1fr;\n  gap: 5px;\n}\n#choices.vertical {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: 1fr;\n  gap: 5px;\n}\n#choices > #ship {\n  display: grid;\n  justify-self: center;\n  align-self: center;\n}\n#squareShip {\n  outline: 2px solid black;\n  background-color: rgb(139, 139, 139);\n  height: 35px;\n  width: 35px;\n}\n\n/*WHEN THE WINDOW IS RESIZED*/\n@media only screen and (min-width: 400px) and (max-width: 1210px) {\n  #content {\n    border: 2px solid purple;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  #grids {\n    justify-content: center;\n    align-items: center;\n    width: 80%;\n    height: 1550px;\n    border: 2px solid red;\n    grid-template-rows: 1300px 1fr;\n  }\n  #displays {\n    display: grid;\n    grid-template-rows: 1fr 90px 1fr;\n    grid-template-columns: 1fr;\n  }\n  #gridDiv {\n    height: 550px;\n    width: 550px;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    align-self: end;\n    justify-self: center;\n    /*border: 2px solid purple;*/\n  }\n  #playerOne {\n    background-color: antiquewhite;\n  }\n  #grid1 {\n    display: grid;\n    background-color: rgb(255, 255, 255);\n  }\n\n  #separation {\n    justify-content: center;\n    align-items: center;\n    justify-self: center;\n    align-self: center;\n    height: 40px;\n    width: 40px;\n    padding-bottom: 0px;\n    /*border: 2px solid orange;*/\n  }\n\n  #gridDiv2 {\n    height: 550px;\n    width: 550px;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    justify-self: center;\n    /*border: 2px solid blue;*/\n  }\n  #playerTwo {\n    background-color: antiquewhite;\n  }\n  #grid2 {\n    display: grid;\n    background-color: rgb(255, 255, 255);\n  }\n}\n\n/*MOBILE VERSION*/\n@media only screen and (max-width: 400px) {\n  body {\n    background-color: aqua;\n  }\n}\n`,"",{version:3,sources:["webpack://./src/style/style.css"],names:[],mappings:"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",sourcesContent:['body {\n  font-family: "Roboto", Arial, Helvetica, sans-serif;\n  margin: 0;\n}\n\n#container {\n  display: grid;\n  grid-template-rows: 1fr 10fr;\n  height: 100vh;\n}\n\n#header {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border: 2px solid green;\n}\n#flow {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 80px;\n  width: 200px;\n  border: 2px solid black;\n  margin-bottom: 20px;\n}\n\n#content {\n  border: 2px solid purple;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n#grids {\n  /*flex-wrap: wrap;*/\n  width: 80%;\n  min-width: 755px;\n  height: 90%;\n  min-height: 550px;\n  border: 2px solid red;\n  display: grid;\n  grid-template-rows: 500px 300px;\n}\n#displays {\n  display: grid;\n  grid-template-columns: 1fr 90px 1fr;\n  width: 100%;\n  height: 100%;\n}\n#gridDiv {\n  /*flex: 1 1 550px;*/\n  width: 50%;\n  min-width: 350px;\n  height: 75%;\n\n  justify-self: end;\n  /*display: flex;*/\n  border: 2px solid greenyellow;\n  display: grid;\n  grid-template-rows: 30px 1fr;\n}\n#playerOne {\n  background-color: antiquewhite;\n}\n#grid1 {\n  display: grid;\n  background-color: rgb(255, 255, 255);\n  grid-template-columns: repeat(10, 1fr);\n}\n\n#separation {\n  display: flex;\n  flex: 0 0 30px;\n  height: 40px;\n  justify-content: center;\n  align-self: center;\n  margin: 10px;\n  padding-bottom: 130px;\n  /*border: 2px solid orange;*/\n}\n\n#gridDiv2 {\n  /*flex: 1 1 550px;*/\n  width: 60%;\n  min-width: 350px;\n  height: 75%;\n\n  justify-self: start;\n  /*display: flex;*/\n  border: 2px solid blue;\n  display: grid;\n  grid-template-rows: 40px 1fr;\n}\n#playerTwo {\n  background-color: antiquewhite;\n}\n#grid2 {\n  display: grid;\n  background-color: rgb(255, 255, 255);\n  grid-template-columns: repeat(10, 1fr);\n}\n\n#square {\n  outline: 2px solid black;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 35px;\n  min-width: 35px;\n}\n#square.hit {\n  /*display: flex;\n  justify-content: center;\n  align-items: center;*/\n  align-self: center;\n  content: "";\n  background-image: url(./mine.svg);\n  background-repeat: no-repeat;\n  background-size: 65%;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border: none;\n  color: inherit;\n}\n#square.fail {\n  align-self: center;\n  content: "";\n  background-image: url(./water.svg);\n  background-repeat: no-repeat;\n  background-size: 65%;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border: none;\n  color: inherit;\n}\n#square[data-over="yes"] {\n  background-color: yellow;\n}\n\n#controllers {\n  display: grid;\n  height: 350px;\n  grid-template-rows: 20px 50px 100px;\n}\n#topController {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n}\n#topController > #length {\n  align-self: center;\n  justify-self: center;\n}\n#bottomController {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n}\n#choices.horizontal {\n  display: grid;\n  grid-template-columns: repeat(4, 140px);\n  grid-template-rows: 1fr 1fr;\n  gap: 5px;\n}\n#choices.vertical {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: 1fr;\n  gap: 5px;\n}\n#choices > #ship {\n  display: grid;\n  justify-self: center;\n  align-self: center;\n}\n#squareShip {\n  outline: 2px solid black;\n  background-color: rgb(139, 139, 139);\n  height: 35px;\n  width: 35px;\n}\n\n/*WHEN THE WINDOW IS RESIZED*/\n@media only screen and (min-width: 400px) and (max-width: 1210px) {\n  #content {\n    border: 2px solid purple;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  #grids {\n    justify-content: center;\n    align-items: center;\n    width: 80%;\n    height: 1550px;\n    border: 2px solid red;\n    grid-template-rows: 1300px 1fr;\n  }\n  #displays {\n    display: grid;\n    grid-template-rows: 1fr 90px 1fr;\n    grid-template-columns: 1fr;\n  }\n  #gridDiv {\n    height: 550px;\n    width: 550px;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    align-self: end;\n    justify-self: center;\n    /*border: 2px solid purple;*/\n  }\n  #playerOne {\n    background-color: antiquewhite;\n  }\n  #grid1 {\n    display: grid;\n    background-color: rgb(255, 255, 255);\n  }\n\n  #separation {\n    justify-content: center;\n    align-items: center;\n    justify-self: center;\n    align-self: center;\n    height: 40px;\n    width: 40px;\n    padding-bottom: 0px;\n    /*border: 2px solid orange;*/\n  }\n\n  #gridDiv2 {\n    height: 550px;\n    width: 550px;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    justify-self: center;\n    /*border: 2px solid blue;*/\n  }\n  #playerTwo {\n    background-color: antiquewhite;\n  }\n  #grid2 {\n    display: grid;\n    background-color: rgb(255, 255, 255);\n  }\n}\n\n/*MOBILE VERSION*/\n@media only screen and (max-width: 400px) {\n  body {\n    background-color: aqua;\n  }\n}\n'],sourceRoot:""}]);const g=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,i){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(r)for(var l=0;l<this.length;l++){var A=this[l][0];null!=A&&(o[A]=!0)}for(var s=0;s<e.length;s++){var d=[].concat(e[s]);r&&o[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),t.push(d))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(a," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},o=[],l=0;l<e.length;l++){var A=e[l],s=r.base?A[0]+r.base:A[0],d=i[s]||0,c="".concat(s," ").concat(d);i[s]=d+1;var p=n(c),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var g=a(u,r);r.byIndex=l,t.splice(l,0,{identifier:c,updater:g,references:1})}o.push(c)}return o}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var i=r(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<i.length;o++){var l=n(i[o]);t[l].references--}for(var A=r(e,a),s=0;s<i.length;s++){var d=n(i[s]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}i=A}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},57:(e,t,n)=>{e.exports=n.p+"cdab7ebe0d7a75037e8d.svg"},894:(e,t,n)=>{e.exports=n.p+"af5c785f05ced1400712.svg"}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var i=t[r]={id:r,exports:{}};return e[r](i,i.exports,n),i.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&!e;)e=r[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),a=n.n(r),i=n(569),o=n.n(i),l=n(565),A=n.n(l),s=n(216),d=n.n(s),c=n(589),p=n.n(c),u=n(982),g={};g.styleTagTransform=p(),g.setAttributes=A(),g.insert=o().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=d(),t()(u.Z,g),u.Z&&u.Z.locals&&u.Z.locals;const C=e=>{if(e<=0)throw new Error("The minimum length must be 1");let t=0,n=e;return{getLength:()=>n,getHits:()=>t,hit:function(){t!==n&&t++},isSunk:function(){return t===n}}},h=(e=10)=>{let t=[],n=[];for(let n=0;n<e;n++){let n=new Array(e).fill(null);t.push(n)}return{getBoard:()=>t,placeShipHorizontally:function(r,a,i,o=!0){if(r<0||r>e-1||a+i>e||a<0||a>e-1)return null;let l=C(i),A=[];for(let e=0;e<i;e++)A.push(t[r][a+e]);if(A.every((e=>null===e))){for(let e=0;e<i;e++)t[r][a+e]=l;return n.push(l),A=[],!0}return A=[],!1},placeShipVertically:function(r,a,i,o=!0){if(r<0||r>e-1||r+i>e||a<0||a>e-1)return null;let l=C(i),A=[];for(let e=0;e<i;e++)A.push(t[r+e][a]);if(A.every((e=>null===e))){for(let e=0;e<i;e++)t[r+e][a]=l;return n.push(l),A=[],!0}return A=[],!1},receiveAttack:function(e,n,r=!0){return null===t[e][n]?(t[e][n]=!1,null):!1!==t[e][n]&&"hit"!==t[e][n]&&(t[e][n]&&"object"==typeof t[e][n]?(t[e][n].hit(),t[e][n]="hit",!0):void 0)},getShips:()=>n,allShipsSunk:function(){return n.every((e=>!0===e.isSunk()))}}};let m,f;function B(e){const t=document.querySelectorAll("#grid1 > span"),n=document.querySelectorAll("#grid2 > span");console.log(t[1].attributes[0].value),console.log(t[1].attributes[1].value),console.log(e.getPlayers()[0].getShips()),console.log(t[10].attributes[0].value),console.log(t[10].attributes[1].value);for(let n=0;n<100;n++)null!==e.getPlayers()[0].getBoard()[t[n].attributes[1].value][t[n].attributes[0].value]&&!1!==e.getPlayers()[0].getBoard()[t[n].attributes[1].value][t[n].attributes[0].value]&&"hit"!==e.getPlayers()[0].getBoard()[t[n].attributes[1].value][t[n].attributes[0].value]?t[n].style.backgroundColor="grey":!1===e.getPlayers()[0].getBoard()[t[n].attributes[1].value][t[n].attributes[0].value]?t[n].className="fail":"hit"===e.getPlayers()[0].getBoard()[t[n].attributes[1].value][t[n].attributes[0].value]&&(t[n].className="hit");for(let t=0;t<100;t++)!1===e.getPlayers()[1].getBoard()[n[t].attributes[1].value][n[t].attributes[0].value]?n[t].className="fail":"hit"===e.getPlayers()[1].getBoard()[n[t].attributes[1].value][n[t].attributes[0].value]&&(n[t].className="hit"),b(m),E(f);console.log(e.getPlayers()[0].getBoard()),console.log(e.getPlayers()[1].getBoard()),console.log(e)}function b(e){const t=document.querySelector("#flow");e?t.textContent="A ship has been hit!":!1===e?t.textContent="This spot has already been hit ":null===e&&(t.textContent="Oops.. nothing has been hit")}function E(e){const t=document.querySelector("#flow");e?t.textContent="":!1===e?t.textContent="The ship touches another ship. Choose another spot":null===e&&(t.textContent="The ship goes beyond the limits")}!function(){const e=document.querySelector("#content"),t=document.querySelector("#header"),n=document.createElement("div");n.setAttribute("id","playersAndFlow"),t.appendChild(n);const r=document.createElement("div");r.setAttribute("id","flow"),n.appendChild(r);const a=document.createElement("div");a.setAttribute("id","grids"),e.appendChild(a);const i=document.createElement("div");i.setAttribute("id","displays"),a.appendChild(i);const o=document.createElement("div");o.setAttribute("id","gridDiv"),i.appendChild(o);const l=document.createElement("div");l.setAttribute("id","playerOne"),o.appendChild(l);const A=document.createElement("div");A.setAttribute("id","grid1"),o.appendChild(A);for(let e=0;e<10;e++)for(let t=0;t<10;t++){const n=document.createElement("span");n.setAttribute("data-column",`${t}`),n.setAttribute("data-line",`${e}`),n.setAttribute("id","square"),A.appendChild(n)}const s=document.querySelectorAll("#square");for(let e=0;e<100;e++)s[e].setAttribute("data-number",`${e}`);const d=document.createElement("div");d.setAttribute("id","separation"),i.appendChild(d),d.innerHTML="<h1>VS</h1>";const c=document.createElement("div");c.setAttribute("id","gridDiv2"),i.appendChild(c);const p=document.createElement("div");p.setAttribute("id","playerTwo"),c.appendChild(p);const u=document.createElement("div");u.setAttribute("id","grid2"),c.appendChild(u);for(let e=0;e<10;e++)for(let t=0;t<10;t++){const n=document.createElement("span");n.setAttribute("data-column",`${t}`),n.setAttribute("data-line",`${e}`),n.setAttribute("id","square"),u.appendChild(n)}const g=document.createElement("div");g.setAttribute("id","controllers"),a.appendChild(g);const C=document.createElement("div");C.setAttribute("id","topController"),g.appendChild(C);for(let e=1;e<=10;e++){const t=document.createElement("div");t.setAttribute("data-length",`${e}`),t.setAttribute("id","length"),t.textContent=`${e}`,C.appendChild(t)}const h=document.createElement("div");h.setAttribute("id","bottomController"),g.appendChild(h);const m=document.createElement("button");m.setAttribute("data-position","horizontal"),m.textContent="Horizontal",h.appendChild(m);const f=document.createElement("button");f.setAttribute("data-position","vertical"),f.textContent="Vertical",h.appendChild(f);const B=document.createElement("div");B.setAttribute("id","choices"),B.setAttribute("class","horizontal"),g.appendChild(B);for(let e=1;e<=5;e++){const t=document.createElement("div");t.setAttribute("data-shipLength",`${e}`),t.setAttribute("id","ship"),t.setAttribute("class","horizontal"),t.setAttribute("draggable","true"),B.appendChild(t);for(let n=1;n<=e;n++){const n=document.createElement("div");n.setAttribute("id","squareShip"),t.appendChild(n),t.style.gridTemplateColumns=`repeat(${e}, 35px )`}}}(),function(){const e=((e="Player",t="Computer")=>{const n=h();n.name="Player";const r=h();r.name="Computer";const a=[n,r];let i=a[1];function o(){i=i===a[1]?a[0]:a[1]}return{getPlayers:()=>a,changePlayer:o,getPlayerUnderAttack:()=>i,playerTurn:function(e,t){let n=i.receiveAttack(e,t);o(),m=n,n||null===n?(function(){let e;do{e=i.receiveAttack(Math.floor(10*Math.random()),Math.floor(10*Math.random()),!1)}while(!1===e)}(),o()):o()},playerShipPlacementH:function(e,t,n){let r=a[0].placeShipHorizontally(e,t,n);f=r,!0===r&&function(e){let t;do{t=a[1].placeShipHorizontally(Math.floor(10*Math.random()),Math.floor(10*Math.random()),e)}while(!1===t||null===t)}(n)},playerShipPlacementV:function(e,t,n){let r=a[0].placeShipVertically(e,t,n);f=r,console.log("result:   "+r),!0===r&&function(e){let t;do{t=a[1].placeShipVertically(Math.floor(10*Math.random()),Math.floor(10*Math.random()),e)}while(!1===t||null===t)}(n)}}})();function t(){return e.getPlayers()[0].allShipsSunk()&&0!==e.getPlayers()[0].getShips().length?(document.querySelector("#flow").textContent="Oh.. you lost..",!0):e.getPlayers()[1].allShipsSunk()&&0!==e.getPlayers()[1].getShips().length?(document.querySelector("#flow").textContent="Congratulations you won!",!0):{}}B(e),function(){document.querySelector("#gridDiv");const n=document.querySelector("#gridDiv2"),r=document.querySelector("#grid1"),a=document.querySelector("#controllers"),i=document.querySelector("#choices");let o=3,l="horizontal";i.addEventListener("dragstart",(e=>{o=Number(e.target.attributes[0].value),l=e.target.className})),r.addEventListener("dragover",(e=>{if(e.preventDefault(),e.target.dataset.over="yes","horizontal"===l)for(let t=0;t<o;t++)e.target.parentNode.childNodes[Number(e.target.dataset.number)+t]&&(e.target.parentNode.childNodes[Number(e.target.dataset.number)+t].dataset.over="yes");else for(let t=Number(e.target.dataset.number);t<=Number(e.target.dataset.number)+10*(o-1);t+=10)e.target.parentNode.childNodes[t]&&(e.target.parentNode.childNodes[t].dataset.over="yes")})),r.addEventListener("dragleave",(e=>{if(e.preventDefault(),e.target.dataset.over="","horizontal"===l)for(let t=0;t<o;t++)e.target.parentNode.childNodes[Number(e.target.dataset.number)+t]&&(e.target.parentNode.childNodes[Number(e.target.dataset.number)+t].dataset.over="");else for(let t=Number(e.target.dataset.number);t<=Number(e.target.dataset.number)+10*(o-1);t+=10)e.target.parentNode.childNodes[t]&&(e.target.parentNode.childNodes[t].dataset.over="")})),r.addEventListener("drop",(t=>{t.preventDefault();for(let e=0;e<o;e++)t.target.parentNode.childNodes[Number(t.target.dataset.number)+e]&&(t.target.parentNode.childNodes[Number(t.target.dataset.number)+e].dataset.over="");for(let e=Number(t.target.dataset.number);e<=Number(t.target.dataset.number)+10*(o-1);e+=10)t.target.parentNode.childNodes[e]&&(t.target.parentNode.childNodes[e].dataset.over="");let n=t.target.attributes[1].value,r=t.target.attributes[0].value;"horizontal"===l?e.playerShipPlacementH(Number(n),Number(r),Number(o)):e.playerShipPlacementV(Number(n),Number(r),Number(o)),B(e),console.log(e.getPlayers()[0].getShips().length+"  AI="+e.getPlayers()[1].getShips().length)})),a.addEventListener("click",(e=>{"button"===e.target.localName&&function(e){const t=document.querySelector("#choices");t.className="",t.className=e;const n=document.querySelectorAll("#ship");"vertical"===e?n.forEach(((t,n)=>{t.className=e,t.style.gridTemplateColumns="",t.style.gridTemplateRows=`repeat(${n+1}, 35px )`})):n.forEach(((t,n)=>{t.className=e,t.style.gridTemplateRows="",t.style.gridTemplateColumns=`repeat(${n+1}, 35px )`}))}(e.target.dataset.position)}));const A=new AbortController;n.addEventListener("click",(n=>{let r,a;n.target.dataset.line&&(r=n.target.dataset.line,a=n.target.dataset.column,e.playerTurn(r,a),B(e)),t(),!0===t()&&A.abort()}),{signal:A.signal})}()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,