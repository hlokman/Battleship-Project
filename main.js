(()=>{"use strict";var e={982:(e,n,t)=>{t.d(n,{Z:()=>m});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),A=t(667),l=t.n(A),s=new URL(t(866),t.b),d=new URL(t(636),t.b),c=new URL(t(57),t.b),p=new URL(t(894),t.b),u=a()(o()),g=l()(s),C=l()(d),h=l()(c),f=l()(p);u.push([e.id,`@font-face {\n  font-family: "Arcade";\n  src: url(${g});\n}\n\n@font-face {\n  font-family: "Pixel";\n  src: url(${C});\n}\n\nbody {\n  font-family: "Arcade", "Pixel", "Roboto", Arial, Helvetica, sans-serif;\n  margin: 0;\n}\n#container {\n  display: grid;\n  grid-template-rows: 170px 1fr;\n  height: 100vh;\n}\n\n#header {\n  display: grid;\n  grid-template-rows: 70px 100px;\n  /*justify-content: center;*/\n  align-items: center;\n  /*border: 2px solid green;*/\n  background-color: rgb(0, 0, 161);\n  position: relative;\n}\n#alert {\n  position: absolute;\n  height: 20px;\n  width: 100%;\n  top: 61px;\n  display: flex;\n  justify-self: center;\n  justify-content: center;\n  color: rgb(255, 0, 0);\n  font-weight: bold;\n  font-size: 18px;\n}\n#title {\n  align-self: center;\n  justify-self: center;\n  color: wheat;\n}\n#buttonsAndFlow {\n  display: grid;\n  grid-template-rows: 1fr 20px;\n}\n#flow {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 30px;\n  width: 100%;\n  /*border: 2px solid black;*/\n  background-color: wheat;\n  color: solid black;\n  margin-bottom: 20px;\n}\nbutton {\n  font-family: "Arcade";\n  background: none;\n  color: inherit;\n  border: 2px solid black;\n}\n#buttons {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n}\n#buttons > button {\n  border: 2px solid wheat;\n  color: wheat;\n}\n\n#content {\n  /*border: 2px solid purple;*/\n  display: flex;\n  justify-content: center;\n  /*align-items: center;*/\n}\n\n#grids {\n  /*flex-wrap: wrap;*/\n  width: 80%;\n  min-width: 755px;\n  height: 90%;\n  min-height: 550px;\n  border: 2px solid red;\n  display: grid;\n  grid-template-rows: 500px 300px;\n}\n#grids.rearranged {\n  /*flex-wrap: wrap;*/\n  /*width: 80%;\n  min-width: 755px;\n  height: 90%;\n  border: 2px solid red;*/\n  min-height: none;\n  grid-template-rows: 510px;\n}\n#displays {\n  display: grid;\n  grid-template-columns: 1fr 90px 1fr;\n  width: 100%;\n  height: 100%;\n}\n#gridDiv {\n  /*flex: 1 1 550px;*/\n  width: 450px;\n  height: 450px;\n  justify-self: end;\n  /*display: flex;*/\n  /*border: 2px solid greenyellow;*/\n  display: grid;\n  grid-template-rows: 25px 1fr;\n}\n#playerOne {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 25px;\n}\n#grid1 {\n  display: grid;\n  background-color: rgb(255, 255, 255);\n  grid-template-columns: repeat(10, 1fr);\n}\n\n#separation {\n  display: flex;\n  flex: 0 0 30px;\n  height: 40px;\n  justify-content: center;\n  align-self: center;\n  margin: 10px;\n  padding-bottom: 130px;\n  font-size: 20px;\n  /*border: 2px solid orange;*/\n}\n\n#gridDiv2 {\n  /*flex: 1 1 550px;*/\n  width: 450px;\n  height: 450px;\n  justify-self: start;\n  /*display: flex;*/\n  /*border: 2px solid blue;*/\n  display: grid;\n  grid-template-rows: 25px 1fr;\n}\n#playerTwo {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 25px;\n}\n#grid2 {\n  display: grid;\n  background-color: rgb(255, 255, 255);\n  grid-template-columns: repeat(10, 1fr);\n}\n\n#square {\n  outline: 2px solid black;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 35px;\n  min-width: 35px;\n}\n#square.hit {\n  /*display: flex;\n  justify-content: center;\n  align-items: center;*/\n  align-self: center;\n  content: "";\n  background-image: url(${h});\n  background-repeat: no-repeat;\n  background-size: 65%;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border: none;\n  color: inherit;\n}\n#square.fail {\n  align-self: center;\n  content: "";\n  background-image: url(${f});\n  background-repeat: no-repeat;\n  background-size: 65%;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border: none;\n  color: inherit;\n}\n#square[data-over="yes"] {\n  background-color: yellow;\n}\n\n#controllers {\n  display: grid;\n  height: 330px;\n  grid-template-rows: 50px 100px;\n}\n#topController {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n}\n#topController > #length {\n  align-self: center;\n  justify-self: center;\n}\n#bottomController {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  gap: 10px;\n}\n#choices.horizontal {\n  display: grid;\n  grid-template-columns: repeat(4, 140px);\n  grid-template-rows: 1fr 1fr;\n  gap: 5px;\n  justify-self: center;\n}\n#choices.vertical {\n  display: grid;\n  grid-template-columns: repeat(5, 40px);\n  grid-template-rows: 1fr;\n  gap: 100px;\n  justify-self: center;\n}\n#choices > #ship {\n  display: grid;\n  justify-self: center;\n  align-self: center;\n}\n#squareShip {\n  outline: 2px solid black;\n  background-color: rgb(139, 139, 139);\n  height: 40px;\n  width: 40px;\n}\n\n/*WHEN THE WINDOW IS RESIZED*/\n@media only screen and (min-width: 400px) and (max-width: 1210px) {\n  #content {\n    border: 2px solid purple;\n    display: flex;\n    justify-content: center;\n  }\n\n  #grids {\n    justify-content: center;\n    align-items: center;\n    width: 80%;\n    height: 1350px;\n    border: 2px solid red;\n    grid-template-rows: 1100px 1fr;\n    /*margin-top: -70px;*/\n  }\n  #grids.rearranged {\n    /*flex-wrap: wrap;*/\n    /*width: 80%;\n    min-width: 755px;\n    height: 90%;\n    border: 2px solid red;*/\n    height: 1150px;\n    grid-template-rows: 510px;\n  }\n  #displays {\n    display: grid;\n    grid-template-rows: 1fr 90px 1fr;\n    grid-template-columns: 1fr;\n  }\n  #gridDiv {\n    height: 500px;\n    width: 500px;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    align-self: end;\n    justify-self: center;\n    /*border: 2px solid purple;*/\n  }\n\n  #grid1 {\n    display: grid;\n    background-color: rgb(255, 255, 255);\n  }\n\n  #separation {\n    justify-content: center;\n    align-items: center;\n    justify-self: center;\n    align-self: center;\n    height: 40px;\n    width: 40px;\n    padding-bottom: 0px;\n    /*border: 2px solid orange;*/\n  }\n\n  #gridDiv2 {\n    height: 500px;\n    width: 500px;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    justify-self: center;\n    /*border: 2px solid blue;*/\n  }\n\n  #grid2 {\n    display: grid;\n    background-color: rgb(255, 255, 255);\n  }\n}\n\n/*MOBILE VERSION*/\n@media only screen and (max-width: 400px) {\n  body {\n    background-color: aqua;\n  }\n}\n`,"",{version:3,sources:["webpack://./src/style/style.css"],names:[],mappings:"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",sourcesContent:['@font-face {\n  font-family: "Arcade";\n  src: url(./ARCADECLASSIC.TTF);\n}\n\n@font-face {\n  font-family: "Pixel";\n  src: url(./PublicPixel-z84yD.ttf);\n}\n\nbody {\n  font-family: "Arcade", "Pixel", "Roboto", Arial, Helvetica, sans-serif;\n  margin: 0;\n}\n#container {\n  display: grid;\n  grid-template-rows: 170px 1fr;\n  height: 100vh;\n}\n\n#header {\n  display: grid;\n  grid-template-rows: 70px 100px;\n  /*justify-content: center;*/\n  align-items: center;\n  /*border: 2px solid green;*/\n  background-color: rgb(0, 0, 161);\n  position: relative;\n}\n#alert {\n  position: absolute;\n  height: 20px;\n  width: 100%;\n  top: 61px;\n  display: flex;\n  justify-self: center;\n  justify-content: center;\n  color: rgb(255, 0, 0);\n  font-weight: bold;\n  font-size: 18px;\n}\n#title {\n  align-self: center;\n  justify-self: center;\n  color: wheat;\n}\n#buttonsAndFlow {\n  display: grid;\n  grid-template-rows: 1fr 20px;\n}\n#flow {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 30px;\n  width: 100%;\n  /*border: 2px solid black;*/\n  background-color: wheat;\n  color: solid black;\n  margin-bottom: 20px;\n}\nbutton {\n  font-family: "Arcade";\n  background: none;\n  color: inherit;\n  border: 2px solid black;\n}\n#buttons {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n}\n#buttons > button {\n  border: 2px solid wheat;\n  color: wheat;\n}\n\n#content {\n  /*border: 2px solid purple;*/\n  display: flex;\n  justify-content: center;\n  /*align-items: center;*/\n}\n\n#grids {\n  /*flex-wrap: wrap;*/\n  width: 80%;\n  min-width: 755px;\n  height: 90%;\n  min-height: 550px;\n  border: 2px solid red;\n  display: grid;\n  grid-template-rows: 500px 300px;\n}\n#grids.rearranged {\n  /*flex-wrap: wrap;*/\n  /*width: 80%;\n  min-width: 755px;\n  height: 90%;\n  border: 2px solid red;*/\n  min-height: none;\n  grid-template-rows: 510px;\n}\n#displays {\n  display: grid;\n  grid-template-columns: 1fr 90px 1fr;\n  width: 100%;\n  height: 100%;\n}\n#gridDiv {\n  /*flex: 1 1 550px;*/\n  width: 450px;\n  height: 450px;\n  justify-self: end;\n  /*display: flex;*/\n  /*border: 2px solid greenyellow;*/\n  display: grid;\n  grid-template-rows: 25px 1fr;\n}\n#playerOne {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 25px;\n}\n#grid1 {\n  display: grid;\n  background-color: rgb(255, 255, 255);\n  grid-template-columns: repeat(10, 1fr);\n}\n\n#separation {\n  display: flex;\n  flex: 0 0 30px;\n  height: 40px;\n  justify-content: center;\n  align-self: center;\n  margin: 10px;\n  padding-bottom: 130px;\n  font-size: 20px;\n  /*border: 2px solid orange;*/\n}\n\n#gridDiv2 {\n  /*flex: 1 1 550px;*/\n  width: 450px;\n  height: 450px;\n  justify-self: start;\n  /*display: flex;*/\n  /*border: 2px solid blue;*/\n  display: grid;\n  grid-template-rows: 25px 1fr;\n}\n#playerTwo {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 25px;\n}\n#grid2 {\n  display: grid;\n  background-color: rgb(255, 255, 255);\n  grid-template-columns: repeat(10, 1fr);\n}\n\n#square {\n  outline: 2px solid black;\n  background-color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 35px;\n  min-width: 35px;\n}\n#square.hit {\n  /*display: flex;\n  justify-content: center;\n  align-items: center;*/\n  align-self: center;\n  content: "";\n  background-image: url(./mine.svg);\n  background-repeat: no-repeat;\n  background-size: 65%;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border: none;\n  color: inherit;\n}\n#square.fail {\n  align-self: center;\n  content: "";\n  background-image: url(./water.svg);\n  background-repeat: no-repeat;\n  background-size: 65%;\n  background-position: center;\n  height: 100%;\n  width: 100%;\n  border: none;\n  color: inherit;\n}\n#square[data-over="yes"] {\n  background-color: yellow;\n}\n\n#controllers {\n  display: grid;\n  height: 330px;\n  grid-template-rows: 50px 100px;\n}\n#topController {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n}\n#topController > #length {\n  align-self: center;\n  justify-self: center;\n}\n#bottomController {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 10px;\n  gap: 10px;\n}\n#choices.horizontal {\n  display: grid;\n  grid-template-columns: repeat(4, 140px);\n  grid-template-rows: 1fr 1fr;\n  gap: 5px;\n  justify-self: center;\n}\n#choices.vertical {\n  display: grid;\n  grid-template-columns: repeat(5, 40px);\n  grid-template-rows: 1fr;\n  gap: 100px;\n  justify-self: center;\n}\n#choices > #ship {\n  display: grid;\n  justify-self: center;\n  align-self: center;\n}\n#squareShip {\n  outline: 2px solid black;\n  background-color: rgb(139, 139, 139);\n  height: 40px;\n  width: 40px;\n}\n\n/*WHEN THE WINDOW IS RESIZED*/\n@media only screen and (min-width: 400px) and (max-width: 1210px) {\n  #content {\n    border: 2px solid purple;\n    display: flex;\n    justify-content: center;\n  }\n\n  #grids {\n    justify-content: center;\n    align-items: center;\n    width: 80%;\n    height: 1350px;\n    border: 2px solid red;\n    grid-template-rows: 1100px 1fr;\n    /*margin-top: -70px;*/\n  }\n  #grids.rearranged {\n    /*flex-wrap: wrap;*/\n    /*width: 80%;\n    min-width: 755px;\n    height: 90%;\n    border: 2px solid red;*/\n    height: 1150px;\n    grid-template-rows: 510px;\n  }\n  #displays {\n    display: grid;\n    grid-template-rows: 1fr 90px 1fr;\n    grid-template-columns: 1fr;\n  }\n  #gridDiv {\n    height: 500px;\n    width: 500px;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    align-self: end;\n    justify-self: center;\n    /*border: 2px solid purple;*/\n  }\n\n  #grid1 {\n    display: grid;\n    background-color: rgb(255, 255, 255);\n  }\n\n  #separation {\n    justify-content: center;\n    align-items: center;\n    justify-self: center;\n    align-self: center;\n    height: 40px;\n    width: 40px;\n    padding-bottom: 0px;\n    /*border: 2px solid orange;*/\n  }\n\n  #gridDiv2 {\n    height: 500px;\n    width: 500px;\n    display: grid;\n    grid-template-rows: 40px 1fr;\n    justify-self: center;\n    /*border: 2px solid blue;*/\n  }\n\n  #grid2 {\n    display: grid;\n    background-color: rgb(255, 255, 255);\n  }\n}\n\n/*MOBILE VERSION*/\n@media only screen and (max-width: 400px) {\n  body {\n    background-color: aqua;\n  }\n}\n'],sourceRoot:""}]);const m=u},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var A=0;A<this.length;A++){var l=this[A][0];null!=l&&(a[l]=!0)}for(var s=0;s<e.length;s++){var d=[].concat(e[s]);r&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var i={},a=[],A=0;A<e.length;A++){var l=e[A],s=r.base?l[0]+r.base:l[0],d=i[s]||0,c="".concat(s," ").concat(d);i[s]=d+1;var p=t(c),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var g=o(u,r);r.byIndex=A,n.splice(A,0,{identifier:c,updater:g,references:1})}a.push(c)}return a}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var A=t(i[a]);n[A].references--}for(var l=r(e,o),s=0;s<i.length;s++){var d=t(i[s]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}i=l}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},866:(e,n,t)=>{e.exports=t.p+"8f36b955d042951fd3af.TTF"},636:(e,n,t)=>{e.exports=t.p+"f99b94ee4c84a5e45373.ttf"},57:(e,n,t)=>{e.exports=t.p+"cdab7ebe0d7a75037e8d.svg"},894:(e,n,t)=>{e.exports=t.p+"af5c785f05ced1400712.svg"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var i=n[r]={id:r,exports:{}};return e[r](i,i.exports,t),i.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!e;)e=r[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),i=t(569),a=t.n(i),A=t(565),l=t.n(A),s=t(216),d=t.n(s),c=t(589),p=t.n(c),u=t(982),g={};function C(){document.querySelector("#controllers").style.display="none",document.querySelector("#grids").classList.add("rearranged"),document.querySelector("#startButton").style.display="none"}g.styleTagTransform=p(),g.setAttributes=l(),g.insert=a().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=d(),n()(u.Z,g),u.Z&&u.Z.locals&&u.Z.locals;const h=e=>{if(e<=0)throw new Error("The minimum length must be 1");let n=0,t=e;return{getLength:()=>t,getHits:()=>n,hit:function(){n!==t&&n++},isSunk:function(){return n===t}}},f=(e=10)=>{let n=[],t=[];for(let t=0;t<e;t++){let t=new Array(e).fill(null);n.push(t)}return{getBoard:()=>n,placeShipHorizontally:function(r,o,i,a=!0){if(r<0||r>e-1||o+i>e||o<0||o>e-1)return null;let A=h(i),l=[];for(let e=0;e<i;e++)l.push(n[r][o+e]);if(l.every((e=>null===e))){for(let e=0;e<i;e++)n[r][o+e]=A;return t.push(A),l=[],!0}return l=[],!1},placeShipVertically:function(r,o,i,a=!0){if(r<0||r>e-1||r+i>e||o<0||o>e-1)return null;let A=h(i),l=[];for(let e=0;e<i;e++)l.push(n[r+e][o]);if(l.every((e=>null===e))){for(let e=0;e<i;e++)n[r+e][o]=A;return t.push(A),l=[],!0}return l=[],!1},receiveAttack:function(e,t,r=!0){return null===n[e][t]?(n[e][t]=!1,null):!1!==n[e][t]&&"hit"!==n[e][t]&&(n[e][t]&&"object"==typeof n[e][t]?(n[e][t].hit(),n[e][t]="hit",!0):void 0)},getShips:()=>t,allShipsSunk:function(){return t.every((e=>!0===e.isSunk()))}}};let m,B;function E(e){const n=document.querySelectorAll("#grid1 > span"),t=document.querySelectorAll("#grid2 > span");console.log(n[1].attributes[0].value),console.log(n[1].attributes[1].value),console.log(e.getPlayers()[0].getShips()),console.log(n[10].attributes[0].value),console.log(n[10].attributes[1].value);for(let t=0;t<100;t++)null!==e.getPlayers()[0].getBoard()[n[t].attributes[1].value][n[t].attributes[0].value]&&!1!==e.getPlayers()[0].getBoard()[n[t].attributes[1].value][n[t].attributes[0].value]&&"hit"!==e.getPlayers()[0].getBoard()[n[t].attributes[1].value][n[t].attributes[0].value]?n[t].style.backgroundColor="grey":!1===e.getPlayers()[0].getBoard()[n[t].attributes[1].value][n[t].attributes[0].value]?n[t].className="fail":"hit"===e.getPlayers()[0].getBoard()[n[t].attributes[1].value][n[t].attributes[0].value]&&(n[t].className="hit");for(let n=0;n<100;n++)!1===e.getPlayers()[1].getBoard()[t[n].attributes[1].value][t[n].attributes[0].value]?t[n].className="fail":"hit"===e.getPlayers()[1].getBoard()[t[n].attributes[1].value][t[n].attributes[0].value]&&(t[n].className="hit"),b(m),y(B);console.log(e.getPlayers()[0].getBoard()),console.log(e.getPlayers()[1].getBoard()),console.log(e)}function b(e){const n=document.querySelector("#flow");e?n.textContent="A ship has been hit!":!1===e?n.textContent="This spot has already been hit ":null===e&&(n.textContent="Oops.. nothing has been hit")}function y(e){const n=document.querySelector("#alert");e?n.textContent="":!1===e?n.textContent="The ship touches another ship. Choose another spot":null===e&&(n.textContent="The ship goes beyond the limits")}function x(){document.querySelector("#flow").textContent="You have to place at least 1 ship"}!function(){const e=document.querySelector("#content"),n=document.querySelector("#header"),t=document.createElement("div");t.setAttribute("id","buttonsAndFlow"),n.appendChild(t);const r=document.createElement("div");r.setAttribute("id","alert"),n.appendChild(r);const o=document.createElement("div");o.setAttribute("id","flow"),o.textContent="Place your ships (Max: 10 ships)",t.appendChild(o);const i=document.createElement("div");i.setAttribute("id","buttons"),t.appendChild(i);const a=document.createElement("button");a.setAttribute("id","startButton"),a.textContent="Start",i.appendChild(a);const A=document.createElement("button");A.setAttribute("id","restartButton"),A.textContent="Restart",i.appendChild(A);const l=document.createElement("div");l.setAttribute("id","grids"),e.appendChild(l);const s=document.createElement("div");s.setAttribute("id","displays"),l.appendChild(s);const d=document.createElement("div");d.setAttribute("id","gridDiv"),s.appendChild(d);const c=document.createElement("div");c.setAttribute("id","playerOne"),c.textContent="player",d.appendChild(c);const p=document.createElement("div");p.setAttribute("id","grid1"),d.appendChild(p);for(let e=0;e<10;e++)for(let n=0;n<10;n++){const t=document.createElement("span");t.setAttribute("data-column",`${n}`),t.setAttribute("data-line",`${e}`),t.setAttribute("id","square"),p.appendChild(t)}const u=document.querySelectorAll("#square");for(let e=0;e<100;e++)u[e].setAttribute("data-number",`${e}`);const g=document.createElement("div");g.setAttribute("id","separation"),s.appendChild(g),g.innerHTML="<h1>VS</h1>";const C=document.createElement("div");C.setAttribute("id","gridDiv2"),s.appendChild(C);const h=document.createElement("div");h.setAttribute("id","playerTwo"),h.textContent="computer",C.appendChild(h);const f=document.createElement("div");f.setAttribute("id","grid2"),C.appendChild(f);for(let e=0;e<10;e++)for(let n=0;n<10;n++){const t=document.createElement("span");t.setAttribute("data-column",`${n}`),t.setAttribute("data-line",`${e}`),t.setAttribute("id","square"),f.appendChild(t)}const m=document.createElement("div");m.setAttribute("id","controllers"),l.appendChild(m);const B=document.createElement("div");B.setAttribute("id","bottomController"),m.appendChild(B);const E=document.createElement("button");E.setAttribute("data-position","horizontal"),E.textContent="Horizontal",B.appendChild(E);const b=document.createElement("button");b.setAttribute("data-position","vertical"),b.textContent="Vertical",B.appendChild(b);const y=document.createElement("div");y.setAttribute("id","choices"),y.setAttribute("class","horizontal"),m.appendChild(y);for(let e=1;e<=5;e++){const n=document.createElement("div");n.setAttribute("data-shipLength",`${e}`),n.setAttribute("id","ship"),n.setAttribute("class","horizontal"),n.setAttribute("draggable","true"),y.appendChild(n);for(let t=1;t<=e;t++){const t=document.createElement("div");t.setAttribute("id","squareShip"),n.appendChild(t),n.style.gridTemplateColumns=`repeat(${e}, 40px )`}}}(),function(){const e=((e="Player",n="Computer")=>{const t=f();t.name="Player";const r=f();r.name="Computer";const o=[t,r];let i=o[1];function a(){i=i===o[1]?o[0]:o[1]}return{getPlayers:()=>o,changePlayer:a,getPlayerUnderAttack:()=>i,playerTurn:function(e,n){let t=i.receiveAttack(e,n);a(),m=t,t||null===t?(function(){let e;do{e=i.receiveAttack(Math.floor(10*Math.random()),Math.floor(10*Math.random()),!1)}while(!1===e)}(),a(),console.log("check=========  "+m)):(a(),console.log("check=========  "+m))},playerShipPlacementH:function(e,n,t){let r=o[0].placeShipHorizontally(e,n,t);B=r,!0===r&&function(e){let n;do{n=o[1].placeShipHorizontally(Math.floor(10*Math.random()),Math.floor(10*Math.random()),e)}while(!1===n||null===n)}(t)},playerShipPlacementV:function(e,n,t){let r=o[0].placeShipVertically(e,n,t);B=r,console.log("result:   "+r),!0===r&&function(e){let n;do{n=o[1].placeShipVertically(Math.floor(10*Math.random()),Math.floor(10*Math.random()),e)}while(!1===n||null===n)}(t)}}})();function n(){return e.getPlayers()[0].allShipsSunk()&&0!==e.getPlayers()[0].getShips().length?(document.querySelector("#flow").textContent="Oh.. you lost..",!0):e.getPlayers()[1].allShipsSunk()&&0!==e.getPlayers()[1].getShips().length?(document.querySelector("#flow").textContent="Congratulations you won!",!0):{}}E(e),function(){document.querySelector("#gridDiv");const t=document.querySelector("#gridDiv2"),r=document.querySelector("#grid1"),o=document.querySelector("#controllers"),i=document.querySelector("#choices"),a=document.querySelector("#startButton"),A=document.querySelector("#restartButton");let l=3,s="horizontal";i.addEventListener("dragstart",(e=>{l=Number(e.target.attributes[0].value),s=e.target.className})),r.addEventListener("dragover",(e=>{if(e.preventDefault(),e.target.dataset.over="yes","horizontal"===s)for(let n=0;n<l;n++)e.target.parentNode.childNodes[Number(e.target.dataset.number)+n]&&(e.target.parentNode.childNodes[Number(e.target.dataset.number)+n].dataset.over="yes");else for(let n=Number(e.target.dataset.number);n<=Number(e.target.dataset.number)+10*(l-1);n+=10)e.target.parentNode.childNodes[n]&&(e.target.parentNode.childNodes[n].dataset.over="yes")})),r.addEventListener("dragleave",(e=>{if(e.preventDefault(),e.target.dataset.over="","horizontal"===s)for(let n=0;n<l;n++)e.target.parentNode.childNodes[Number(e.target.dataset.number)+n]&&(e.target.parentNode.childNodes[Number(e.target.dataset.number)+n].dataset.over="");else for(let n=Number(e.target.dataset.number);n<=Number(e.target.dataset.number)+10*(l-1);n+=10)e.target.parentNode.childNodes[n]&&(e.target.parentNode.childNodes[n].dataset.over="")})),r.addEventListener("drop",(n=>{n.preventDefault();for(let e=0;e<l;e++)n.target.parentNode.childNodes[Number(n.target.dataset.number)+e]&&(n.target.parentNode.childNodes[Number(n.target.dataset.number)+e].dataset.over="");for(let e=Number(n.target.dataset.number);e<=Number(n.target.dataset.number)+10*(l-1);e+=10)n.target.parentNode.childNodes[e]&&(n.target.parentNode.childNodes[e].dataset.over="");if(e.getPlayers()[0].getShips().length<10){let t=n.target.attributes[1].value,r=n.target.attributes[0].value;"horizontal"===s?e.playerShipPlacementH(Number(t),Number(r),Number(l)):e.playerShipPlacementV(Number(t),Number(r),Number(l)),10===e.getPlayers()[0].getShips().length&&C(),E(e)}console.log(e.getPlayers()[0].getShips().length+"  AI="+e.getPlayers()[1].getShips().length)})),a.addEventListener("click",(n=>{0!==e.getPlayers()[0].getShips().length?(document.querySelector("#flow").textContent="Time to start! You play first",C()):0===e.getPlayers()[0].getShips().length&&x()})),A.addEventListener("click",(e=>{document.location.reload()})),o.addEventListener("click",(e=>{"button"===e.target.localName&&function(e){const n=document.querySelector("#choices");n.className="",n.className=e;const t=document.querySelectorAll("#ship");"vertical"===e?t.forEach(((n,t)=>{n.className=e,n.style.gridTemplateColumns="",n.style.gridTemplateRows=`repeat(${t+1}, 40px )`})):t.forEach(((n,t)=>{n.className=e,n.style.gridTemplateRows="",n.style.gridTemplateColumns=`repeat(${t+1}, 40px )`}))}(e.target.dataset.position)}));const d=new AbortController;t.addEventListener("click",(t=>{let r,o;0===e.getPlayers()[0].getShips().length?x():t.target.dataset.line&&(r=t.target.dataset.line,o=t.target.dataset.column,e.playerTurn(r,o),E(e),C(),document.querySelector("#alert").textContent=""),n(),!0===n()&&d.abort()}),{signal:d.signal})}()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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aUJBQWlCLFNBQ3pCLGFBQVhwRyxFQUNGK0osRUFBTWEsU0FBUSxDQUFDL08sRUFBTTRELEtBQ25CNUQsRUFBSzhLLFVBQVkzRyxFQUNqQm5FLEVBQUtrRSxNQUFNeUksb0JBQXNCLEdBQ2pDM00sRUFBS2tFLE1BQU04SyxpQkFBbUIsVUFBVXBMLEVBQVEsV0FBVyxJQUc3RHNLLEVBQU1hLFNBQVEsQ0FBQy9PLEVBQU00RCxLQUNuQjVELEVBQUs4SyxVQUFZM0csRUFDakJuRSxFQUFLa0UsTUFBTThLLGlCQUFtQixHQUM5QmhQLEVBQUtrRSxNQUFNeUksb0JBQXNCLFVBQVUvSSxFQUFRLFdBQVcsR0FHcEUsQ01rQlFxTCxDQUFxQnRLLEVBQUVSLE9BQU9vSyxRQUFRSixTQUN4QyxJQStCRixNQUFNZSxFQUFhLElBQUlDLGdCQUN2QmpELEVBQVNrQyxpQkFDUCxTQUNDekosSUFDQyxJQUFJZ0ssRUFDQUMsRUFHOEMsSUFBOUN2RSxFQUFRTyxhQUFhLEdBQUdYLFdBQVc3SixPQUNyQ2lMLElBR0kxRyxFQUFFUixPQUFPb0ssUUFBUWxGLE9BQ25Cc0YsRUFBbUJoSyxFQUFFUixPQUFPb0ssUUFBUWxGLEtBQ3BDdUYsRUFBcUJqSyxFQUFFUixPQUFPb0ssUUFBUTdFLE9BQ3RDVyxFQUFROEMsV0FBV3dCLEVBQWtCQyxHQUNyQ3hFLEVBQWdCQyxHQUNoQmhDLElGN0dJaEUsU0FBU0MsY0FBYyxVQUMvQjZHLFlBQWMsSUVpSGQ2QyxLQUVtQixJQUFmQSxLQUNGa0IsRUFBV0UsT0FDYixHQUVGLENBQUVDLE9BQVFILEVBQVdHLFFBRXhCLENBeE5ELEVBNk9GLENEdFBBQyxFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC1wcm9qZWN0Ly4vc3JjL3N0eWxlL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC1wcm9qZWN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAtcHJvamVjdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLXByb2plY3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLXByb2plY3Qvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC1wcm9qZWN0L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL2JhdHRsZXNoaXAtcHJvamVjdC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC1wcm9qZWN0L3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC1wcm9qZWN0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC1wcm9qZWN0L3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL2JhdHRsZXNoaXAtcHJvamVjdC93ZWJwYWNrL3J1bnRpbWUvanNvbnAgY2h1bmsgbG9hZGluZyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLXByb2plY3Qvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL2JhdHRsZXNoaXAtcHJvamVjdC8uL3NyYy9zdHlsZS9zdHlsZS5jc3M/YzlmMCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy9yZW5kZXJQYWdlLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAtcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL3NoaXAuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC1wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvZ2FtZWJvYXJkLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAtcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL3BsYXllci5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy9yZW5kZXJCb2FyZEFuZE1lc3NhZ2VzLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAtcHJvamVjdC8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLXByb2plY3QvLi9zcmMvY29tcG9uZW50cy9ldmVudExpc3RlbmVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18gPSBuZXcgVVJMKFwiLi9BUkNBREVDTEFTU0lDLlRURlwiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fID0gbmV3IFVSTChcIi4vUHVibGljUGl4ZWwtejg0eUQudHRmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzJfX18gPSBuZXcgVVJMKFwiLi9taW5lLnN2Z1wiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zX19fID0gbmV3IFVSTChcIi4vd2F0ZXIuc3ZnXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMl9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfM19fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzNfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGBAZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiQXJjYWRlXCI7XG4gIHNyYzogdXJsKCR7X19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fX30pO1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiUGl4ZWxcIjtcbiAgc3JjOiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19ffSk7XG59XG5cbmJvZHkge1xuICBmb250LWZhbWlseTogXCJBcmNhZGVcIiwgXCJQaXhlbFwiLCBcIlJvYm90b1wiLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuICBtYXJnaW46IDA7XG59XG4jY29udGFpbmVyIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxNzBweCAxZnI7XG4gIGhlaWdodDogMTAwdmg7XG59XG5cbiNoZWFkZXIge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IDcwcHggMTAwcHg7XG4gIC8qanVzdGlmeS1jb250ZW50OiBjZW50ZXI7Ki9cbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLypib3JkZXI6IDJweCBzb2xpZCBncmVlbjsqL1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgMCwgMTYxKTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuI2FsZXJ0IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDIwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICB0b3A6IDYxcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktc2VsZjogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgY29sb3I6IHJnYigyNTUsIDAsIDApO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgZm9udC1zaXplOiAxOHB4O1xufVxuI3RpdGxlIHtcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xuICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcbiAgY29sb3I6IHdoZWF0O1xufVxuI2J1dHRvbnNBbmRGbG93IHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgMjBweDtcbn1cbiNmbG93IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGhlaWdodDogMzBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIC8qYm9yZGVyOiAycHggc29saWQgYmxhY2s7Ki9cbiAgYmFja2dyb3VuZC1jb2xvcjogd2hlYXQ7XG4gIGNvbG9yOiBzb2xpZCBibGFjaztcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cbmJ1dHRvbiB7XG4gIGZvbnQtZmFtaWx5OiBcIkFyY2FkZVwiO1xuICBiYWNrZ3JvdW5kOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDtcbiAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XG59XG4jYnV0dG9ucyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBnYXA6IDEwcHg7XG59XG4jYnV0dG9ucyA+IGJ1dHRvbiB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHdoZWF0O1xuICBjb2xvcjogd2hlYXQ7XG59XG5cbiNjb250ZW50IHtcbiAgLypib3JkZXI6IDJweCBzb2xpZCBwdXJwbGU7Ki9cbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIC8qYWxpZ24taXRlbXM6IGNlbnRlcjsqL1xufVxuXG4jZ3JpZHMge1xuICAvKmZsZXgtd3JhcDogd3JhcDsqL1xuICB3aWR0aDogODAlO1xuICBtaW4td2lkdGg6IDc1NXB4O1xuICBoZWlnaHQ6IDkwJTtcbiAgbWluLWhlaWdodDogNTUwcHg7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJlZDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA1MDBweCAzMDBweDtcbn1cbiNncmlkcy5yZWFycmFuZ2VkIHtcbiAgLypmbGV4LXdyYXA6IHdyYXA7Ki9cbiAgLyp3aWR0aDogODAlO1xuICBtaW4td2lkdGg6IDc1NXB4O1xuICBoZWlnaHQ6IDkwJTtcbiAgYm9yZGVyOiAycHggc29saWQgcmVkOyovXG4gIG1pbi1oZWlnaHQ6IG5vbmU7XG4gIGdyaWQtdGVtcGxhdGUtcm93czogNTEwcHg7XG59XG4jZGlzcGxheXMge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciA5MHB4IDFmcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cbiNncmlkRGl2IHtcbiAgLypmbGV4OiAxIDEgNTUwcHg7Ki9cbiAgd2lkdGg6IDQ1MHB4O1xuICBoZWlnaHQ6IDQ1MHB4O1xuICBqdXN0aWZ5LXNlbGY6IGVuZDtcbiAgLypkaXNwbGF5OiBmbGV4OyovXG4gIC8qYm9yZGVyOiAycHggc29saWQgZ3JlZW55ZWxsb3c7Ki9cbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAyNXB4IDFmcjtcbn1cbiNwbGF5ZXJPbmUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZm9udC1zaXplOiAyNXB4O1xufVxuI2dyaWQxIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMCwgMWZyKTtcbn1cblxuI3NlcGFyYXRpb24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4OiAwIDAgMzBweDtcbiAgaGVpZ2h0OiA0MHB4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xuICBtYXJnaW46IDEwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAxMzBweDtcbiAgZm9udC1zaXplOiAyMHB4O1xuICAvKmJvcmRlcjogMnB4IHNvbGlkIG9yYW5nZTsqL1xufVxuXG4jZ3JpZERpdjIge1xuICAvKmZsZXg6IDEgMSA1NTBweDsqL1xuICB3aWR0aDogNDUwcHg7XG4gIGhlaWdodDogNDUwcHg7XG4gIGp1c3RpZnktc2VsZjogc3RhcnQ7XG4gIC8qZGlzcGxheTogZmxleDsqL1xuICAvKmJvcmRlcjogMnB4IHNvbGlkIGJsdWU7Ki9cbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAyNXB4IDFmcjtcbn1cbiNwbGF5ZXJUd28ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZm9udC1zaXplOiAyNXB4O1xufVxuI2dyaWQyIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMCwgMWZyKTtcbn1cblxuI3NxdWFyZSB7XG4gIG91dGxpbmU6IDJweCBzb2xpZCBibGFjaztcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtaW4taGVpZ2h0OiAzNXB4O1xuICBtaW4td2lkdGg6IDM1cHg7XG59XG4jc3F1YXJlLmhpdCB7XG4gIC8qZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7Ki9cbiAgYWxpZ24tc2VsZjogY2VudGVyO1xuICBjb250ZW50OiBcIlwiO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8yX19ffSk7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogNjUlO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIGJvcmRlcjogbm9uZTtcbiAgY29sb3I6IGluaGVyaXQ7XG59XG4jc3F1YXJlLmZhaWwge1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzNfX199KTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiA2NSU7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyOiBub25lO1xuICBjb2xvcjogaW5oZXJpdDtcbn1cbiNzcXVhcmVbZGF0YS1vdmVyPVwieWVzXCJdIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogeWVsbG93O1xufVxuXG4jY29udHJvbGxlcnMge1xuICBkaXNwbGF5OiBncmlkO1xuICBoZWlnaHQ6IDMzMHB4O1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IDUwcHggMTAwcHg7XG59XG4jdG9wQ29udHJvbGxlciB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAxZnIpO1xufVxuI3RvcENvbnRyb2xsZXIgPiAjbGVuZ3RoIHtcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xuICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcbn1cbiNib3R0b21Db250cm9sbGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG4gIGdhcDogMTBweDtcbn1cbiNjaG9pY2VzLmhvcml6b250YWwge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LCAxNDBweCk7XG4gIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDFmcjtcbiAgZ2FwOiA1cHg7XG4gIGp1c3RpZnktc2VsZjogY2VudGVyO1xufVxuI2Nob2ljZXMudmVydGljYWwge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg1LCA0MHB4KTtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnI7XG4gIGdhcDogMTAwcHg7XG4gIGp1c3RpZnktc2VsZjogY2VudGVyO1xufVxuI2Nob2ljZXMgPiAjc2hpcCB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGp1c3RpZnktc2VsZjogY2VudGVyO1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG59XG4jc3F1YXJlU2hpcCB7XG4gIG91dGxpbmU6IDJweCBzb2xpZCBibGFjaztcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEzOSwgMTM5LCAxMzkpO1xuICBoZWlnaHQ6IDQwcHg7XG4gIHdpZHRoOiA0MHB4O1xufVxuXG4vKldIRU4gVEhFIFdJTkRPVyBJUyBSRVNJWkVEKi9cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDAwcHgpIGFuZCAobWF4LXdpZHRoOiAxMjEwcHgpIHtcbiAgI2NvbnRlbnQge1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIHB1cnBsZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB9XG5cbiAgI2dyaWRzIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHdpZHRoOiA4MCU7XG4gICAgaGVpZ2h0OiAxMzUwcHg7XG4gICAgYm9yZGVyOiAycHggc29saWQgcmVkO1xuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMTEwMHB4IDFmcjtcbiAgICAvKm1hcmdpbi10b3A6IC03MHB4OyovXG4gIH1cbiAgI2dyaWRzLnJlYXJyYW5nZWQge1xuICAgIC8qZmxleC13cmFwOiB3cmFwOyovXG4gICAgLyp3aWR0aDogODAlO1xuICAgIG1pbi13aWR0aDogNzU1cHg7XG4gICAgaGVpZ2h0OiA5MCU7XG4gICAgYm9yZGVyOiAycHggc29saWQgcmVkOyovXG4gICAgaGVpZ2h0OiAxMTUwcHg7XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA1MTBweDtcbiAgfVxuICAjZGlzcGxheXMge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgOTBweCAxZnI7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gIH1cbiAgI2dyaWREaXYge1xuICAgIGhlaWdodDogNTAwcHg7XG4gICAgd2lkdGg6IDUwMHB4O1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA0MHB4IDFmcjtcbiAgICBhbGlnbi1zZWxmOiBlbmQ7XG4gICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XG4gICAgLypib3JkZXI6IDJweCBzb2xpZCBwdXJwbGU7Ki9cbiAgfVxuXG4gICNncmlkMSB7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7XG4gIH1cblxuICAjc2VwYXJhdGlvbiB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIHdpZHRoOiA0MHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiAwcHg7XG4gICAgLypib3JkZXI6IDJweCBzb2xpZCBvcmFuZ2U7Ki9cbiAgfVxuXG4gICNncmlkRGl2MiB7XG4gICAgaGVpZ2h0OiA1MDBweDtcbiAgICB3aWR0aDogNTAwcHg7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDQwcHggMWZyO1xuICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xuICAgIC8qYm9yZGVyOiAycHggc29saWQgYmx1ZTsqL1xuICB9XG5cbiAgI2dyaWQyIHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDI1NSwgMjU1KTtcbiAgfVxufVxuXG4vKk1PQklMRSBWRVJTSU9OKi9cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDAwcHgpIHtcbiAgYm9keSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogYXF1YTtcbiAgfVxufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UscUJBQXFCO0VBQ3JCLDRDQUE2QjtBQUMvQjs7QUFFQTtFQUNFLG9CQUFvQjtFQUNwQiw0Q0FBaUM7QUFDbkM7O0FBRUE7RUFDRSxzRUFBc0U7RUFDdEUsU0FBUztBQUNYO0FBQ0E7RUFDRSxhQUFhO0VBQ2IsNkJBQTZCO0VBQzdCLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsMkJBQTJCO0VBQzNCLG1CQUFtQjtFQUNuQiwyQkFBMkI7RUFDM0IsZ0NBQWdDO0VBQ2hDLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixXQUFXO0VBQ1gsU0FBUztFQUNULGFBQWE7RUFDYixvQkFBb0I7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b250ZW50XCI6W1wiQGZvbnQtZmFjZSB7XFxuICBmb250LWZhbWlseTogXFxcIkFyY2FkZVxcXCI7XFxuICBzcmM6IHVybCguL0FSQ0FERUNMQVNTSUMuVFRGKTtcXG59XFxuXFxuQGZvbnQtZmFjZSB7XFxuICBmb250LWZhbWlseTogXFxcIlBpeGVsXFxcIjtcXG4gIHNyYzogdXJsKC4vUHVibGljUGl4ZWwtejg0eUQudHRmKTtcXG59XFxuXFxuYm9keSB7XFxuICBmb250LWZhbWlseTogXFxcIkFyY2FkZVxcXCIsIFxcXCJQaXhlbFxcXCIsIFxcXCJSb2JvdG9cXFwiLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xcbiAgbWFyZ2luOiAwO1xcbn1cXG4jY29udGFpbmVyIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLXJvd3M6IDE3MHB4IDFmcjtcXG4gIGhlaWdodDogMTAwdmg7XFxufVxcblxcbiNoZWFkZXIge1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtcm93czogNzBweCAxMDBweDtcXG4gIC8qanVzdGlmeS1jb250ZW50OiBjZW50ZXI7Ki9cXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAvKmJvcmRlcjogMnB4IHNvbGlkIGdyZWVuOyovXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgMCwgMTYxKTtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuI2FsZXJ0IHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGhlaWdodDogMjBweDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgdG9wOiA2MXB4O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktc2VsZjogY2VudGVyO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBjb2xvcjogcmdiKDI1NSwgMCwgMCk7XFxuICBmb250LXdlaWdodDogYm9sZDtcXG4gIGZvbnQtc2l6ZTogMThweDtcXG59XFxuI3RpdGxlIHtcXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gIGp1c3RpZnktc2VsZjogY2VudGVyO1xcbiAgY29sb3I6IHdoZWF0O1xcbn1cXG4jYnV0dG9uc0FuZEZsb3cge1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDIwcHg7XFxufVxcbiNmbG93IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBoZWlnaHQ6IDMwcHg7XFxuICB3aWR0aDogMTAwJTtcXG4gIC8qYm9yZGVyOiAycHggc29saWQgYmxhY2s7Ki9cXG4gIGJhY2tncm91bmQtY29sb3I6IHdoZWF0O1xcbiAgY29sb3I6IHNvbGlkIGJsYWNrO1xcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcXG59XFxuYnV0dG9uIHtcXG4gIGZvbnQtZmFtaWx5OiBcXFwiQXJjYWRlXFxcIjtcXG4gIGJhY2tncm91bmQ6IG5vbmU7XFxuICBjb2xvcjogaW5oZXJpdDtcXG4gIGJvcmRlcjogMnB4IHNvbGlkIGJsYWNrO1xcbn1cXG4jYnV0dG9ucyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgZ2FwOiAxMHB4O1xcbn1cXG4jYnV0dG9ucyA+IGJ1dHRvbiB7XFxuICBib3JkZXI6IDJweCBzb2xpZCB3aGVhdDtcXG4gIGNvbG9yOiB3aGVhdDtcXG59XFxuXFxuI2NvbnRlbnQge1xcbiAgLypib3JkZXI6IDJweCBzb2xpZCBwdXJwbGU7Ki9cXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIC8qYWxpZ24taXRlbXM6IGNlbnRlcjsqL1xcbn1cXG5cXG4jZ3JpZHMge1xcbiAgLypmbGV4LXdyYXA6IHdyYXA7Ki9cXG4gIHdpZHRoOiA4MCU7XFxuICBtaW4td2lkdGg6IDc1NXB4O1xcbiAgaGVpZ2h0OiA5MCU7XFxuICBtaW4taGVpZ2h0OiA1NTBweDtcXG4gIGJvcmRlcjogMnB4IHNvbGlkIHJlZDtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLXJvd3M6IDUwMHB4IDMwMHB4O1xcbn1cXG4jZ3JpZHMucmVhcnJhbmdlZCB7XFxuICAvKmZsZXgtd3JhcDogd3JhcDsqL1xcbiAgLyp3aWR0aDogODAlO1xcbiAgbWluLXdpZHRoOiA3NTVweDtcXG4gIGhlaWdodDogOTAlO1xcbiAgYm9yZGVyOiAycHggc29saWQgcmVkOyovXFxuICBtaW4taGVpZ2h0OiBub25lO1xcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA1MTBweDtcXG59XFxuI2Rpc3BsYXlzIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciA5MHB4IDFmcjtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbn1cXG4jZ3JpZERpdiB7XFxuICAvKmZsZXg6IDEgMSA1NTBweDsqL1xcbiAgd2lkdGg6IDQ1MHB4O1xcbiAgaGVpZ2h0OiA0NTBweDtcXG4gIGp1c3RpZnktc2VsZjogZW5kO1xcbiAgLypkaXNwbGF5OiBmbGV4OyovXFxuICAvKmJvcmRlcjogMnB4IHNvbGlkIGdyZWVueWVsbG93OyovXFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAyNXB4IDFmcjtcXG59XFxuI3BsYXllck9uZSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZm9udC1zaXplOiAyNXB4O1xcbn1cXG4jZ3JpZDEge1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDI1NSwgMjU1KTtcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAxZnIpO1xcbn1cXG5cXG4jc2VwYXJhdGlvbiB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleDogMCAwIDMwcHg7XFxuICBoZWlnaHQ6IDQwcHg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gIG1hcmdpbjogMTBweDtcXG4gIHBhZGRpbmctYm90dG9tOiAxMzBweDtcXG4gIGZvbnQtc2l6ZTogMjBweDtcXG4gIC8qYm9yZGVyOiAycHggc29saWQgb3JhbmdlOyovXFxufVxcblxcbiNncmlkRGl2MiB7XFxuICAvKmZsZXg6IDEgMSA1NTBweDsqL1xcbiAgd2lkdGg6IDQ1MHB4O1xcbiAgaGVpZ2h0OiA0NTBweDtcXG4gIGp1c3RpZnktc2VsZjogc3RhcnQ7XFxuICAvKmRpc3BsYXk6IGZsZXg7Ki9cXG4gIC8qYm9yZGVyOiAycHggc29saWQgYmx1ZTsqL1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtcm93czogMjVweCAxZnI7XFxufVxcbiNwbGF5ZXJUd28ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGZvbnQtc2l6ZTogMjVweDtcXG59XFxuI2dyaWQyIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMCwgMWZyKTtcXG59XFxuXFxuI3NxdWFyZSB7XFxuICBvdXRsaW5lOiAycHggc29saWQgYmxhY2s7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBtaW4taGVpZ2h0OiAzNXB4O1xcbiAgbWluLXdpZHRoOiAzNXB4O1xcbn1cXG4jc3F1YXJlLmhpdCB7XFxuICAvKmRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7Ki9cXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gIGNvbnRlbnQ6IFxcXCJcXFwiO1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4vbWluZS5zdmcpO1xcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gIGJhY2tncm91bmQtc2l6ZTogNjUlO1xcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBib3JkZXI6IG5vbmU7XFxuICBjb2xvcjogaW5oZXJpdDtcXG59XFxuI3NxdWFyZS5mYWlsIHtcXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gIGNvbnRlbnQ6IFxcXCJcXFwiO1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4vd2F0ZXIuc3ZnKTtcXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XFxuICBiYWNrZ3JvdW5kLXNpemU6IDY1JTtcXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgYm9yZGVyOiBub25lO1xcbiAgY29sb3I6IGluaGVyaXQ7XFxufVxcbiNzcXVhcmVbZGF0YS1vdmVyPVxcXCJ5ZXNcXFwiXSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB5ZWxsb3c7XFxufVxcblxcbiNjb250cm9sbGVycyB7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgaGVpZ2h0OiAzMzBweDtcXG4gIGdyaWQtdGVtcGxhdGUtcm93czogNTBweCAxMDBweDtcXG59XFxuI3RvcENvbnRyb2xsZXIge1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAxZnIpO1xcbn1cXG4jdG9wQ29udHJvbGxlciA+ICNsZW5ndGgge1xcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAganVzdGlmeS1zZWxmOiBjZW50ZXI7XFxufVxcbiNib3R0b21Db250cm9sbGVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBtYXJnaW4tdG9wOiAxMHB4O1xcbiAgZ2FwOiAxMHB4O1xcbn1cXG4jY2hvaWNlcy5ob3Jpem9udGFsIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg0LCAxNDBweCk7XFxuICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmciAxZnI7XFxuICBnYXA6IDVweDtcXG4gIGp1c3RpZnktc2VsZjogY2VudGVyO1xcbn1cXG4jY2hvaWNlcy52ZXJ0aWNhbCB7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNSwgNDBweCk7XFxuICBncmlkLXRlbXBsYXRlLXJvd3M6IDFmcjtcXG4gIGdhcDogMTAwcHg7XFxuICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcXG59XFxuI2Nob2ljZXMgPiAjc2hpcCB7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAganVzdGlmeS1zZWxmOiBjZW50ZXI7XFxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxufVxcbiNzcXVhcmVTaGlwIHtcXG4gIG91dGxpbmU6IDJweCBzb2xpZCBibGFjaztcXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxMzksIDEzOSwgMTM5KTtcXG4gIGhlaWdodDogNDBweDtcXG4gIHdpZHRoOiA0MHB4O1xcbn1cXG5cXG4vKldIRU4gVEhFIFdJTkRPVyBJUyBSRVNJWkVEKi9cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQwMHB4KSBhbmQgKG1heC13aWR0aDogMTIxMHB4KSB7XFxuICAjY29udGVudCB7XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIHB1cnBsZTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICB9XFxuXFxuICAjZ3JpZHMge1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgd2lkdGg6IDgwJTtcXG4gICAgaGVpZ2h0OiAxMzUwcHg7XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIHJlZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxMTAwcHggMWZyO1xcbiAgICAvKm1hcmdpbi10b3A6IC03MHB4OyovXFxuICB9XFxuICAjZ3JpZHMucmVhcnJhbmdlZCB7XFxuICAgIC8qZmxleC13cmFwOiB3cmFwOyovXFxuICAgIC8qd2lkdGg6IDgwJTtcXG4gICAgbWluLXdpZHRoOiA3NTVweDtcXG4gICAgaGVpZ2h0OiA5MCU7XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIHJlZDsqL1xcbiAgICBoZWlnaHQ6IDExNTBweDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA1MTBweDtcXG4gIH1cXG4gICNkaXNwbGF5cyB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDkwcHggMWZyO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcXG4gIH1cXG4gICNncmlkRGl2IHtcXG4gICAgaGVpZ2h0OiA1MDBweDtcXG4gICAgd2lkdGg6IDUwMHB4O1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IDQwcHggMWZyO1xcbiAgICBhbGlnbi1zZWxmOiBlbmQ7XFxuICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xcbiAgICAvKmJvcmRlcjogMnB4IHNvbGlkIHB1cnBsZTsqL1xcbiAgfVxcblxcbiAgI2dyaWQxIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpO1xcbiAgfVxcblxcbiAgI3NlcGFyYXRpb24ge1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gICAgaGVpZ2h0OiA0MHB4O1xcbiAgICB3aWR0aDogNDBweDtcXG4gICAgcGFkZGluZy1ib3R0b206IDBweDtcXG4gICAgLypib3JkZXI6IDJweCBzb2xpZCBvcmFuZ2U7Ki9cXG4gIH1cXG5cXG4gICNncmlkRGl2MiB7XFxuICAgIGhlaWdodDogNTAwcHg7XFxuICAgIHdpZHRoOiA1MDBweDtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA0MHB4IDFmcjtcXG4gICAganVzdGlmeS1zZWxmOiBjZW50ZXI7XFxuICAgIC8qYm9yZGVyOiAycHggc29saWQgYmx1ZTsqL1xcbiAgfVxcblxcbiAgI2dyaWQyIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpO1xcbiAgfVxcbn1cXG5cXG4vKk1PQklMRSBWRVJTSU9OKi9cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XFxuICBib2R5IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYXF1YTtcXG4gIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgaWYgKCF1cmwpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG4gIHVybCA9IFN0cmluZyh1cmwuX19lc01vZHVsZSA/IHVybC5kZWZhdWx0IDogdXJsKTtcblxuICAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cbiAgaWYgKC9eWydcIl0uKlsnXCJdJC8udGVzdCh1cmwpKSB7XG4gICAgdXJsID0gdXJsLnNsaWNlKDEsIC0xKTtcbiAgfVxuICBpZiAob3B0aW9ucy5oYXNoKSB7XG4gICAgdXJsICs9IG9wdGlvbnMuaGFzaDtcbiAgfVxuXG4gIC8vIFNob3VsZCB1cmwgYmUgd3JhcHBlZD9cbiAgLy8gU2VlIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTMvI3VybHNcbiAgaWYgKC9bXCInKCkgXFx0XFxuXXwoJTIwKS8udGVzdCh1cmwpIHx8IG9wdGlvbnMubmVlZFF1b3Rlcykge1xuICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodXJsLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKS5yZXBsYWNlKC9cXG4vZywgXCJcXFxcblwiKSwgXCJcXFwiXCIpO1xuICB9XG4gIHJldHVybiB1cmw7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjO1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHtcblx0XHRcdHZhciBpID0gc2NyaXB0cy5sZW5ndGggLSAxO1xuXHRcdFx0d2hpbGUgKGkgPiAtMSAmJiAhc2NyaXB0VXJsKSBzY3JpcHRVcmwgPSBzY3JpcHRzW2ktLV0uc3JjO1xuXHRcdH1cblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5iID0gZG9jdW1lbnQuYmFzZVVSSSB8fCBzZWxmLmxvY2F0aW9uLmhyZWY7XG5cbi8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4vLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbi8vIFtyZXNvbHZlLCByZWplY3QsIFByb21pc2VdID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxudmFyIGluc3RhbGxlZENodW5rcyA9IHtcblx0MTc5OiAwXG59O1xuXG4vLyBubyBjaHVuayBvbiBkZW1hbmQgbG9hZGluZ1xuXG4vLyBubyBwcmVmZXRjaGluZ1xuXG4vLyBubyBwcmVsb2FkZWRcblxuLy8gbm8gSE1SXG5cbi8vIG5vIEhNUiBtYW5pZmVzdFxuXG4vLyBubyBvbiBjaHVua3MgbG9hZGVkXG5cbi8vIG5vIGpzb25wIGZ1bmN0aW9uIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJmdW5jdGlvbiByZW5kZXIoKSB7XG4gIGNvbnN0IGNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRlbnRcIik7XG4gIGNvbnN0IGhlYWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjaGVhZGVyXCIpO1xuXG4gIC8vUGxheWVycyBhbmQgZmxvdyBwYXJ0XG4gIGNvbnN0IGJ1dHRvbnNBbmRGbG93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgYnV0dG9uc0FuZEZsb3cuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJidXR0b25zQW5kRmxvd1wiKTtcbiAgaGVhZGVyLmFwcGVuZENoaWxkKGJ1dHRvbnNBbmRGbG93KTtcbiAgY29uc3QgYWxlcnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBhbGVydC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImFsZXJ0XCIpO1xuICBoZWFkZXIuYXBwZW5kQ2hpbGQoYWxlcnQpO1xuXG4gIGNvbnN0IGZsb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBmbG93LnNldEF0dHJpYnV0ZShcImlkXCIsIFwiZmxvd1wiKTtcbiAgZmxvdy50ZXh0Q29udGVudCA9IFwiUGxhY2UgeW91ciBzaGlwcyAoTWF4OiAxMCBzaGlwcylcIjtcbiAgYnV0dG9uc0FuZEZsb3cuYXBwZW5kQ2hpbGQoZmxvdyk7XG5cbiAgY29uc3QgYnV0dG9ucyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGJ1dHRvbnMuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJidXR0b25zXCIpO1xuICBidXR0b25zQW5kRmxvdy5hcHBlbmRDaGlsZChidXR0b25zKTtcbiAgY29uc3Qgc3RhcnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICBzdGFydC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInN0YXJ0QnV0dG9uXCIpO1xuICBzdGFydC50ZXh0Q29udGVudCA9IFwiU3RhcnRcIjtcbiAgYnV0dG9ucy5hcHBlbmRDaGlsZChzdGFydCk7XG4gIGNvbnN0IHJlc3RhcnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICByZXN0YXJ0LnNldEF0dHJpYnV0ZShcImlkXCIsIFwicmVzdGFydEJ1dHRvblwiKTtcbiAgcmVzdGFydC50ZXh0Q29udGVudCA9IFwiUmVzdGFydFwiO1xuICBidXR0b25zLmFwcGVuZENoaWxkKHJlc3RhcnQpO1xuXG4gIC8vR3JpZHMgcGFydFxuICBjb25zdCBncmlkcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGdyaWRzLnNldEF0dHJpYnV0ZShcImlkXCIsIFwiZ3JpZHNcIik7XG4gIGNvbnRlbnQuYXBwZW5kQ2hpbGQoZ3JpZHMpO1xuXG4gIGNvbnN0IGRpc3BsYXlzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgZGlzcGxheXMuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJkaXNwbGF5c1wiKTtcbiAgZ3JpZHMuYXBwZW5kQ2hpbGQoZGlzcGxheXMpO1xuXG4gIGNvbnN0IGdyaWREaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBncmlkRGl2LnNldEF0dHJpYnV0ZShcImlkXCIsIFwiZ3JpZERpdlwiKTtcbiAgZGlzcGxheXMuYXBwZW5kQ2hpbGQoZ3JpZERpdik7XG4gIGNvbnN0IHBsYXllck9uZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHBsYXllck9uZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInBsYXllck9uZVwiKTtcbiAgcGxheWVyT25lLnRleHRDb250ZW50ID0gXCJwbGF5ZXJcIjtcbiAgZ3JpZERpdi5hcHBlbmRDaGlsZChwbGF5ZXJPbmUpO1xuICBjb25zdCBncmlkMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGdyaWQxLnNldEF0dHJpYnV0ZShcImlkXCIsIFwiZ3JpZDFcIik7XG4gIGdyaWREaXYuYXBwZW5kQ2hpbGQoZ3JpZDEpO1xuICBmb3IgKGxldCBsaW5lID0gMDsgbGluZSA8IDEwOyBsaW5lKyspIHtcbiAgICBmb3IgKGxldCBjb2x1bW4gPSAwOyBjb2x1bW4gPCAxMDsgY29sdW1uKyspIHtcbiAgICAgIGNvbnN0IHNxdWFyZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xuICAgICAgc3F1YXJlLnNldEF0dHJpYnV0ZShcImRhdGEtY29sdW1uXCIsIGAke2NvbHVtbn1gKTtcbiAgICAgIHNxdWFyZS5zZXRBdHRyaWJ1dGUoXCJkYXRhLWxpbmVcIiwgYCR7bGluZX1gKTtcbiAgICAgIHNxdWFyZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInNxdWFyZVwiKTtcblxuICAgICAgZ3JpZDEuYXBwZW5kQ2hpbGQoc3F1YXJlKTtcbiAgICB9XG4gIH1cbiAgY29uc3Qgc3F1YXJlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIiNzcXVhcmVcIik7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgMTAwOyBpKyspIHtcbiAgICBzcXVhcmVbaV0uc2V0QXR0cmlidXRlKFwiZGF0YS1udW1iZXJcIiwgYCR7aX1gKTtcbiAgfVxuXG4gIGNvbnN0IHNlcGFyYXRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBzZXBhcmF0aW9uLnNldEF0dHJpYnV0ZShcImlkXCIsIFwic2VwYXJhdGlvblwiKTtcbiAgZGlzcGxheXMuYXBwZW5kQ2hpbGQoc2VwYXJhdGlvbik7XG4gIHNlcGFyYXRpb24uaW5uZXJIVE1MID0gXCI8aDE+VlM8L2gxPlwiO1xuXG4gIGNvbnN0IGdyaWREaXYyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgZ3JpZERpdjIuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJncmlkRGl2MlwiKTtcbiAgZGlzcGxheXMuYXBwZW5kQ2hpbGQoZ3JpZERpdjIpO1xuICBjb25zdCBwbGF5ZXJUd28gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBwbGF5ZXJUd28uc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJwbGF5ZXJUd29cIik7XG4gIHBsYXllclR3by50ZXh0Q29udGVudCA9IFwiY29tcHV0ZXJcIjtcbiAgZ3JpZERpdjIuYXBwZW5kQ2hpbGQocGxheWVyVHdvKTtcbiAgY29uc3QgZ3JpZDIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBncmlkMi5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcImdyaWQyXCIpO1xuICBncmlkRGl2Mi5hcHBlbmRDaGlsZChncmlkMik7XG4gIGZvciAobGV0IGxpbmUgPSAwOyBsaW5lIDwgMTA7IGxpbmUrKykge1xuICAgIGZvciAobGV0IGNvbHVtbiA9IDA7IGNvbHVtbiA8IDEwOyBjb2x1bW4rKykge1xuICAgICAgY29uc3Qgc3F1YXJlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4gICAgICBzcXVhcmUuc2V0QXR0cmlidXRlKFwiZGF0YS1jb2x1bW5cIiwgYCR7Y29sdW1ufWApO1xuICAgICAgc3F1YXJlLnNldEF0dHJpYnV0ZShcImRhdGEtbGluZVwiLCBgJHtsaW5lfWApO1xuICAgICAgc3F1YXJlLnNldEF0dHJpYnV0ZShcImlkXCIsIFwic3F1YXJlXCIpO1xuICAgICAgZ3JpZDIuYXBwZW5kQ2hpbGQoc3F1YXJlKTtcbiAgICB9XG4gIH1cblxuICAvL0NvbnRyb2xsZXIgcGFydFxuICBjb25zdCBjb250cm9sbGVycyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGNvbnRyb2xsZXJzLnNldEF0dHJpYnV0ZShcImlkXCIsIFwiY29udHJvbGxlcnNcIik7XG4gIGdyaWRzLmFwcGVuZENoaWxkKGNvbnRyb2xsZXJzKTtcbiAgLypjb25zdCB0b3AgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICB0b3Auc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJ0b3BDb250cm9sbGVyXCIpO1xuICBjb250cm9sbGVycy5hcHBlbmRDaGlsZCh0b3ApO1xuICBmb3IgKGxldCBpID0gMTsgaSA8PSAxMDsgaSsrKSB7XG4gICAgY29uc3QgbGVuZ3RoID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBsZW5ndGguc2V0QXR0cmlidXRlKFwiZGF0YS1sZW5ndGhcIiwgYCR7aX1gKTtcbiAgICBsZW5ndGguc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJsZW5ndGhcIik7XG4gICAgbGVuZ3RoLnRleHRDb250ZW50ID0gYCR7aX1gO1xuICAgIHRvcC5hcHBlbmRDaGlsZChsZW5ndGgpO1xuICB9Ki9cblxuICBjb25zdCBib3R0b20gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBib3R0b20uc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJib3R0b21Db250cm9sbGVyXCIpO1xuICBjb250cm9sbGVycy5hcHBlbmRDaGlsZChib3R0b20pO1xuICBjb25zdCBidXR0b25IID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgYnV0dG9uSC5zZXRBdHRyaWJ1dGUoXCJkYXRhLXBvc2l0aW9uXCIsIFwiaG9yaXpvbnRhbFwiKTtcbiAgYnV0dG9uSC50ZXh0Q29udGVudCA9IFwiSG9yaXpvbnRhbFwiO1xuICBib3R0b20uYXBwZW5kQ2hpbGQoYnV0dG9uSCk7XG4gIGNvbnN0IGJ1dHRvblYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICBidXR0b25WLnNldEF0dHJpYnV0ZShcImRhdGEtcG9zaXRpb25cIiwgXCJ2ZXJ0aWNhbFwiKTtcbiAgYnV0dG9uVi50ZXh0Q29udGVudCA9IFwiVmVydGljYWxcIjtcbiAgYm90dG9tLmFwcGVuZENoaWxkKGJ1dHRvblYpO1xuXG4gIGNvbnN0IGNob2ljZXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBjaG9pY2VzLnNldEF0dHJpYnV0ZShcImlkXCIsIFwiY2hvaWNlc1wiKTtcbiAgY2hvaWNlcy5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcImhvcml6b250YWxcIik7XG4gIGNvbnRyb2xsZXJzLmFwcGVuZENoaWxkKGNob2ljZXMpO1xuICBmb3IgKGxldCBpID0gMTsgaSA8PSA1OyBpKyspIHtcbiAgICBjb25zdCBzcXVhcmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHNxdWFyZS5zZXRBdHRyaWJ1dGUoXCJkYXRhLXNoaXBMZW5ndGhcIiwgYCR7aX1gKTtcbiAgICBzcXVhcmUuc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJzaGlwXCIpO1xuICAgIHNxdWFyZS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBcImhvcml6b250YWxcIik7XG4gICAgc3F1YXJlLnNldEF0dHJpYnV0ZShcImRyYWdnYWJsZVwiLCBcInRydWVcIik7XG4gICAgY2hvaWNlcy5hcHBlbmRDaGlsZChzcXVhcmUpO1xuICAgIGZvciAobGV0IGogPSAxOyBqIDw9IGk7IGorKykge1xuICAgICAgY29uc3Qgc2hpcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICBzaGlwLnNldEF0dHJpYnV0ZShcImlkXCIsIGBzcXVhcmVTaGlwYCk7XG4gICAgICBzcXVhcmUuYXBwZW5kQ2hpbGQoc2hpcCk7XG4gICAgICBzcXVhcmUuc3R5bGUuZ3JpZFRlbXBsYXRlQ29sdW1ucyA9IGByZXBlYXQoJHtpfSwgNDBweCApYDtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gY2hhbmdlRGlzcGxheUNob2ljZXModGFyZ2V0KSB7XG4gIGNvbnN0IGNob2ljZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Nob2ljZXNcIik7XG4gIGNob2ljZXMuY2xhc3NOYW1lID0gXCJcIjtcbiAgY2hvaWNlcy5jbGFzc05hbWUgPSB0YXJnZXQ7XG5cbiAgY29uc3Qgc2hpcHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiI3NoaXBcIik7XG4gIGlmICh0YXJnZXQgPT09IFwidmVydGljYWxcIikge1xuICAgIHNoaXBzLmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgICBpdGVtLmNsYXNzTmFtZSA9IHRhcmdldDtcbiAgICAgIGl0ZW0uc3R5bGUuZ3JpZFRlbXBsYXRlQ29sdW1ucyA9IFwiXCI7XG4gICAgICBpdGVtLnN0eWxlLmdyaWRUZW1wbGF0ZVJvd3MgPSBgcmVwZWF0KCR7aW5kZXggKyAxfSwgNDBweCApYDtcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBzaGlwcy5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgaXRlbS5jbGFzc05hbWUgPSB0YXJnZXQ7XG4gICAgICBpdGVtLnN0eWxlLmdyaWRUZW1wbGF0ZVJvd3MgPSBcIlwiO1xuICAgICAgaXRlbS5zdHlsZS5ncmlkVGVtcGxhdGVDb2x1bW5zID0gYHJlcGVhdCgke2luZGV4ICsgMX0sIDQwcHggKWA7XG4gICAgfSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gc3RhcnRUcmlnZ2VyZWQoKSB7XG4gIGNvbnN0IGNvbnRyb2xsZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjb250cm9sbGVyc1wiKTtcbiAgY29udHJvbGxlcnMuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuXG4gIC8qY29uc3QgZ3JpZERpdjIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2dyaWREaXYyXCIpO1xuICBncmlkRGl2Mi5jbGFzc0xpc3QuYWRkKFwicGxheWFibGVcIik7Ki9cbiAgY29uc3QgZ3JpZHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2dyaWRzXCIpO1xuICBncmlkcy5jbGFzc0xpc3QuYWRkKFwicmVhcnJhbmdlZFwiKTtcbiAgY29uc3Qgc3RhcnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3N0YXJ0QnV0dG9uXCIpO1xuICBzdGFydC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG59XG5cbmV4cG9ydCB7IHJlbmRlciwgY2hhbmdlRGlzcGxheUNob2ljZXMsIHN0YXJ0VHJpZ2dlcmVkIH07XG4iLCJjb25zdCBTaGlwID0gKGxlbmd0aCkgPT4ge1xuICBpZiAobGVuZ3RoIDw9IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgbWluaW11bSBsZW5ndGggbXVzdCBiZSAxXCIpO1xuICB9XG4gIGxldCBoaXRzID0gMDtcbiAgbGV0IHNoaXBMZW5ndGggPSBsZW5ndGg7XG5cbiAgZnVuY3Rpb24gaGl0KCkge1xuICAgIGlmIChoaXRzICE9PSBzaGlwTGVuZ3RoKSBoaXRzKys7XG4gIH1cblxuICBmdW5jdGlvbiBpc1N1bmsoKSB7XG4gICAgaWYgKGhpdHMgPT09IHNoaXBMZW5ndGgpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgY29uc3QgZ2V0SGl0cyA9ICgpID0+IGhpdHM7XG4gIGNvbnN0IGdldExlbmd0aCA9ICgpID0+IHNoaXBMZW5ndGg7XG4gIHJldHVybiB7IGdldExlbmd0aCwgZ2V0SGl0cywgaGl0LCBpc1N1bmsgfTtcbn07XG5cbmV4cG9ydCB7IFNoaXAgfTtcbiIsImltcG9ydCB7IFNoaXAgfSBmcm9tIFwiLi9zaGlwXCI7XG5pbXBvcnQgeyBzaGlwSGl0TWVzc2FnZSwgbm90aGluZ0hpdE1lc3NhZ2UgfSBmcm9tIFwiLi9yZW5kZXJCb2FyZEFuZE1lc3NhZ2VzXCI7XG5cbmNvbnN0IEdhbWVib2FyZCA9IChncmlkID0gMTApID0+IHtcbiAgbGV0IGJvYXJkID0gW107XG4gIGxldCBhbGxTaGlwcyA9IFtdOyAvL1RvIGtlZXAgdHJhY2sgb2YgYWxsIHRoZSBzaGlwcyBjcmVhdGVkXG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBncmlkOyBpKyspIHtcbiAgICBsZXQgbGluZSA9IG5ldyBBcnJheShncmlkKS5maWxsKG51bGwpO1xuICAgIGJvYXJkLnB1c2gobGluZSk7XG4gIH1cbiAgLy9BbGwgdGhlIGZ1bmN0aW9ucyBiZWxvdyBpbnRlcmFjdCB3aXRoIGJvYXJkKC9nZXRCb2FyZCgpKVxuICAvLz0+IC5nZXRMZW5ndGgoKSwgLmdldEhpdHMoKSwgLmhpdCgpICYgLmlzU3VuaygpIGFyZSBmcm9tIFNoaXAgZmFjdG9yeSBhbmQgc28gd2UgaGF2ZSB0byB0YXJnZXQgYSBzcGVjaWZpYyBzaGlwIGZyb20gdGhlIGJvYXJkKC9nZXRCb2FyZCgpKSB0byB1c2UgdGhlbVxuICAvLz0+IHJlY2VpdmVBdHRhY2sobGluZSwgY29sdW1uKSB0YXJnZXQgYSBzcGVjaWZpYyBzaGlwIGFuZCBjYWxsIC5oaXQoKSBmdW5jdGlvblxuICBmdW5jdGlvbiBwbGFjZVNoaXBWZXJ0aWNhbGx5KGxpbmUsIGNvbHVtbiwgc2hpcExlbmd0aCwgc2hvd0FsZXJ0ID0gdHJ1ZSkge1xuICAgIGlmIChcbiAgICAgIGxpbmUgPCAwIHx8XG4gICAgICBsaW5lID4gZ3JpZCAtIDEgfHxcbiAgICAgIGxpbmUgKyBzaGlwTGVuZ3RoID4gZ3JpZCB8fFxuICAgICAgY29sdW1uIDwgMCB8fFxuICAgICAgY29sdW1uID4gZ3JpZCAtIDFcbiAgICApIHtcbiAgICAgIC8qaWYgKHNob3dBbGVydCkge1xuICAgICAgICBhbGVydChcIlRoZSBzaGlwIGdvZXMgYmV5b25kIHRoZSBsaW1pdHNcIik7IC8vaWYgdGhlIEFJIHBsYXlzOiBzZXQgc2hvd0FsZXJ0IHRvIGZhbHNlXG4gICAgICB9Ki9cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBsZXQgbmV3U2hpcCA9IFNoaXAoc2hpcExlbmd0aCk7XG4gICAgLy9BIHN5c3RlbSB0byBjaGVjayBpZiBhbGwgdmFsdWUgPSBudWxsIGJlZm9yZSBwbGFjaW5nIHRoZSBzaGlwXG4gICAgbGV0IGNoZWNrID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaGlwTGVuZ3RoOyBpKyspIHtcbiAgICAgIGNoZWNrLnB1c2goYm9hcmRbbGluZSArIGldW2NvbHVtbl0pO1xuICAgIH1cbiAgICBsZXQgY2hlY2tDb250ZW50ID0gY2hlY2suZXZlcnkoKGl0ZW0pID0+IGl0ZW0gPT09IG51bGwpO1xuICAgIGlmIChjaGVja0NvbnRlbnQpIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2hpcExlbmd0aDsgaSsrKSB7XG4gICAgICAgIGJvYXJkW2xpbmUgKyBpXVtjb2x1bW5dID0gbmV3U2hpcDtcbiAgICAgIH1cbiAgICAgIGFsbFNoaXBzLnB1c2gobmV3U2hpcCk7IC8vdHJhY2tcbiAgICAgIGNoZWNrID0gW107XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgY2hlY2sgPSBbXTtcbiAgICAgIC8qaWYgKHNob3dBbGVydCkge1xuICAgICAgICBhbGVydChcIlRoZSBzaGlwIHRvdWNoZXMgYW5vdGhlciBzaGlwXCIpOyAvL2lmIHRoZSBBSSBwbGF5czogc2V0IHNob3dBbGVydCB0byBmYWxzZVxuICAgICAgfSovXG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcGxhY2VTaGlwSG9yaXpvbnRhbGx5KGxpbmUsIGNvbHVtbiwgc2hpcExlbmd0aCwgc2hvd0FsZXJ0ID0gdHJ1ZSkge1xuICAgIGlmIChcbiAgICAgIGxpbmUgPCAwIHx8XG4gICAgICBsaW5lID4gZ3JpZCAtIDEgfHxcbiAgICAgIGNvbHVtbiArIHNoaXBMZW5ndGggPiBncmlkIHx8XG4gICAgICBjb2x1bW4gPCAwIHx8XG4gICAgICBjb2x1bW4gPiBncmlkIC0gMVxuICAgICkge1xuICAgICAgLyppZiAoc2hvd0FsZXJ0KSB7XG4gICAgICAgIGFsZXJ0KFwiVGhlIHNoaXAgZ29lcyBiZXlvbmQgdGhlIGxpbWl0c1wiKTsgLy9pZiB0aGUgQUkgcGxheXM6IHNldCBzaG93QWxlcnQgdG8gZmFsc2VcbiAgICAgIH0qL1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGxldCBuZXdTaGlwID0gU2hpcChzaGlwTGVuZ3RoKTtcbiAgICAvL0Egc3lzdGVtIHRvIGNoZWNrIGlmIGFsbCB2YWx1ZSA9IG51bGwgYmVmb3JlIHBsYWNpbmcgdGhlIHNoaXBcbiAgICBsZXQgY2hlY2sgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNoaXBMZW5ndGg7IGkrKykge1xuICAgICAgY2hlY2sucHVzaChib2FyZFtsaW5lXVtjb2x1bW4gKyBpXSk7XG4gICAgfVxuICAgIGxldCBjaGVja0NvbnRlbnQgPSBjaGVjay5ldmVyeSgoaXRlbSkgPT4gaXRlbSA9PT0gbnVsbCk7XG4gICAgaWYgKGNoZWNrQ29udGVudCkge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaGlwTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgYm9hcmRbbGluZV1bY29sdW1uICsgaV0gPSBuZXdTaGlwO1xuICAgICAgfVxuICAgICAgYWxsU2hpcHMucHVzaChuZXdTaGlwKTsgLy90cmFja1xuICAgICAgY2hlY2sgPSBbXTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBjaGVjayA9IFtdO1xuICAgICAgLyppZiAoc2hvd0FsZXJ0KSB7XG4gICAgICAgIGFsZXJ0KFwiVGhlIHNoaXAgdG91Y2hlcyBhbm90aGVyIHNoaXBcIik7IC8vaWYgdGhlIEFJIHBsYXlzOiBzZXQgc2hvd0FsZXJ0IHRvIGZhbHNlXG4gICAgICB9Ki9cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiByZWNlaXZlQXR0YWNrKGxpbmUsIGNvbHVtbiwgc2hvd0FsZXJ0ID0gdHJ1ZSkge1xuICAgIGlmIChib2FyZFtsaW5lXVtjb2x1bW5dID09PSBudWxsKSB7XG4gICAgICBib2FyZFtsaW5lXVtjb2x1bW5dID0gZmFsc2U7XG4gICAgICAvKmlmIChzaG93QWxlcnQpIHtcbiAgICAgICAgbm90aGluZ0hpdE1lc3NhZ2UoKTsgLy9pZiAoc2hvd0FsZXJ0KSBpbiBvcmRlciB0byBwdXQgbWVzc2FnZXMgZnVuY3Rpb25zIFRPIE1PRElGWSBXSEVOIFNFVFRJTUVPVVQgTE9HSUMgV0lMTCBCRSBET05FIChlcmFzZSBpZiAoc2hvd0FsZXJ0KSB0byBiZSBhdmFpbGFibGUgZm9yIGFsbD8pXG4gICAgICB9Ki9cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH0gZWxzZSBpZiAoYm9hcmRbbGluZV1bY29sdW1uXSA9PT0gZmFsc2UgfHwgYm9hcmRbbGluZV1bY29sdW1uXSA9PT0gXCJoaXRcIikge1xuICAgICAgLyppZiAoc2hvd0FsZXJ0KSB7XG4gICAgICAgIGFsZXJ0KFwiVGhpcyBzcG90IGhhcyBhbHJlYWR5IGJlZW4gaGl0IFwiKTsgLy9pZiB0aGUgQUkgcGxheXM6IHNldCBzaG93QWxlcnQgdG8gZmFsc2VcbiAgICAgIH0qL1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gZWxzZSBpZiAoYm9hcmRbbGluZV1bY29sdW1uXSAmJiB0eXBlb2YgYm9hcmRbbGluZV1bY29sdW1uXSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgLy9pZiBpdCBpcyBhbiBvYmplY3QgZGlmZmVyZW50IGZyb20gbnVsbFxuICAgICAgYm9hcmRbbGluZV1bY29sdW1uXS5oaXQoKTtcbiAgICAgIGJvYXJkW2xpbmVdW2NvbHVtbl0gPSBcImhpdFwiO1xuICAgICAgLyppZiAoc2hvd0FsZXJ0KSB7XG4gICAgICAgIHNoaXBIaXRNZXNzYWdlKCk7IC8vaWYgKHNob3dBbGVydCkgaW4gb3JkZXIgdG8gcHV0IG1lc3NhZ2VzIGZ1bmN0aW9ucyBUTyBNT0RJRlkgV0hFTiBTRVRUSU1FT1VUIExPR0lDIFdJTEwgQkUgRE9ORSAoZXJhc2UgaWYgKHNob3dBbGVydCkgdG8gYmUgYXZhaWxhYmxlIGZvciBhbGw/KVxuICAgICAgfSovXG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBhbGxTaGlwc1N1bmsoKSB7XG4gICAgcmV0dXJuIGFsbFNoaXBzLmV2ZXJ5KChpdGVtKSA9PiBpdGVtLmlzU3VuaygpID09PSB0cnVlKTtcbiAgfVxuXG4gIGNvbnN0IGdldEJvYXJkID0gKCkgPT4gYm9hcmQ7XG4gIGNvbnN0IGdldFNoaXBzID0gKCkgPT4gYWxsU2hpcHM7XG5cbiAgcmV0dXJuIHtcbiAgICBnZXRCb2FyZCxcbiAgICBwbGFjZVNoaXBIb3Jpem9udGFsbHksXG4gICAgcGxhY2VTaGlwVmVydGljYWxseSxcbiAgICByZWNlaXZlQXR0YWNrLFxuICAgIGdldFNoaXBzLFxuICAgIGFsbFNoaXBzU3VuayxcbiAgfTtcbn07XG5cbmV4cG9ydCB7IEdhbWVib2FyZCB9O1xuXG4vKlxuSSBoYXZlIGFuIGlzc3VlLiBJIGNyZWF0ZWQgYSBHYW1lYm9hcmQgZmFjdG9yeSBpbiBhIGdhbWVCb2FyZC5qcyBtb2R1bGUgbGlrZSBzbzpcbmh0dHBzOi8vY29kZXBlbi5pby9obG9rbWFuL3Blbi9LS0pCUHJqP2VkaXRvcnM9MDAxMCAoaXQgbWlnaHQgbm90IGJlIHRoZSBmaW5hbCB2ZXJzaW9uKVxuXG5hbmQgSSBoYWQgYSBqZXN0IHRlc3QgdGhhdCB3YXMgcnVubmluZzogIGh0dHBzOi8vY29kZXBlbi5pby9obG9rbWFuL3Blbi9tZHZqYmF4P2VkaXRvcnM9MTAxMFxuXG5TbyBmYXIgc28gZ29vZCBidXQgbm93IEknbSBhYm91dCB0byBjcmVhdGUgdGhlIGdhbWUgZmxvdyBhbmQgZXZlbnQgbGlzdGVuZXJzIGxvZ2ljcyBzbyBJIGNyZWF0ZWQgcGxheWVycyBvbiB0aGUgZ2FtZWZsb3cgdXNpbmcgcGxheWVyIGZhY3RvcnkgOiBJIGNyZWF0ZWQgcGxheWVycyB1c2luZyBhIHNpbXBsZSBjb25zdCBwbGF5ZXJzID0gUGxheWVycygpIHNhdGVtZW50IGZvciBub3cgc28gdXNpbmcgUGxheWVyIGZhY3RvcnkuIFRoaXMgcGxheWVyIGZhY3RvcnkgbWFrZXMgdXNlIG9mIEdhbWVib2FyZCBmYWN0b3J5IHRvIGNyZWF0ZSBhIGJvYXJkIGZvciBlYWNoIHBsYXllciBidXQgbm93IG15IHRlc3QgZG9lc24ndCBldmVuIHJ1biBkaXNwbGF5aW5nIGFuZCB0aGUgcGxheWVyIEZhY3RvcnkgdXNlcyBHYW1lYm9hcmQgZmFjdG9yeSAodG8gY3JlYXRlIGEgYm9hcmQgZm9yIGVhY2gpIGJ1dCBub3cgbXkgdGVzdCBmb3IgZ2FtZWJvYXJkIGRvZXNuJ3QgZXZlbiBydW4gZGlzcGxheWluZyAgXCJUZXN0IHN1aXRlIGZhaWxlZCB0byBydW5cIi5cblxuSSBjYW4gbWFrZSB0aGUgdGVzdCBydW4gYnkgZGVsZXRpbmcgdGhlIHZhcmlhYmxlIHBsYXllcnMuIE15IHF1ZXN0aW9uIGlzOiB3aHkgSSBjYW4ndCBydW4gdGhlIHRlc3Qgd2hlbiBJIGNyZWF0ZSB0aGF0IHZhcmlhYmxlP1xuXG5UaGUgbW9zdCBmcnVzdHJhdGluZyB0aGluZ3MgaXMgdGhhdCBJIGtub3cgdGhlIGZhY3RvcmllcyBhbmQgdGhlIGdhbWUgd29yayB0aGUgd2F5IEkgd2FudCAoZm9yIG5vdykgYnV0IEkgY2FuJ3QgcnVuIHRoZSB0ZXN0cy4uLi5cblxuKi9cbiIsImltcG9ydCB7IEdhbWVib2FyZCB9IGZyb20gXCIuL2dhbWVib2FyZFwiO1xuaW1wb3J0IHsgZ2FtZWJvYXJkVXBkYXRlIH0gZnJvbSBcIi4vcmVuZGVyQm9hcmRBbmRNZXNzYWdlc1wiO1xuXG5sZXQgY2hlY2s7XG5sZXQgY2hlY2tQb3NpdGlvbnM7XG5cbmNvbnN0IFBsYXllcnMgPSAocGxheWVyT25lID0gXCJQbGF5ZXJcIiwgcGxheWVyVHdvID0gXCJDb21wdXRlclwiKSA9PiB7XG4gIGNvbnN0IHBsYXllcjEgPSBHYW1lYm9hcmQoKTtcbiAgcGxheWVyMS5uYW1lID0gXCJQbGF5ZXJcIjtcbiAgY29uc3QgcGxheWVyMiA9IEdhbWVib2FyZCgpO1xuICBwbGF5ZXIyLm5hbWUgPSBcIkNvbXB1dGVyXCI7XG5cbiAgY29uc3QgcGxheWVycyA9IFtwbGF5ZXIxLCBwbGF5ZXIyXTtcblxuICBsZXQgcGxheWVyVW5kZXJBdHRhY2sgPSBwbGF5ZXJzWzFdO1xuICBmdW5jdGlvbiBjaGFuZ2VQbGF5ZXIoKSB7XG4gICAgcGxheWVyVW5kZXJBdHRhY2sgPVxuICAgICAgcGxheWVyVW5kZXJBdHRhY2sgPT09IHBsYXllcnNbMV0gPyBwbGF5ZXJzWzBdIDogcGxheWVyc1sxXTtcbiAgfVxuXG4gIC8vUExBWUVSIEFORCBDT01QVVRFUiBBVFRBQ0tJTkcgTE9HSUNTXG4gIGZ1bmN0aW9uIHBsYXllclR1cm4obGluZSwgY29sdW1uKSB7XG4gICAgbGV0IHJlc3VsdCA9IHBsYXllclVuZGVyQXR0YWNrLnJlY2VpdmVBdHRhY2sobGluZSwgY29sdW1uKTtcbiAgICBjaGFuZ2VQbGF5ZXIoKTtcbiAgICBjaGVjayA9IHJlc3VsdDtcblxuICAgIGlmIChyZXN1bHQgfHwgcmVzdWx0ID09PSBudWxsKSB7XG4gICAgICBjb21wdXRlclR1cm4oKTtcbiAgICAgIGNoYW5nZVBsYXllcigpO1xuICAgICAgY29uc29sZS5sb2coXCJjaGVjaz09PT09PT09PSAgXCIgKyBjaGVjayk7XG4gICAgICAvL2dhbWVib2FyZFVwZGF0ZSgpOyB0byBlcmFzZSBmb3IgbG9vc2UgY291cGxpbmdcbiAgICB9IGVsc2Uge1xuICAgICAgY2hhbmdlUGxheWVyKCk7XG4gICAgICBjb25zb2xlLmxvZyhcImNoZWNrPT09PT09PT09ICBcIiArIGNoZWNrKTtcbiAgICAgIC8vZ2FtZWJvYXJkVXBkYXRlKCk7XG4gICAgfVxuICAgIC8vY29uc29sZS5sb2cocGxheWVyc1sxXS5hbGxTaGlwc1N1bmsoKSk7XG4gIH1cblxuICBmdW5jdGlvbiBjb21wdXRlclR1cm4oKSB7XG4gICAgLy9UbyBtb2RpZnkgYWZ0ZXIgdG8gcHV0IHNldFRpbWVvdXQgbG9naWMgISEhXG4gICAgbGV0IGF0dGFja1Jlc3VsdDtcbiAgICBkbyB7XG4gICAgICBhdHRhY2tSZXN1bHQgPSBwbGF5ZXJVbmRlckF0dGFjay5yZWNlaXZlQXR0YWNrKFxuICAgICAgICBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCksXG4gICAgICAgIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKSxcbiAgICAgICAgZmFsc2VcbiAgICAgICk7XG4gICAgfSB3aGlsZSAoYXR0YWNrUmVzdWx0ID09PSBmYWxzZSk7XG4gIH1cblxuICAvL1BMQVlFUiBBTkQgQ09NUFVURVIgUExBQ0lORyBTSElQUyAoSG9yaXpvbnRhbGx5ICsgVmVydGljYWxseSlcbiAgLy8tLS1Ib3Jpem9udGFsXG4gIGZ1bmN0aW9uIHBsYXllclNoaXBQbGFjZW1lbnRIKGxpbmUsIGNvbHVtbiwgbGVuZ3RoKSB7XG4gICAgbGV0IHJlc3VsdCA9IHBsYXllcnNbMF0ucGxhY2VTaGlwSG9yaXpvbnRhbGx5KGxpbmUsIGNvbHVtbiwgbGVuZ3RoKTtcbiAgICBjaGVja1Bvc2l0aW9ucyA9IHJlc3VsdDtcblxuICAgIC8vY29uc29sZS5sb2coXCJyZXN1bHQ6ICAgXCIgKyByZXN1bHQpO1xuICAgIGlmIChyZXN1bHQgPT09IHRydWUpIHtcbiAgICAgIGNvbXB1dGVyU2hpcFBsYWNlbWVudEgobGVuZ3RoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBjb21wdXRlclNoaXBQbGFjZW1lbnRIKGNob3Nlbkxlbmd0aCkge1xuICAgIGxldCBwbGFjZVJlc3VsdDtcblxuICAgIGRvIHtcbiAgICAgIHBsYWNlUmVzdWx0ID0gcGxheWVyc1sxXS5wbGFjZVNoaXBIb3Jpem9udGFsbHkoXG4gICAgICAgIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKSxcbiAgICAgICAgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApLFxuICAgICAgICBjaG9zZW5MZW5ndGhcbiAgICAgICk7XG4gICAgICAvL2NvbnNvbGUubG9nKFwicGxhY2VSZXN1bHQ6ICAgXCIgKyBwbGFjZVJlc3VsdCk7XG4gICAgfSB3aGlsZSAocGxhY2VSZXN1bHQgPT09IGZhbHNlIHx8IHBsYWNlUmVzdWx0ID09PSBudWxsKTtcbiAgfVxuICAvLy0tLVZlcnRpY2FsXG4gIGZ1bmN0aW9uIHBsYXllclNoaXBQbGFjZW1lbnRWKGxpbmUsIGNvbHVtbiwgbGVuZ3RoKSB7XG4gICAgbGV0IHJlc3VsdCA9IHBsYXllcnNbMF0ucGxhY2VTaGlwVmVydGljYWxseShsaW5lLCBjb2x1bW4sIGxlbmd0aCk7XG4gICAgY2hlY2tQb3NpdGlvbnMgPSByZXN1bHQ7XG5cbiAgICBjb25zb2xlLmxvZyhcInJlc3VsdDogICBcIiArIHJlc3VsdCk7XG4gICAgaWYgKHJlc3VsdCA9PT0gdHJ1ZSkge1xuICAgICAgY29tcHV0ZXJTaGlwUGxhY2VtZW50VihsZW5ndGgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGNvbXB1dGVyU2hpcFBsYWNlbWVudFYoY2hvc2VuTGVuZ3RoKSB7XG4gICAgbGV0IHBsYWNlUmVzdWx0O1xuICAgIGRvIHtcbiAgICAgIHBsYWNlUmVzdWx0ID0gcGxheWVyc1sxXS5wbGFjZVNoaXBWZXJ0aWNhbGx5KFxuICAgICAgICBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCksXG4gICAgICAgIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKSxcbiAgICAgICAgY2hvc2VuTGVuZ3RoXG4gICAgICApO1xuICAgIH0gd2hpbGUgKHBsYWNlUmVzdWx0ID09PSBmYWxzZSB8fCBwbGFjZVJlc3VsdCA9PT0gbnVsbCk7XG4gIH1cblxuICBjb25zdCBnZXRQbGF5ZXJzID0gKCkgPT4gcGxheWVycztcbiAgY29uc3QgZ2V0UGxheWVyVW5kZXJBdHRhY2sgPSAoKSA9PiBwbGF5ZXJVbmRlckF0dGFjaztcblxuICByZXR1cm4ge1xuICAgIGdldFBsYXllcnMsXG4gICAgY2hhbmdlUGxheWVyLFxuICAgIGdldFBsYXllclVuZGVyQXR0YWNrLFxuICAgIHBsYXllclR1cm4sXG4gICAgcGxheWVyU2hpcFBsYWNlbWVudEgsXG4gICAgcGxheWVyU2hpcFBsYWNlbWVudFYsXG4gIH07XG59O1xuXG5leHBvcnQgeyBQbGF5ZXJzLCBjaGVjaywgY2hlY2tQb3NpdGlvbnMgfTtcblxuLy9NYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqMTApXG4vKmNvbnN0IHBsYXllcjEgPSBHYW1lYm9hcmQoKTtcbmNvbnN0IHBsYXllcjIgPSBHYW1lYm9hcmQoKTtcbmNvbnN0IHBsYXllcnMgPSBbcGxheWVyMSwgcGxheWVyMl07Ki9cblxuLypcbmNvbnN0IFBsYXllciA9IChwbGF5ZXJPbmUgPSBcIlBsYXllclwiLCBwbGF5ZXJUd28gPSBcIkNvbXB1dGVyXCIpID0+IHtcbiAgY29uc3QgcGxheWVyMSA9IEdhbWVib2FyZCgpO1xuICBwbGF5ZXIxLm5hbWUgPSBwbGF5ZXJPbmU7XG5cbiAgY29uc3QgcGxheWVyMiA9IEdhbWVib2FyZCgpO1xuICBwbGF5ZXIyLm5hbWUgPSBwbGF5ZXJUd287XG5cbiAgcmV0dXJuIFtwbGF5ZXIxLCBwbGF5ZXIyXTtcbn07XG5cbmNvbnN0IHBsYXllcnMgPSBQbGF5ZXIoKTtcbmxldCBwbGF5ZXJVbmRlckF0dGFjayA9IHBsYXllcnNbMF07XG5cbmZ1bmN0aW9uIGNoYW5nZVBsYXllcigpIHtcbiAgcGxheWVyVW5kZXJBdHRhY2sgPVxuICAgIHBsYXllclVuZGVyQXR0YWNrID09PSBwbGF5ZXJzWzBdID8gcGxheWVyc1sxXSA6IHBsYXllcnNbMF07XG4gIGNvbnNvbGUubG9nKHBsYXllclVuZGVyQXR0YWNrLm5hbWUpO1xufVxuKi9cbiIsImltcG9ydCB7IHBsYXllcnMgfSBmcm9tIFwiLi9ldmVudExpc3RlbmVyc1wiO1xuaW1wb3J0IHsgY2hlY2ssIGNoZWNrUG9zaXRpb25zIH0gZnJvbSBcIi4vcGxheWVyXCI7XG5cbmZ1bmN0aW9uIGdhbWVib2FyZFVwZGF0ZShwbGF5ZXJzKSB7XG4gIGNvbnN0IGdyaWQxID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIiNncmlkMSA+IHNwYW5cIik7XG4gIGNvbnN0IGdyaWQyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIiNncmlkMiA+IHNwYW5cIik7XG5cbiAgY29uc29sZS5sb2coZ3JpZDFbMV0uYXR0cmlidXRlc1swXS52YWx1ZSk7IC8vY29sdW1uXG4gIGNvbnNvbGUubG9nKGdyaWQxWzFdLmF0dHJpYnV0ZXNbMV0udmFsdWUpOyAvL2xpbmVcbiAgLy9jb25zb2xlLmxvZyhwbGF5ZXJzLmdldFBsYXllcnMoKVswXS5nZXRCb2FyZCgpWzBdWzFdLmdldExlbmd0aCgpKTtcbiAgY29uc29sZS5sb2cocGxheWVycy5nZXRQbGF5ZXJzKClbMF0uZ2V0U2hpcHMoKSk7XG5cbiAgY29uc29sZS5sb2coZ3JpZDFbMTBdLmF0dHJpYnV0ZXNbMF0udmFsdWUpOyAvL2NvbHVtblxuICBjb25zb2xlLmxvZyhncmlkMVsxMF0uYXR0cmlidXRlc1sxXS52YWx1ZSk7IC8vbGluZVxuXG4gIC8qY29uc29sZS5sb2cocGxheWVycy5nZXRQbGF5ZXJVbmRlckF0dGFjaygpLm5hbWUpO1xuICBwbGF5ZXJzLmNoYW5nZVBsYXllcigpO1xuICBjb25zb2xlLmxvZyhwbGF5ZXJzLmdldFBsYXllclVuZGVyQXR0YWNrKCkubmFtZSk7Ki9cblxuICAvL1ZlcmlmeSBmb3IgZWFjaCBlbGVtZW50IG9mIHRoZSBib2FyZCBpZiB0aGUgdmFsdWUgaXMgZGlmZmVyZW50IGZyb20gbnVsbCBBTkQgZmFsc2VcbiAgLy9TaW5jZSBlYWNoIGVsZW1lbnQgb2YgdGhlIGdyaWQxIE5vZGUgY29udGFpbnMgYSBsaW5lIGFuZCBjb2x1bW4gdGhhdCBpcyB1c2VkIHRvIGl0ZXJhdGUgdGhyb3VnaCBlYWNoIGVsZW1lbnQgb2YgdGhlIGJvYXJkXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgMTAwOyBpKyspIHtcbiAgICBpZiAoXG4gICAgICBwbGF5ZXJzLmdldFBsYXllcnMoKVswXS5nZXRCb2FyZCgpW2dyaWQxW2ldLmF0dHJpYnV0ZXNbMV0udmFsdWVdW1xuICAgICAgICBncmlkMVtpXS5hdHRyaWJ1dGVzWzBdLnZhbHVlXG4gICAgICBdICE9PSBudWxsICYmXG4gICAgICBwbGF5ZXJzLmdldFBsYXllcnMoKVswXS5nZXRCb2FyZCgpW2dyaWQxW2ldLmF0dHJpYnV0ZXNbMV0udmFsdWVdW1xuICAgICAgICBncmlkMVtpXS5hdHRyaWJ1dGVzWzBdLnZhbHVlXG4gICAgICBdICE9PSBmYWxzZSAmJlxuICAgICAgcGxheWVycy5nZXRQbGF5ZXJzKClbMF0uZ2V0Qm9hcmQoKVtncmlkMVtpXS5hdHRyaWJ1dGVzWzFdLnZhbHVlXVtcbiAgICAgICAgZ3JpZDFbaV0uYXR0cmlidXRlc1swXS52YWx1ZVxuICAgICAgXSAhPT0gXCJoaXRcIlxuICAgICkge1xuICAgICAgZ3JpZDFbaV0uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJncmV5XCI7XG4gICAgfSBlbHNlIGlmIChcbiAgICAgIHBsYXllcnMuZ2V0UGxheWVycygpWzBdLmdldEJvYXJkKClbZ3JpZDFbaV0uYXR0cmlidXRlc1sxXS52YWx1ZV1bXG4gICAgICAgIGdyaWQxW2ldLmF0dHJpYnV0ZXNbMF0udmFsdWVcbiAgICAgIF0gPT09IGZhbHNlXG4gICAgKSB7XG4gICAgICAvL2dyaWQxW2ldLnRleHRDb250ZW50ID0gXCJ4XCI7XG4gICAgICBncmlkMVtpXS5jbGFzc05hbWUgPSBcImZhaWxcIjtcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgcGxheWVycy5nZXRQbGF5ZXJzKClbMF0uZ2V0Qm9hcmQoKVtncmlkMVtpXS5hdHRyaWJ1dGVzWzFdLnZhbHVlXVtcbiAgICAgICAgZ3JpZDFbaV0uYXR0cmlidXRlc1swXS52YWx1ZVxuICAgICAgXSA9PT0gXCJoaXRcIlxuICAgICkge1xuICAgICAgLy9ncmlkMVtpXS50ZXh0Q29udGVudCA9IFwiaGl0XCI7XG4gICAgICBncmlkMVtpXS5jbGFzc05hbWUgPSBcImhpdFwiO1xuICAgIH1cbiAgfVxuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgMTAwOyBpKyspIHtcbiAgICBpZiAoXG4gICAgICBwbGF5ZXJzLmdldFBsYXllcnMoKVsxXS5nZXRCb2FyZCgpW2dyaWQyW2ldLmF0dHJpYnV0ZXNbMV0udmFsdWVdW1xuICAgICAgICBncmlkMltpXS5hdHRyaWJ1dGVzWzBdLnZhbHVlXG4gICAgICBdID09PSBmYWxzZVxuICAgICkge1xuICAgICAgLy9ncmlkMltpXS50ZXh0Q29udGVudCA9IFwieFwiO1xuICAgICAgZ3JpZDJbaV0uY2xhc3NOYW1lID0gXCJmYWlsXCI7XG4gICAgfSBlbHNlIGlmIChcbiAgICAgIHBsYXllcnMuZ2V0UGxheWVycygpWzFdLmdldEJvYXJkKClbZ3JpZDJbaV0uYXR0cmlidXRlc1sxXS52YWx1ZV1bXG4gICAgICAgIGdyaWQyW2ldLmF0dHJpYnV0ZXNbMF0udmFsdWVcbiAgICAgIF0gPT09IFwiaGl0XCJcbiAgICApIHtcbiAgICAgIC8vZ3JpZDJbaV0udGV4dENvbnRlbnQgPSBcImhpdFwiO1xuICAgICAgZ3JpZDJbaV0uY2xhc3NOYW1lID0gXCJoaXRcIjtcbiAgICB9XG5cbiAgICBtZXNzYWdlcyhjaGVjayk7XG4gICAgbWVzc2FnZXNQb3NpdGlvbnMoY2hlY2tQb3NpdGlvbnMpO1xuICB9XG5cbiAgY29uc29sZS5sb2cocGxheWVycy5nZXRQbGF5ZXJzKClbMF0uZ2V0Qm9hcmQoKSk7XG4gIGNvbnNvbGUubG9nKHBsYXllcnMuZ2V0UGxheWVycygpWzFdLmdldEJvYXJkKCkpO1xuICBjb25zb2xlLmxvZyhwbGF5ZXJzKTtcbn1cblxuZnVuY3Rpb24gbWVzc2FnZXMoY2hlY2tTdGF0dXMpIHtcbiAgY29uc3QgZmxvdyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZmxvd1wiKTtcblxuICBpZiAoY2hlY2tTdGF0dXMpIHtcbiAgICBmbG93LnRleHRDb250ZW50ID0gXCJBIHNoaXAgaGFzIGJlZW4gaGl0IVwiO1xuICB9IGVsc2UgaWYgKGNoZWNrU3RhdHVzID09PSBmYWxzZSkge1xuICAgIGZsb3cudGV4dENvbnRlbnQgPSBcIlRoaXMgc3BvdCBoYXMgYWxyZWFkeSBiZWVuIGhpdCBcIjtcbiAgfSBlbHNlIGlmIChjaGVja1N0YXR1cyA9PT0gbnVsbCkge1xuICAgIGZsb3cudGV4dENvbnRlbnQgPSBcIk9vcHMuLiBub3RoaW5nIGhhcyBiZWVuIGhpdFwiO1xuICB9XG59XG5cbmZ1bmN0aW9uIG1lc3NhZ2VzUG9zaXRpb25zKGNoZWNrU3RhdHVzKSB7XG4gIGNvbnN0IGFsZXJ0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhbGVydFwiKTtcblxuICBpZiAoY2hlY2tTdGF0dXMpIHtcbiAgICBhbGVydC50ZXh0Q29udGVudCA9IFwiXCI7XG4gIH0gZWxzZSBpZiAoY2hlY2tTdGF0dXMgPT09IGZhbHNlKSB7XG4gICAgYWxlcnQudGV4dENvbnRlbnQgPSBcIlRoZSBzaGlwIHRvdWNoZXMgYW5vdGhlciBzaGlwLiBDaG9vc2UgYW5vdGhlciBzcG90XCI7XG4gIH0gZWxzZSBpZiAoY2hlY2tTdGF0dXMgPT09IG51bGwpIHtcbiAgICBhbGVydC50ZXh0Q29udGVudCA9IFwiVGhlIHNoaXAgZ29lcyBiZXlvbmQgdGhlIGxpbWl0c1wiO1xuICB9XG59XG5cbmZ1bmN0aW9uIG5vU2hpcFBsYWNlZE1lc3NhZ2UoKSB7XG4gIGNvbnN0IGZsb3cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zsb3dcIik7XG4gIGZsb3cudGV4dENvbnRlbnQgPSBcIllvdSBoYXZlIHRvIHBsYWNlIGF0IGxlYXN0IDEgc2hpcFwiO1xufVxuXG5mdW5jdGlvbiBzdGFydE1lc3NhZ2UoKSB7XG4gIGNvbnN0IGZsb3cgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zsb3dcIik7XG4gIGZsb3cudGV4dENvbnRlbnQgPSBcIlRpbWUgdG8gc3RhcnQhIFlvdSBwbGF5IGZpcnN0XCI7XG59XG5cbmZ1bmN0aW9uIGVyYXNlZEFsZXJ0KCkge1xuICBjb25zdCBhbGVydCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWxlcnRcIik7XG4gIGFsZXJ0LnRleHRDb250ZW50ID0gXCJcIjtcbn1cblxuZnVuY3Rpb24gbWVzc2FnZXNQbGFjZVNoaXBzKCkge1xuICBjb25zdCBmbG93ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmbG93XCIpO1xufVxuXG5mdW5jdGlvbiBwbGF5ZXJXaW5zKCkge1xuICBjb25zdCBmbG93ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmbG93XCIpO1xuICBmbG93LnRleHRDb250ZW50ID0gXCJDb25ncmF0dWxhdGlvbnMgeW91IHdvbiFcIjtcbn1cblxuZnVuY3Rpb24gY29tcHV0ZXJXaW5zKCkge1xuICBjb25zdCBmbG93ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmbG93XCIpO1xuICBmbG93LnRleHRDb250ZW50ID0gXCJPaC4uIHlvdSBsb3N0Li5cIjtcbn1cblxuLypmdW5jdGlvbiBub3RoaW5nSGl0TWVzc2FnZSgpIHtcbiAgY29uc3QgZmxvdyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZmxvd1wiKTtcbiAgZmxvdy50ZXh0Q29udGVudCA9IFwiT29wcy4uIG5vdGhpbmcgaGFzIGJlZW4gaGl0XCI7XG59XG5cbmZ1bmN0aW9uIHNoaXBIaXRNZXNzYWdlKCkge1xuICBjb25zdCBmbG93ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmbG93XCIpO1xuICBmbG93LnRleHRDb250ZW50ID0gXCJBIHNoaXAgaGFzIGJlZW4gaGl0IVwiO1xufSovXG5cbmV4cG9ydCB7XG4gIGdhbWVib2FyZFVwZGF0ZSxcbiAgcGxheWVyV2lucyxcbiAgY29tcHV0ZXJXaW5zLFxuICBub1NoaXBQbGFjZWRNZXNzYWdlLFxuICBzdGFydE1lc3NhZ2UsXG4gIGVyYXNlZEFsZXJ0LFxuICAvKnNoaXBIaXRNZXNzYWdlLFxuICBub3RoaW5nSGl0TWVzc2FnZSwqL1xufTtcbiIsImltcG9ydCBcIi4vc3R5bGUvc3R5bGUuY3NzXCI7XG5pbXBvcnQgeyByZW5kZXIgfSBmcm9tIFwiLi9jb21wb25lbnRzL3JlbmRlclBhZ2VcIjtcbmltcG9ydCB7IGdhbWVib2FyZFVwZGF0ZSB9IGZyb20gXCIuL2NvbXBvbmVudHMvcmVuZGVyQm9hcmRBbmRNZXNzYWdlc1wiO1xuaW1wb3J0IHsgUGxheWVycyB9IGZyb20gXCIuL2NvbXBvbmVudHMvcGxheWVyXCI7XG4vL2ltcG9ydCB7IGdhbWVMb29wLCBwbGF5ZXJzIH0gZnJvbSBcIi4vY29tcG9uZW50cy9nYW1lRmxvd1wiO1xuaW1wb3J0IHsgZGlzcGxheUNvbnRyb2xsZXIsIHBsYXllcnMsIHBsYXkgfSBmcm9tIFwiLi9jb21wb25lbnRzL2V2ZW50TGlzdGVuZXJzXCI7XG5cbnJlbmRlcigpO1xuLy9nYW1lYm9hcmRVcGRhdGUocGxheWVycyk7XG5wbGF5KCk7XG4vL2Rpc3BsYXlDb250cm9sbGVyKCk7XG5cbi8vZ2FtZUxvb3AoKTtcbiIsIi8vaW1wb3J0IHsgLypnYW1lTG9vcCwqLyBwbGF5ZXJzIH0gZnJvbSBcIi4vZ2FtZUZsb3dcIjtcblxuaW1wb3J0IHtcbiAgZ2FtZWJvYXJkVXBkYXRlLFxuICBwbGF5ZXJXaW5zLFxuICBjb21wdXRlcldpbnMsXG4gIG5vU2hpcFBsYWNlZE1lc3NhZ2UsXG4gIHN0YXJ0TWVzc2FnZSxcbiAgZXJhc2VkQWxlcnQsXG59IGZyb20gXCIuL3JlbmRlckJvYXJkQW5kTWVzc2FnZXNcIjtcbmltcG9ydCB7IFBsYXllcnMsIGNob3Nlbkxlbmd0aCB9IGZyb20gXCIuL3BsYXllclwiO1xuaW1wb3J0IHsgY2hhbmdlRGlzcGxheUNob2ljZXMsIHN0YXJ0VHJpZ2dlcmVkIH0gZnJvbSBcIi4vcmVuZGVyUGFnZVwiO1xuLy9pbXBvcnQgeyBzdGFydE1lc3NhZ2UsICAgbm9TaGlwUGxhY2VkTWVzc2FnZSwgfSBmcm9tIFwiLi9yZW5kZXJCb2FyZEFuZE1lc3NhZ2VzXCI7XG5cbmZ1bmN0aW9uIHBsYXkoKSB7XG4gIGNvbnN0IHBsYXllcnMgPSBQbGF5ZXJzKCk7XG5cbiAgZ2FtZWJvYXJkVXBkYXRlKHBsYXllcnMpO1xuICAoZnVuY3Rpb24gZGlzcGxheUNvbnRyb2xsZXIoKSB7XG4gICAgY29uc3QgZ3JpZERpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZ3JpZERpdlwiKTtcbiAgICBjb25zdCBncmlkRGl2MiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZ3JpZERpdjJcIik7XG4gICAgY29uc3QgcGxheWVyR3JpZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZ3JpZDFcIik7XG4gICAgY29uc3QgY29udHJvbGxlcnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRyb2xsZXJzXCIpO1xuICAgIGNvbnN0IHNoaXBzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjaG9pY2VzXCIpO1xuICAgIGNvbnN0IHN0YXJ0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNzdGFydEJ1dHRvblwiKTtcbiAgICBjb25zdCByZXN0YXJ0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNyZXN0YXJ0QnV0dG9uXCIpO1xuICAgIGxldCBjaG9zZW5MZW5ndGggPSAzO1xuICAgIGxldCBwb3NpdGlvbiA9IFwiaG9yaXpvbnRhbFwiO1xuICAgIGxldCBtYXhQbGFjZW1lbnQgPSAwO1xuXG4gICAgLy9EUkFHIEFORCBEUk9QLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICAgIHNoaXBzLmFkZEV2ZW50TGlzdGVuZXIoXCJkcmFnc3RhcnRcIiwgKGUpID0+IHtcbiAgICAgIC8vdGFrZSB0aGUgdmFsdWVzIG9mIHRoZSBkcmFnZ2VkIGVsZW1lbnRcbiAgICAgIGNob3Nlbkxlbmd0aCA9IE51bWJlcihlLnRhcmdldC5hdHRyaWJ1dGVzWzBdLnZhbHVlKTtcbiAgICAgIHBvc2l0aW9uID0gZS50YXJnZXQuY2xhc3NOYW1lO1xuICAgIH0pO1xuXG4gICAgcGxheWVyR3JpZC5hZGRFdmVudExpc3RlbmVyKFwiZHJhZ292ZXJcIiwgKGUpID0+IHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIC8vdGFrZSB0aGUgdmFsdWVzIG9mIHRoZSBob3ZlcmVkIGVsZW1lbnRcbiAgICAgIGUudGFyZ2V0LmRhdGFzZXQub3ZlciA9IFwieWVzXCI7XG4gICAgICAvL0lGIEhPUklaT05UQUxcbiAgICAgIGlmIChwb3NpdGlvbiA9PT0gXCJob3Jpem9udGFsXCIpIHtcbiAgICAgICAgLy9DaGFuZ2UgdGhlIGJhY2tncm91bmQgY29sb3IgdGFraW5nIGludG8gYWNjb3VudCB0aGUgY2hvc2VuIGxlbmd0aCAoZGVjbGFyZWQgYWJvdmUpIElGIHRoZSBkYXRhIGF0dHJpYnV0ZSBudW1iZXIgZXhpc3RcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaG9zZW5MZW5ndGg7IGkrKykge1xuICAgICAgICAgIGlmIChcbiAgICAgICAgICAgIGUudGFyZ2V0LnBhcmVudE5vZGUuY2hpbGROb2Rlc1tOdW1iZXIoZS50YXJnZXQuZGF0YXNldC5udW1iZXIpICsgaV1cbiAgICAgICAgICApIHtcbiAgICAgICAgICAgIGUudGFyZ2V0LnBhcmVudE5vZGUuY2hpbGROb2Rlc1tcbiAgICAgICAgICAgICAgTnVtYmVyKGUudGFyZ2V0LmRhdGFzZXQubnVtYmVyKSArIGlcbiAgICAgICAgICAgIF0uZGF0YXNldC5vdmVyID0gXCJ5ZXNcIjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gLy9JRiBWRVJUSUNBTFxuICAgICAgZWxzZSB7XG4gICAgICAgIC8vQ2hhbmdlIHRoZSBiYWNrZ3JvdW5kIGNvbG9yIHRha2luZyBpbnRvIGFjY291bnQgdGhlIGNob3NlbiBsZW5ndGggKGRlY2xhcmVkIGFib3ZlKSBJRiB0aGUgZGF0YSBhdHRyaWJ1dGUgbnVtYmVyIGV4aXN0XG4gICAgICAgIGZvciAoXG4gICAgICAgICAgbGV0IGkgPSBOdW1iZXIoZS50YXJnZXQuZGF0YXNldC5udW1iZXIpO1xuICAgICAgICAgIGkgPD0gTnVtYmVyKGUudGFyZ2V0LmRhdGFzZXQubnVtYmVyKSArIChjaG9zZW5MZW5ndGggLSAxKSAqIDEwO1xuICAgICAgICAgIGkgKz0gMTBcbiAgICAgICAgKSB7XG4gICAgICAgICAgaWYgKGUudGFyZ2V0LnBhcmVudE5vZGUuY2hpbGROb2Rlc1tpXSkge1xuICAgICAgICAgICAgZS50YXJnZXQucGFyZW50Tm9kZS5jaGlsZE5vZGVzW2ldLmRhdGFzZXQub3ZlciA9IFwieWVzXCI7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBwbGF5ZXJHcmlkLmFkZEV2ZW50TGlzdGVuZXIoXCJkcmFnbGVhdmVcIiwgKGUpID0+IHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGUudGFyZ2V0LmRhdGFzZXQub3ZlciA9IFwiXCI7XG4gICAgICAvL0luIG9yZGVyIHRvIHVuZG8gdGhlIGNoYW5naW5nIGJhY2tncm91bmQgY29sb3JcbiAgICAgIC8vSUYgSE9SSVpPTlRBTFxuICAgICAgaWYgKHBvc2l0aW9uID09PSBcImhvcml6b250YWxcIikge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNob3Nlbkxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgaWYgKFxuICAgICAgICAgICAgZS50YXJnZXQucGFyZW50Tm9kZS5jaGlsZE5vZGVzW051bWJlcihlLnRhcmdldC5kYXRhc2V0Lm51bWJlcikgKyBpXVxuICAgICAgICAgICkge1xuICAgICAgICAgICAgZS50YXJnZXQucGFyZW50Tm9kZS5jaGlsZE5vZGVzW1xuICAgICAgICAgICAgICBOdW1iZXIoZS50YXJnZXQuZGF0YXNldC5udW1iZXIpICsgaVxuICAgICAgICAgICAgXS5kYXRhc2V0Lm92ZXIgPSBcIlwiO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSAvL0lGIFZFUlRJQ0FMXG4gICAgICBlbHNlIHtcbiAgICAgICAgLy9DaGFuZ2UgdGhlIGJhY2tncm91bmQgY29sb3IgdGFraW5nIGludG8gYWNjb3VudCB0aGUgY2hvc2VuIGxlbmd0aCAoZGVjbGFyZWQgYWJvdmUpIElGIHRoZSBkYXRhIGF0dHJpYnV0ZSBudW1iZXIgZXhpc3RcbiAgICAgICAgZm9yIChcbiAgICAgICAgICBsZXQgaSA9IE51bWJlcihlLnRhcmdldC5kYXRhc2V0Lm51bWJlcik7XG4gICAgICAgICAgaSA8PSBOdW1iZXIoZS50YXJnZXQuZGF0YXNldC5udW1iZXIpICsgKGNob3Nlbkxlbmd0aCAtIDEpICogMTA7XG4gICAgICAgICAgaSArPSAxMFxuICAgICAgICApIHtcbiAgICAgICAgICBpZiAoZS50YXJnZXQucGFyZW50Tm9kZS5jaGlsZE5vZGVzW2ldKSB7XG4gICAgICAgICAgICBlLnRhcmdldC5wYXJlbnROb2RlLmNoaWxkTm9kZXNbaV0uZGF0YXNldC5vdmVyID0gXCJcIjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHBsYXllckdyaWQuYWRkRXZlbnRMaXN0ZW5lcihcImRyb3BcIiwgKGUpID0+IHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIC8vSW4gb3JkZXIgdG8gdW5kbyB0aGUgY2hhbmdpbmcgYmFja2dyb3VuZCBjb2xvciB3aGVuIGxlYXZlIGRyb3Agd2hlbiBwbGFjZW1lbnQgZmFpbHMgKEhvcml6b250YWwpXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNob3Nlbkxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICBlLnRhcmdldC5wYXJlbnROb2RlLmNoaWxkTm9kZXNbTnVtYmVyKGUudGFyZ2V0LmRhdGFzZXQubnVtYmVyKSArIGldXG4gICAgICAgICkge1xuICAgICAgICAgIGUudGFyZ2V0LnBhcmVudE5vZGUuY2hpbGROb2Rlc1tcbiAgICAgICAgICAgIE51bWJlcihlLnRhcmdldC5kYXRhc2V0Lm51bWJlcikgKyBpXG4gICAgICAgICAgXS5kYXRhc2V0Lm92ZXIgPSBcIlwiO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICAvL0luIG9yZGVyIHRvIHVuZG8gdGhlIGNoYW5naW5nIGJhY2tncm91bmQgY29sb3Igd2hlbiBsZWF2ZSBkcm9wIHdoZW4gcGxhY2VtZW50IGZhaWxzIChWZXJ0aWNhbClcbiAgICAgIGZvciAoXG4gICAgICAgIGxldCBpID0gTnVtYmVyKGUudGFyZ2V0LmRhdGFzZXQubnVtYmVyKTtcbiAgICAgICAgaSA8PSBOdW1iZXIoZS50YXJnZXQuZGF0YXNldC5udW1iZXIpICsgKGNob3Nlbkxlbmd0aCAtIDEpICogMTA7XG4gICAgICAgIGkgKz0gMTBcbiAgICAgICkge1xuICAgICAgICBpZiAoZS50YXJnZXQucGFyZW50Tm9kZS5jaGlsZE5vZGVzW2ldKSB7XG4gICAgICAgICAgZS50YXJnZXQucGFyZW50Tm9kZS5jaGlsZE5vZGVzW2ldLmRhdGFzZXQub3ZlciA9IFwiXCI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8rbG9naWMgd2hlbiBkcm9wID0+IHJ1biB0aGUgZnVuY3Rpb25zIGJlbG93XG4gICAgICAvL1RvIGxpbWl0IHRoZSBudW1iZXIgb2Ygb2Ygc2hpcHMgdG8gMTAgbWF4XG4gICAgICBpZiAocGxheWVycy5nZXRQbGF5ZXJzKClbMF0uZ2V0U2hpcHMoKS5sZW5ndGggPCAxMCkge1xuICAgICAgICBsZXQgcGxheWVyQ2hvaWNlTGluZSA9IGUudGFyZ2V0LmF0dHJpYnV0ZXNbMV0udmFsdWU7XG4gICAgICAgIGxldCBwbGF5ZXJDaG9pY2VDb2x1bW4gPSBlLnRhcmdldC5hdHRyaWJ1dGVzWzBdLnZhbHVlO1xuXG4gICAgICAgIGlmICgvKmUudGFyZ2V0LmF0dHJpYnV0ZXNbMV0udmFsdWUgJiYqLyBwb3NpdGlvbiA9PT0gXCJob3Jpem9udGFsXCIpIHtcbiAgICAgICAgICBwbGF5ZXJzLnBsYXllclNoaXBQbGFjZW1lbnRIKFxuICAgICAgICAgICAgTnVtYmVyKHBsYXllckNob2ljZUxpbmUpLFxuICAgICAgICAgICAgTnVtYmVyKHBsYXllckNob2ljZUNvbHVtbiksXG4gICAgICAgICAgICBOdW1iZXIoY2hvc2VuTGVuZ3RoKVxuICAgICAgICAgICk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcGxheWVycy5wbGF5ZXJTaGlwUGxhY2VtZW50VihcbiAgICAgICAgICAgIE51bWJlcihwbGF5ZXJDaG9pY2VMaW5lKSxcbiAgICAgICAgICAgIE51bWJlcihwbGF5ZXJDaG9pY2VDb2x1bW4pLFxuICAgICAgICAgICAgTnVtYmVyKGNob3Nlbkxlbmd0aClcbiAgICAgICAgICApO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHBsYXllcnMuZ2V0UGxheWVycygpWzBdLmdldFNoaXBzKCkubGVuZ3RoID09PSAxMCkge1xuICAgICAgICAgIHN0YXJ0VHJpZ2dlcmVkKCk7XG4gICAgICAgIH1cbiAgICAgICAgZ2FtZWJvYXJkVXBkYXRlKHBsYXllcnMpO1xuICAgICAgfVxuXG4gICAgICBjb25zb2xlLmxvZyhcbiAgICAgICAgcGxheWVycy5nZXRQbGF5ZXJzKClbMF0uZ2V0U2hpcHMoKS5sZW5ndGggK1xuICAgICAgICAgIFwiICBBST1cIiArXG4gICAgICAgICAgcGxheWVycy5nZXRQbGF5ZXJzKClbMV0uZ2V0U2hpcHMoKS5sZW5ndGhcbiAgICAgICk7XG4gICAgfSk7XG5cbiAgICAvL0VORCBPRiBEUkFHIEFORCBEUk9QLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICAvL0RyYWcgYW5kIERyb3AgdXNlZCBpbnN0ZWFkIG9mIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIilcblxuICAgIHN0YXJ0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xuICAgICAgaWYgKHBsYXllcnMuZ2V0UGxheWVycygpWzBdLmdldFNoaXBzKCkubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgIHN0YXJ0TWVzc2FnZSgpO1xuICAgICAgICBzdGFydFRyaWdnZXJlZCgpO1xuICAgICAgfSBlbHNlIGlmIChwbGF5ZXJzLmdldFBsYXllcnMoKVswXS5nZXRTaGlwcygpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBub1NoaXBQbGFjZWRNZXNzYWdlKCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXN0YXJ0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xuICAgICAgZG9jdW1lbnQubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgfSk7XG4gICAgY29udHJvbGxlcnMuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XG4gICAgICBpZiAoZS50YXJnZXQubG9jYWxOYW1lID09PSBcImJ1dHRvblwiKSB7XG4gICAgICAgIGNoYW5nZURpc3BsYXlDaG9pY2VzKGUudGFyZ2V0LmRhdGFzZXQucG9zaXRpb24pO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy9QbGF5ZXIgZ3JpZCAodG8gcGxhY2Ugc2hpcHMpXG4gICAgLypncmlkRGl2LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xuICAgICAgbGV0IHBsYXllckNob2ljZUxpbmUgPSBlLnRhcmdldC5kYXRhc2V0LmxpbmU7XG4gICAgICBsZXQgcGxheWVyQ2hvaWNlQ29sdW1uID0gZS50YXJnZXQuZGF0YXNldC5jb2x1bW47XG5cbiAgICAgIGlmIChwbGF5ZXJDaG9pY2VMaW5lICYmIHBvc2l0aW9uID09PSBcImhvcml6b250YWxcIikge1xuICAgICAgICBwbGF5ZXJzLnBsYXllclNoaXBQbGFjZW1lbnRIKFxuICAgICAgICAgIE51bWJlcihwbGF5ZXJDaG9pY2VMaW5lKSxcbiAgICAgICAgICBOdW1iZXIocGxheWVyQ2hvaWNlQ29sdW1uKSxcbiAgICAgICAgICBOdW1iZXIoY2hvc2VuTGVuZ3RoKVxuICAgICAgICApO1xuICAgICAgfSBlbHNlIGlmIChwbGF5ZXJDaG9pY2VMaW5lICYmIHBvc2l0aW9uID09PSBcInZlcnRpY2FsXCIpIHtcbiAgICAgICAgcGxheWVycy5wbGF5ZXJTaGlwUGxhY2VtZW50VihcbiAgICAgICAgICBOdW1iZXIocGxheWVyQ2hvaWNlTGluZSksXG4gICAgICAgICAgTnVtYmVyKHBsYXllckNob2ljZUNvbHVtbiksXG4gICAgICAgICAgTnVtYmVyKGNob3Nlbkxlbmd0aClcbiAgICAgICAgKTtcbiAgICAgIH1cblxuICAgICAgZ2FtZWJvYXJkVXBkYXRlKHBsYXllcnMpO1xuICAgICAgY29uc29sZS5sb2coXG4gICAgICAgIHBsYXllcnMuZ2V0UGxheWVycygpWzBdLmdldFNoaXBzKCkubGVuZ3RoICtcbiAgICAgICAgICBcIiAgQUk9XCIgK1xuICAgICAgICAgIHBsYXllcnMuZ2V0UGxheWVycygpWzFdLmdldFNoaXBzKCkubGVuZ3RoXG4gICAgICApO1xuICAgIH0pOyovXG5cbiAgICAvL0NvbXB1dGVyIGdyaWQgKHRvIGF0dGFjaylcbiAgICBjb25zdCBjb250cm9sbGVyID0gbmV3IEFib3J0Q29udHJvbGxlcigpO1xuICAgIGdyaWREaXYyLmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICBcImNsaWNrXCIsXG4gICAgICAoZSkgPT4ge1xuICAgICAgICBsZXQgcGxheWVyQ2hvaWNlTGluZTtcbiAgICAgICAgbGV0IHBsYXllckNob2ljZUNvbHVtbjtcblxuICAgICAgICAvL0luIGNhc2UgdGhlIGNvbXB1dGVyIGdyaWQgaXMgY2xpY2tlZCBiZWZvcmUgYW55IHNoaXAgaXMgcGxhY2VkXG4gICAgICAgIGlmIChwbGF5ZXJzLmdldFBsYXllcnMoKVswXS5nZXRTaGlwcygpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIG5vU2hpcFBsYWNlZE1lc3NhZ2UoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvL2lmIGF0IGxlYXN0IDEgc2hpcCBwbGFjZWQgPT4gc3RhcnQgdHJpZ2dlcmVkIHdoZW4gY29tcHV0ZXIgZ3JpZCBpcyBjbGlja2VkXG4gICAgICAgICAgaWYgKGUudGFyZ2V0LmRhdGFzZXQubGluZSkge1xuICAgICAgICAgICAgcGxheWVyQ2hvaWNlTGluZSA9IGUudGFyZ2V0LmRhdGFzZXQubGluZTtcbiAgICAgICAgICAgIHBsYXllckNob2ljZUNvbHVtbiA9IGUudGFyZ2V0LmRhdGFzZXQuY29sdW1uO1xuICAgICAgICAgICAgcGxheWVycy5wbGF5ZXJUdXJuKHBsYXllckNob2ljZUxpbmUsIHBsYXllckNob2ljZUNvbHVtbik7XG4gICAgICAgICAgICBnYW1lYm9hcmRVcGRhdGUocGxheWVycyk7XG4gICAgICAgICAgICBzdGFydFRyaWdnZXJlZCgpO1xuICAgICAgICAgICAgZXJhc2VkQWxlcnQoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBnYW1lTG9vcCgpO1xuXG4gICAgICAgIGlmIChnYW1lTG9vcCgpID09PSB0cnVlKSB7XG4gICAgICAgICAgY29udHJvbGxlci5hYm9ydCgpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgeyBzaWduYWw6IGNvbnRyb2xsZXIuc2lnbmFsIH1cbiAgICApO1xuICB9KSgpO1xuXG4gIGZ1bmN0aW9uIGdhbWVMb29wKCkge1xuICAgIGlmIChcbiAgICAgIHBsYXllcnMuZ2V0UGxheWVycygpWzBdLmFsbFNoaXBzU3VuaygpICYmXG4gICAgICBwbGF5ZXJzLmdldFBsYXllcnMoKVswXS5nZXRTaGlwcygpLmxlbmd0aCAhPT0gMFxuICAgICkge1xuICAgICAgY29tcHV0ZXJXaW5zKCk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgcGxheWVycy5nZXRQbGF5ZXJzKClbMV0uYWxsU2hpcHNTdW5rKCkgJiZcbiAgICAgIHBsYXllcnMuZ2V0UGxheWVycygpWzFdLmdldFNoaXBzKCkubGVuZ3RoICE9PSAwXG4gICAgKSB7XG4gICAgICBwbGF5ZXJXaW5zKCk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICAvL2NvbnN0IGdldENvbnRyb2xsZXIgPSAoKSA9PiBjb250cm9sbGVyO1xuXG4gICAgcmV0dXJuIHt9O1xuICB9XG59XG5cbmV4cG9ydCB7IC8qZGlzcGxheUNvbnRyb2xsZXIsKi8gcGxheSAvKiwgcGxheWVycyovIH07XG5cbi8qXG4gIFxuICBcbiAgXG4gIFxuICBcbiAgXG4gIFxuICBcbiAgXG4gIFxuICBcbiAgXG4gIFxuICBcbiAgXG4gIFxuICBcbiAgXG4gIFxuTE9HSVFVRSBBIEFKT1VURVIgREFOUyBQTEFZRVI/Pz8/Pz9cbiAgXG4gIGxldCBjb21wdXRlckNob2ljZUxpbmU7XG5sZXQgY29tcHV0ZXJDaG9pY2VDb2x1bW47XG5cbmdyaWREaXYuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XG5cbn0pO1xuXG5ncmlkRGl2Mi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcbiAgbGV0IHBsYXllckNob2ljZUxpbmU7XG4gIGxldCBwbGF5ZXJDaG9pY2VDb2x1bW47XG5cbiAgaWYgKGUudGFyZ2V0LmRhdGFzZXQubGluZSkge1xuICAgIHBsYXllckNob2ljZUxpbmUgPSBlLnRhcmdldC5kYXRhc2V0LmxpbmU7XG4gICAgcGxheWVyQ2hvaWNlQ29sdW1uID0gZS50YXJnZXQuZGF0YXNldC5jb2x1bW47XG4gIH1cbiAgcGxheWVyVHVybihwbGF5ZXJDaG9pY2VMaW5lLCBwbGF5ZXJDaG9pY2VDb2x1bW4pO1xuXG4gIGdhbWVMb29wKCk7IC8vIVxufSk7XG5cbi8vY29uc29sZS5sb2cocGxheWVycy5nZXRQbGF5ZXJVbmRlckF0dGFjaygpLm5hbWUpO1xuXG5cbi8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5mdW5jdGlvbiBwbGF5ZXJUdXJuKGxpbmUsIGNvbHVtbikge1xuICBsZXQgcmVzdWx0ID0gcGxheWVycy5nZXRQbGF5ZXJVbmRlckF0dGFjaygpLnJlY2VpdmVBdHRhY2sobGluZSwgY29sdW1uKTtcbiAgcGxheWVycy5jaGFuZ2VQbGF5ZXIoKTtcbiAgaWYgKHJlc3VsdCkge1xuICAgIGNvbXB1dGVyVHVybigpO1xuICAgIHBsYXllcnMuY2hhbmdlUGxheWVyKCk7XG4gICAgZ2FtZWJvYXJkVXBkYXRlKCk7XG4gIH0gZWxzZSB7XG4gICAgcGxheWVycy5jaGFuZ2VQbGF5ZXIoKTtcbiAgICBnYW1lYm9hcmRVcGRhdGUoKTtcbiAgfVxuXG4gIGxpbmUgPSB1bmRlZmluZWQ7XG4gIGNvbHVtbiA9IHVuZGVmaW5lZDtcbiAgY29uc29sZS5sb2cocGxheWVycy5nZXRQbGF5ZXJzKClbMV0uYWxsU2hpcHNTdW5rKCkpO1xufVxuXG5mdW5jdGlvbiBjb21wdXRlclR1cm4oKSB7XG4gIGxldCBhdHRhY2tSZXN1bHQ7XG4gIGRvIHtcbiAgICBhdHRhY2tSZXN1bHQgPSBwbGF5ZXJzXG4gICAgICAuZ2V0UGxheWVyVW5kZXJBdHRhY2soKVxuICAgICAgLnJlY2VpdmVBdHRhY2soXG4gICAgICAgIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKSxcbiAgICAgICAgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApLFxuICAgICAgICBmYWxzZVxuICAgICAgKTtcbiAgfSB3aGlsZSAoYXR0YWNrUmVzdWx0ID09PSBmYWxzZSk7XG59XG5cbiAgXG4gIFxuICBcbiAgXG4gICovXG4iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18iLCJVUkwiLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzNfX18iLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMl9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzNfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJ1cmwiLCJvcHRpb25zIiwiU3RyaW5nIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ0ZXN0Iiwic2xpY2UiLCJoYXNoIiwibmVlZFF1b3RlcyIsInJlcGxhY2UiLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJtIiwibiIsImdldHRlciIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJnIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJwIiwiYiIsImJhc2VVUkkiLCJzZWxmIiwiaHJlZiIsIm5jIiwic3RhcnRUcmlnZ2VyZWQiLCJkaXNwbGF5IiwiY2xhc3NMaXN0IiwiYWRkIiwibG9jYWxzIiwiU2hpcCIsImhpdHMiLCJzaGlwTGVuZ3RoIiwiZ2V0TGVuZ3RoIiwiZ2V0SGl0cyIsImhpdCIsImlzU3VuayIsIkdhbWVib2FyZCIsImdyaWQiLCJib2FyZCIsImFsbFNoaXBzIiwibGluZSIsIkFycmF5IiwiZmlsbCIsImdldEJvYXJkIiwicGxhY2VTaGlwSG9yaXpvbnRhbGx5IiwiY29sdW1uIiwic2hvd0FsZXJ0IiwibmV3U2hpcCIsImNoZWNrIiwiZXZlcnkiLCJwbGFjZVNoaXBWZXJ0aWNhbGx5IiwicmVjZWl2ZUF0dGFjayIsImdldFNoaXBzIiwiYWxsU2hpcHNTdW5rIiwiY2hlY2tQb3NpdGlvbnMiLCJnYW1lYm9hcmRVcGRhdGUiLCJwbGF5ZXJzIiwiZ3JpZDEiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZ3JpZDIiLCJjb25zb2xlIiwibG9nIiwidmFsdWUiLCJnZXRQbGF5ZXJzIiwiYmFja2dyb3VuZENvbG9yIiwiY2xhc3NOYW1lIiwibWVzc2FnZXMiLCJtZXNzYWdlc1Bvc2l0aW9ucyIsImNoZWNrU3RhdHVzIiwiZmxvdyIsInRleHRDb250ZW50IiwiYWxlcnQiLCJub1NoaXBQbGFjZWRNZXNzYWdlIiwiaGVhZGVyIiwiYnV0dG9uc0FuZEZsb3ciLCJidXR0b25zIiwic3RhcnQiLCJyZXN0YXJ0IiwiZ3JpZHMiLCJkaXNwbGF5cyIsImdyaWREaXYiLCJwbGF5ZXJPbmUiLCJzcXVhcmUiLCJzZXBhcmF0aW9uIiwiaW5uZXJIVE1MIiwiZ3JpZERpdjIiLCJwbGF5ZXJUd28iLCJjb250cm9sbGVycyIsImJvdHRvbSIsImJ1dHRvbkgiLCJidXR0b25WIiwiY2hvaWNlcyIsImoiLCJzaGlwIiwiZ3JpZFRlbXBsYXRlQ29sdW1ucyIsInJlbmRlciIsInBsYXllcjEiLCJuYW1lIiwicGxheWVyMiIsInBsYXllclVuZGVyQXR0YWNrIiwiY2hhbmdlUGxheWVyIiwiZ2V0UGxheWVyVW5kZXJBdHRhY2siLCJwbGF5ZXJUdXJuIiwiYXR0YWNrUmVzdWx0IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwiY29tcHV0ZXJUdXJuIiwicGxheWVyU2hpcFBsYWNlbWVudEgiLCJjaG9zZW5MZW5ndGgiLCJwbGFjZVJlc3VsdCIsImNvbXB1dGVyU2hpcFBsYWNlbWVudEgiLCJwbGF5ZXJTaGlwUGxhY2VtZW50ViIsImNvbXB1dGVyU2hpcFBsYWNlbWVudFYiLCJQbGF5ZXJzIiwiZ2FtZUxvb3AiLCJwbGF5ZXJHcmlkIiwic2hpcHMiLCJwb3NpdGlvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJOdW1iZXIiLCJwcmV2ZW50RGVmYXVsdCIsImRhdGFzZXQiLCJvdmVyIiwiY2hpbGROb2RlcyIsIm51bWJlciIsInBsYXllckNob2ljZUxpbmUiLCJwbGF5ZXJDaG9pY2VDb2x1bW4iLCJyZWxvYWQiLCJsb2NhbE5hbWUiLCJmb3JFYWNoIiwiZ3JpZFRlbXBsYXRlUm93cyIsImNoYW5nZURpc3BsYXlDaG9pY2VzIiwiY29udHJvbGxlciIsIkFib3J0Q29udHJvbGxlciIsImFib3J0Iiwic2lnbmFsIiwicGxheSJdLCJzb3VyY2VSb290IjoiIn0=